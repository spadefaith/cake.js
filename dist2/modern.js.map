{"mappings":"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","sources":["src/scripts/scope.js","src/scripts/storage.js","src/scripts/utils.js","src/scripts/env.js","src/scripts/extends.js","src/scripts/polyfill.js","src/scripts/template-extend.js","src/scripts/plugin.js","src/scripts/attributes.js","src/scripts/templating.js","src/scripts/attrib/utils.js","src/scripts/attrib/data-attr.js","src/scripts/attrib/data-bind.js","src/scripts/attrib/data-class.js","src/scripts/attrib/data-for-update.js","src/scripts/piece.js","src/scripts/attrib/data-for.js","src/scripts/storage/components-store.js","src/scripts/attrib/data-if.js","src/scripts/attrib/data-model.js","src/scripts/attrib/data-toggle.js","src/scripts/storage/AttribConfigStorage.js","src/scripts/cake.js","src/scripts/animate.js","src/scripts/component.js","src/scripts/router.js","src/scripts/persist.js","src/scripts/storage/handler-stat.js","src/scripts/storage/subscriber.js","src/scripts/storage/handler.js","src/scripts/observer.js","src/scripts/form.js","src/app.js"],"sourcesContent":["const StorageKit = require('./storage')();\r\nmodule.exports = function(dependency){\r\n    // const StorageKit = dependency.StorageKit;\r\n    const _hooks = {};\r\n    class Scope {\r\n        constructor(name){\r\n\r\n            this.name = name;\r\n\r\n      \r\n\r\n            this.reactiveData = {};\r\n\r\n            this.notify = [];\r\n\r\n            this.install(this.name);\r\n\r\n            this.pKeys = {};\r\n\r\n            this.sanitize = function(data) {\r\n                const map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#x27;',\r\n                    \"/\": '&#x2F;',\r\n                };\r\n                const reg = /[&<>\"'/]/ig;\r\n                if (typeof data == 'string'){\r\n                    return data.replace(reg, (match)=>(map[match] || \"\"));\r\n                } else {\r\n                    return data;\r\n                };\r\n            };\r\n        }\r\n        registerNotifier(fn){\r\n            this.notify.push(fn);\r\n        }\r\n        install(){\r\n            this.session = new StorageKit({\r\n                child:'object',\r\n                storage:'session',\r\n                name:`_cake_${this.name}_cf`,\r\n            });\r\n            // console.log(this.name, this.session);\r\n            // this.memory = new StorageKit({\r\n            //     child:'object',\r\n            //     storage:'object',\r\n            //     name:`_cake_${this.name}_cf`,\r\n            // });\r\n        }\r\n        notifier(component, obj){\r\n            //called by usually form input;\r\n            //reactive input;\r\n            // const {value, bind} = obj;\r\n            const value = obj.value;\r\n            const bind = obj.bind;\r\n            if (!this.reactiveData[component]){\r\n                this.reactiveData[component] = {};\r\n            };\r\n            this.reactiveData[component][bind] = value;\r\n\r\n            return this.set(bind, value);\r\n\r\n            // console.log(this.reactiveData[component]);\r\n        }\r\n\r\n\r\n        getInputData(type='json', _component){\r\n            let component = _component || this.name;\r\n\r\n            // console.log(this.reactiveData);\r\n\r\n            let data = JSON.parse(JSON.stringify(this.reactiveData[component]));\r\n            //reset the reactiveData when after get;\r\n\r\n            for (let key in data){\r\n                let value = data[key];\r\n                data[key] = this.sanitize(value);\r\n            };\r\n\r\n            if (type == 'json'){\r\n                return data;\r\n            } else if (type == 'formdata'){\r\n                const formData = new FormData;\r\n                for (let key in data){\r\n                    let value = data[key];\r\n\r\n                    formData.append(key, value);\r\n                };\r\n                return formData;\r\n            };\r\n        }\r\n        //a change to get notified when the data of other component is changed;\r\n        hook(component, bind, callback){\r\n\r\n            \r\n            if (!_hooks[component]){\r\n                _hooks[component] = {};\r\n            };\r\n            if (!_hooks[component][bind]){\r\n                //callbacks;\r\n                _hooks[component][bind] = []\r\n            };\r\n            _hooks[component][bind].push(callback);\r\n\r\n\r\n            // console.log(component, bind, callback, _hooks);\r\n        }\r\n        get(key, quick=false){\r\n\r\n            let pkey = this.pKeys[key];\r\n            // if(this.name == 'globalScope'){\r\n            //     // console.trace();\r\n            //     // console.log(106, pkey,key,quick,this.pKeys,pkey)\r\n            //     console.log(112,this.memory, quick);\r\n            //     // console.log(113,this.memory.get('key',true));\r\n            // }\r\n            // if(!pkey){\r\n            //     if(quick){\r\n            //         return `${key} is not found`;\r\n            //     } else {\r\n            //         return Promise.reject(`${key} is not found`);\r\n            //     }\r\n            // }\r\n            if (quick){\r\n                return this.session.get(key, true);\r\n            } else {\r\n                return this.session.get(key);\r\n            };\r\n        }\r\n\r\n        set(key, value){\r\n            let pkey = `${this.name}-${key}`;\r\n            let notify = this.notify;\r\n            let name = this.name;\r\n            let prevValue = null;\r\n\r\n            this.pKeys[key] = pkey;\r\n\r\n            return new Promise(async (res, rej)=>{\r\n                // prevValue = await this.get(key, true);\r\n                // if(key == 'color'){\r\n                //     console.log(118,key, prevValue, value);\r\n                // }\r\n                if (key != 'password'){\r\n                    this.session.createOrUpdate(key, value);\r\n                };\r\n                res();\r\n            }).then(async ()=>{\r\n                // await this.memory.createOrUpdate(key, value);\r\n\r\n\r\n                // if (this.name == 'globalScope'){\r\n\r\n                //     console.log(137,this.memory);\r\n                // };\r\n\r\n\r\n                // console.log(this.memory);\r\n                // if(key == 'color'){\r\n                //     console.log(139, this.memory.getAll());\r\n                // }\r\n\r\n                //custom callback for other component;\r\n\r\n\r\n                //callback for html attributes;\r\n\r\n                // console.log(notify)\r\n\r\n                return Promise.all(notify.map(cb=>{\r\n                    return cb(key, value, prevValue, name).then(()=>{\r\n                        // console.log('finish notified in scope');\r\n\r\n\r\n                        const hooks = _hooks[this.name];\r\n\r\n                \r\n                        if (hooks){\r\n                            const callbacks = hooks[key];\r\n                            if (callbacks){\r\n                                callbacks.forEach(cb=>{\r\n                                    cb(value);\r\n                                });\r\n                            };\r\n                        };\r\n                    });\r\n                }));\r\n            });\r\n        }\r\n    }\r\n    \r\n    return Scope;\r\n\r\n}\r\n\r\n\r\n// module.exports = function(dependency){\r\n//     const StorageKit = dependency.StorageKit;\r\n\r\n//     function Scope(parent, options){\r\n//         this.pKey = options.pKey || '$scope';\r\n//         this.temp = {};\r\n//         this.trap = options.trap;\r\n//         this.notify = [];\r\n//         this.parent = parent;\r\n//         this._clone = {};\r\n//         this._cloneAsync = {};\r\n//         this.whitelist = ['extend', 'set', 'get'];\r\n\r\n//         this.install();\r\n//     };\r\n    \r\n//     Scope.prototype.registerNotifier = function(fn){\r\n//         this.notify.push(fn);\r\n//     };\r\n    \r\n//     Scope.prototype.notifier = function(obj){\r\n//         // console.log(obj);\r\n//         Cake.$scope[obj.bind] = obj.value;\r\n//     };\r\n\r\n//     Scope.prototype.method = function(){\r\n//         let temp = this.temp;\r\n//         let trap = this.trap;\r\n//         let notify = this.notify;\r\n//         let _this = this.parent;\r\n//         let whitelist = this.whitelist;\r\n//         let cloneAsync = this._cloneAsync;\r\n        \r\n//         return {\r\n//             update(keys, fn){\r\n//                 if (!keys.length) return;\r\n//                 for (let k = 0; k < keys.length; k++){\r\n//                     let key = keys[k];\r\n//                     fn(key);\r\n//                 };\r\n//             },\r\n//             defineProperty(key, cloned){\r\n//                 Object.defineProperty(temp, key, {\r\n//                     configurable:true,\r\n//                     get(){\r\n//                         let t = trap.bind(_this)(key) || false;\r\n//                         if (t){\r\n//                             return t;\r\n//                         };\r\n//                         return cloned[key];\r\n//                     },\r\n//                     set(newValue){\r\n//                         if (whitelist.includes(key) || cloneAsync[key]){\r\n//                         } else {\r\n//                             let prevValue = this[key];\r\n//                             for (let n = 0; n < notify.length; n++){\r\n//                                 let fn = notify[n];\r\n//                                 fn(key, newValue, prevValue);\r\n//                             };\r\n//                             cloned[key] = newValue;\r\n//                         }\r\n//                     },\r\n//                 });\r\n//             }\r\n//         };\r\n//     };\r\n\r\n//     Scope.prototype.install = function(){\r\n//         let {update, defineProperty} = this.method();\r\n//         let temp = this.temp;\r\n//         let cloned = this._clone;\r\n//         let clonedAsync = this._cloneAsync;\r\n//         Object.defineProperty(this.parent, this.pKey, {\r\n//             configurable:true,\r\n//             get(){\r\n//                 cloned = Object.assign(cloned, temp);\r\n//                 cloned = Object.assign(cloned, clonedAsync);\r\n\r\n//                 let keys = Object.keys(temp);\r\n//                 update(keys, function(key){\r\n//                     defineProperty(key, cloned);\r\n//                 });\r\n//                 return temp;\r\n//             },\r\n//         });\r\n//     };\r\n    \r\n//     Scope.prototype.watch = function(array){\r\n//         // console.log(array)\r\n//         // console.trace();\r\n//         if (!array) return;\r\n//         let {update, defineProperty} = this.method();\r\n//         let cloned = this._clone;\r\n//         update(array, function(key){\r\n//             defineProperty(key, cloned);\r\n//         });\r\n//         return true;\r\n//     };\r\n\r\n//     Scope.prototype.set = function(key, value, cloned){\r\n//         // console.log(96,key, value);\r\n//         if (this.whitelist.includes(key)){\r\n//             return;\r\n//         };\r\n\r\n//         // console.log(102,this._clone);\r\n\r\n//         let notify = this.notify || [];\r\n//         let prevValue = cloned[key];\r\n//         cloned[key] = value;\r\n\r\n//         Object.assign(this.temp, cloned);\r\n\r\n//         // console.log(109,notify);\r\n\r\n//         return Promise.all(notify.map(cb=>{\r\n//             return cb(key, value, prevValue);\r\n//         }));\r\n//     };\r\n    \r\n//     return Scope;\r\n\r\n// }\r\n\r\n\r\n\r\n","const Utils = require('./utils');\r\nmodule.exports = function(){\r\n    /**\r\n     * this class is use to unified the use of storage, in\r\n     * object for memory and storages for sessionStorage/localStorage;\r\n     */\r\n    // const Utils = dependency.Utils;\r\n    // const appName = deoendenvy.appName;\r\n\r\n    function typeOf(_obj){\r\n        if(!_obj){\r\n            return null;\r\n        };\r\n        return (_obj).constructor.name.toLowerCase();\r\n    };\r\n    function ObjectForEach (obj, fn){\r\n        for (let key in obj){\r\n            if (obj.hasOwnProperty(key)){\r\n                \r\n                fn(obj[key], key);\r\n            };\r\n        };\r\n    };\r\n    function ObjectMerge (obj, value, key){\r\n        obj = Object.assign(obj, {[key]:value});\r\n    };\r\n    function isNull(d){\r\n        return d === null;\r\n    };\r\n    function isUndefined(d){\r\n        return d === undefined;\r\n    };\r\n    function isArray(_obj){\r\n        return typeOf(_obj) == 'array';\r\n    };\r\n    function isObject(_obj){\r\n        return typeOf(_obj) == 'object';\r\n    };\r\n    var hasInArray = function(src, id){\r\n        var has = null;\r\n        for (var i = 0; i < src.length; i++){\r\n            var item = src[i];\r\n            if (typeOf(id) == 'object'){\r\n                var obj = id;\r\n                var key = Object.keys(id)[0];\r\n                var value = obj[key];\r\n                if (typeOf(item) == 'object'){\r\n                    var test = item[key] == value;\r\n                    if (test){\r\n                        has = i;\r\n                        break;\r\n                    };\r\n                };\r\n            } else if(typeOf(id) != 'array'){\r\n                var test = id == item;\r\n                if (test){\r\n                    has = i;\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n        return has;\r\n    };\r\n    var hasInObject = function(src, id){\r\n        var key = null;\r\n        var type = typeOf(id); \r\n        if (type == 'object'){\r\n            var _key = Object.keys(id)[0];\r\n            if (src[key] != undefined && src[key] == id[_key]){\r\n                key = _key;\r\n            };\r\n        } else if(type == 'string') {\r\n            key = id;\r\n        };\r\n        return key;\r\n    };\r\n    var hasItem = function(src, id){\r\n        var has = null;\r\n        if (typeOf(src) == 'array'){\r\n            has = hasInArray(src, id);\r\n        } else if (typeOf(src) == 'object'){\r\n            has = hasInObject(src, id);\r\n        };\r\n        return has;\r\n    };\r\n    var STORAGE = class{\r\n        constructor(type, name, child){\r\n            this.type = type;\r\n            this.name = `${Utils.instanceID()}-${name}`;\r\n            this.child = child;\r\n            this.cache = {};\r\n            if (typeOf(this.child) == 'string'){\r\n                this.child = child=='array'?[]:child=='object'?{}:false;\r\n            };\r\n        }\r\n        init(save){\r\n            if (this[this.type]){\r\n                this[this.type](save);\r\n                return true;\r\n            };\r\n            return false;\r\n        }\r\n        open(){\r\n            if (this.type == 'session'){\r\n                var decoded = JSON.parse(sessionStorage[this.name]);\r\n                // if (this.name == '_cake_persistent'){\r\n                //     console.log(2503,decoded);\r\n                // };\r\n                return decoded[this.name];\r\n            } else if(this.type == 'local'){\r\n                var decoded = JSON.parse(localStorage[this.name]);\r\n                return decoded[this.name];\r\n            } else {\r\n                // console.log(119,this.type,this.cache);\r\n                return this.cache[this.name];\r\n            };\r\n        }\r\n        close(storage){\r\n            this.child = storage;\r\n            this.recache();\r\n            // console.log(94,this.name, storage);\r\n            return this.init(true);\r\n        }\r\n        recache(){\r\n            this.cache[this.name] = this.child;\r\n        }\r\n        create(){\r\n            // console.log(93, this.name, this.cache);\r\n            this.cache[this.name] = this.child;\r\n            \r\n        }\r\n        array(){\r\n            this.create();\r\n        }\r\n        object(issave){\r\n            this.create();\r\n            // console.log(120,this.type,this.cache);\r\n            // console.trace();\r\n        }\r\n        session(save){\r\n            if(!save){\r\n                this.recache();\r\n            };\r\n            try{\r\n                if (!sessionStorage[this.name] && !save){\r\n                    sessionStorage.setItem(this.name, JSON.stringify(this.cache));\r\n                } else if (save){\r\n                    sessionStorage.setItem(this.name, JSON.stringify(this.cache));\r\n                } else {\r\n\r\n                };\r\n            } catch(err){\r\n                this.recache();\r\n            };\r\n        }\r\n        local(save){\r\n            // this.verifyLocalStorage();\r\n            if(!save){\r\n                this.recache();\r\n            };\r\n            try{\r\n                if (!localStorage[this.name] && !save){\r\n                    localStorage.setItem(this.name, JSON.stringify(this.cache));\r\n                } else if (save){\r\n                    localStorage.setItem(this.name, JSON.stringify(this.cache));\r\n                } else {\r\n\r\n                };\r\n            } catch(err){\r\n                this.recache();\r\n            };\r\n        }\r\n        // verifyLocalStorage(){\r\n        //     if(!sessionStorage.reset){\r\n        //         sessionStorage.setItem('reset', false);\r\n        //         localStorage.clear();\r\n        //     };\r\n        // }\r\n    };\r\n    var methods = {\r\n        create:function(storage, data){\r\n\r\n            if(isArray(storage)){\r\n                let unique = new Set(storage);\r\n                if (typeOf(data) == 'array'){\r\n                    data.forEach(i=>{\r\n                        unique.add(i);\r\n                    });\r\n                } else {\r\n                    unique.add(data)\r\n                };\r\n                storage = Array.from(unique)\r\n            } else if (isObject(storage)){\r\n                if (isObject(data)){\r\n                    ObjectForEach(data, function(value, key){\r\n                        storage[key] = value;\r\n                    });\r\n                } else {\r\n                    storage[data] = data;\r\n                };\r\n            };\r\n\r\n            return storage;\r\n        },\r\n        createOrUpdate:function(storage, data){\r\n            var has = hasItem(storage, data);\r\n            if (typeOf(storage) == 'array'){\r\n                if (!isNull(has)){\r\n                    storage[has] = data;\r\n                } else {\r\n                   storage.includes(data);\r\n                }\r\n            } else if (typeOf(storage) == 'object'){\r\n                if (isNull(has)){\r\n                    if (isObject(data)){\r\n                        ObjectForEach(data, function(value, key){\r\n                            ObjectMerge(storage, value, key);\r\n                        });\r\n                    } else {\r\n                        storage[data] = data;\r\n                    };\r\n                } else {\r\n                    storage[has] = data;\r\n                };\r\n            };\r\n            return storage;\r\n        },\r\n        remove:function(storage, id){\r\n            if (typeOf(id) == 'string'){\r\n                var has = hasItem(storage, id);\r\n                if (typeOf(storage) == 'object'){\r\n                    delete storage[has];\r\n                } else if (typeOf(storage) == 'array'){\r\n                    var arr = [];\r\n                    for (var i = 0; i < storage.length; i++){\r\n                        if (i != has){\r\n                            arr.push(storage[i]);\r\n                        } else {continue};\r\n                    };\r\n                    storage = arr;\r\n                };\r\n                return storage;\r\n            } else if (typeOf(id) == 'object'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = id[key] != undefined && id[key] == value;\r\n                    return !test;\r\n                });\r\n            } else if (typeOf(id) == 'array'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = id.contains(key);\r\n                    return !test;\r\n                });\r\n            };\r\n            if (isNull(has)){\r\n                return false;\r\n            };\r\n        },\r\n        get:function(storage,id){\r\n            var type = typeOf(id);\r\n            if (type == 'string'){\r\n                var has = hasItem(storage, id);\r\n\r\n                if (has == 0 || has){\r\n                    return storage[has];\r\n                };\r\n            } else if (type == 'object'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = !isUndefined(id[key]) && id[key] == value;\r\n                    return test;\r\n                });\r\n            } else if (type == 'array'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = id.contains(key);\r\n                    return test;\r\n                });\r\n            }\r\n            return null;\r\n        },\r\n        getNot:function(storage,id){\r\n            var type = typeOf(id);\r\n            if (type == 'string'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = key != id;\r\n                    return test;\r\n                });\r\n            } else if (type == 'object'){\r\n                return Object.filter(storage, function(value, key){\r\n                    return Object.some(id,function(_value, _key){\r\n                        var test = _key == key && _value == value;\r\n\r\n                        return !test;\r\n                    })\r\n                });\r\n            } else if (type == 'array'){\r\n                return Object.filter(storage, function(value, key){\r\n                    var test = !id.contains(key);\r\n                    return test;\r\n                });\r\n            }\r\n            return null;\r\n        },\r\n        getAll:function(storage){\r\n            return storage;\r\n        },\r\n    };\r\n    var USB = class{\r\n        constructor(_obj){\r\n            this.name = _obj.name;\r\n            this.storageType = _obj.storage;\r\n            this.child = _obj.child || 'object';\r\n            try {\r\n                if (typeOf(this.child) == 'string'){\r\n                    this.child = this.child == 'array'?[]:this.child=='object'?{}:null;\r\n                };\r\n\r\n\r\n\r\n            } catch(err){\r\n                if (this.storageType == 'session'){\r\n                    sessionStorage.clear();\r\n                } else if (this.storageType == 'local'){\r\n                    localStorage.clear();\r\n                };\r\n\r\n                if (typeOf(this.child) == 'string'){\r\n                    this.child = this.child == 'array'?[]:this.child=='object'?{}:null;\r\n                };\r\n\r\n            };\r\n            if (!['array', 'object'].includes(typeOf(this.child))){\r\n                throw new Error('the child must be an object or array type.');\r\n            };\r\n\r\n\r\n            this.storage = new STORAGE(this.storageType, this.name, this.child);\r\n            this.storage.init();\r\n        }\r\n        has(id){\r\n            var storage = this.storage.open();\r\n            var has = hasItem(storage, id);\r\n            return isNull(has)?false:has;\r\n        }\r\n        get(id, quick){\r\n            if(quick){\r\n                var storage = this.storage.open();\r\n                \r\n                return methods.get(storage, id);\r\n            } else {\r\n                return new Promise((res, rej)=>{\r\n                    setTimeout(()=>{\r\n                        var storage = this.storage.open();\r\n                        res(storage);\r\n                    });\r\n                }).then(storage=>{\r\n                    // console.log(342, storage)\r\n                    return methods.get(storage, id);\r\n                });\r\n            }\r\n        }\r\n        getNot(id){\r\n            var storage = this.storage.open();\r\n            return methods.getNot(storage, id);\r\n        }\r\n        getAll(){\r\n            var storage = this.storage.open();\r\n            return Promise.resolve(storage);\r\n        }\r\n        update(id, update){\r\n            var storage = this.storage.open();\r\n            var has = hasItem(storage, id);\r\n            if (has == 0 || has){\r\n                storage = methods.createOrUpdate(storage, data);\r\n                return this.storage.close(storage);\r\n            };\r\n            return false;\r\n        }\r\n        createOrUpdate(data){\r\n            if (arguments.length > 1){\r\n                let key = arguments[0];\r\n                let value = arguments[1];\r\n                data = {[key]:value};\r\n            };\r\n            var storage = this.storage.open();\r\n            storage = methods.createOrUpdate(storage, data);\r\n            const close = this.storage.close(storage);\r\n            // console.log(377, storage);\r\n\r\n            return close;\r\n        }\r\n        create(data){\r\n            var storage = this.storage.open();\r\n            storage = methods.create(storage, data);\r\n\r\n\r\n            return this.storage.close(storage);\r\n        }\r\n        remove(id){\r\n            var storage = this.storage.open();\r\n            storage = methods.remove(storage, id);\r\n            return this.storage.close(storage);\r\n        }\r\n    };\r\n    return USB;\r\n};","var global = {};\r\nconst TYPES = {\r\n    typeof: function(ctx){\r\n        switch(true){\r\n            case typeof ctx == 'string': return 'string';\r\n            case typeof ctx == 'number': return 'number';\r\n            case ctx instanceof Array: return 'array';\r\n            case ctx instanceof Function: return 'function';\r\n            case ctx instanceof HTMLCollection: return 'htmlcollection';\r\n            case ctx instanceof NodeList: return 'htmlnodelist';\r\n            case ctx instanceof Element: return 'domlement';\r\n            case ctx instanceof Object: return 'object';\r\n        };\r\n    },\r\n    isArray:function(ctx){\r\n        return this.typeof(ctx) == 'array';\r\n    },\r\n    isObject:function(ctx){\r\n        return this.typeof(ctx) == 'object';\r\n    },\r\n    isNumber:function(ctx){\r\n        return this.typeof(ctx) == 'number';\r\n    },\r\n    isString:function(ctx){\r\n        return this.typeof(ctx) == 'string';\r\n    },\r\n    isHTMLCollection:function(ctx){\r\n        return this.typeof(ctx) == 'htmlcollection';\r\n    },\r\n    isNodeList:function(ctx){\r\n        return this.typeof(ctx) == 'htmlnodelist';\r\n    },\r\n    isElement:function(ctx){\r\n        return this.typeof(ctx) == 'domlement';\r\n    },\r\n    isFunction:function(ctx){\r\n        return this.typeof(ctx) == 'function';\r\n    },\r\n};\r\n\r\nconst LOOP = {\r\n    each:function(ctx, fn, type){\r\n        if (type == 'object'){\r\n            var i = 0;\r\n            for (var key in ctx){\r\n                if (ctx.hasOwnProperty(key)){\r\n                    fn({key, value:ctx[key]}, i);\r\n                    i = i + 1;\r\n                };\r\n            };\r\n        } else {\r\n            for (var a = 0; a < ctx.length; a++){\r\n                fn(ctx[a], a);\r\n            }\r\n        };\r\n    },\r\n    map:function(ctx, fn){\r\n        var type = TYPES.isArray(ctx) || ctx.length ? 'array': 'object';\r\n        var st = ctx.length &&  type == 'array'?[]:{};\r\n        this.each(ctx, function(obj, index){\r\n            var r = fn(obj, index);\r\n            if (type == 'object'){\r\n                st[r.key] = r.value;\r\n            } else {\r\n                st.push(r)\r\n            };\r\n        }, type);\r\n        return st;\r\n    },\r\n    reduce: function(ctx, accu, fn){\r\n        var type = TYPES.typeof(ctx);\r\n        this.each(ctx, function(obj, index){\r\n            accu = fn(obj,accu, index);\r\n        }, type);\r\n        return accu;\r\n    },\r\n    filter:function(ctx, fn){\r\n        var type = TYPES.isArray(ctx) || ctx.length ? 'array': 'object';\r\n        var st = ctx.length && type == 'array'?[]:{};\r\n        this.each(ctx, function(obj, index){\r\n            var r = fn(obj, index);\r\n            if (r){\r\n                if (type == 'object'){\r\n                    st[obj.key] = obj.value;\r\n                } else {\r\n                    st.push(obj.value);\r\n                };\r\n            };\r\n        }, type);\r\n        return st;\r\n    },\r\n};\r\n\r\nconst OBJECT = {\r\n    dictionary:function(obj,path){\r\n        if(path){\r\n            path = path.split('.');\r\n        };\r\n        for (let p = 0; p < path.length; p++){\r\n            if(obj[p]){\r\n                obj = obj[p];\r\n            } else{\r\n                obj = null;\r\n                break;\r\n            };\r\n        };\r\n        return obj;\r\n    }\r\n};\r\n\r\nconst STRING = {\r\n    removeWhiteSpace(str){\r\n        return String(str).split(\" \").join(\"\");\r\n    },\r\n}\r\n\r\nconst OTHERS = {\r\n    perf:function(fn){\r\n        console.time('test');\r\n        fn();\r\n        console.timeEnd('test');\r\n    },\r\n    logTest:function(a, ops, b){\r\n        try { a = JSON.parse(a)}catch(err){}\r\n        try { b = JSON.parse(b)}catch(err){}\r\n        switch (ops) {\r\n            case '==':{\r\n                return a == b;\r\n            };\r\n            case '!=':{\r\n                return a != b;\r\n            };\r\n            case '<':{\r\n                return a < b;\r\n            };\r\n            case '>':{\r\n                return a > b;\r\n            };\r\n            case '>=':{\r\n                return a >= b;\r\n            };\r\n            case '<=':{\r\n                return a <= b;\r\n            };\r\n        }\r\n    },\r\n    toUrlSearchParams:function(obj,istrim=true){\r\n        let searchParams = \"\";\r\n        for(let key in obj){\r\n            if(obj.hasOwnProperty(key)){\r\n                let val = obj[key];\r\n                if(val.toString().includes('Object')){\r\n                    val = JSON.stringify(val);\r\n                };\r\n                if(istrim && val){\r\n                    searchParams += `${encodeURI(key)}=${encodeURI(val)}&`;\r\n                } else {\r\n                    searchParams += `${encodeURI(key)}=${encodeURI(val)}&`;\r\n                };\r\n            };\r\n        };\r\n        return searchParams.slice(0, searchParams.length - 1);\r\n    },\r\n    sanitize:function(string, exclude=[]){\r\n        if(typeof string != 'string'){\r\n            return string;\r\n        };\r\n        let map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#x27;',\r\n            \"/\": '&#x2F;',\r\n        };\r\n        map = Object.keys(map).reduce((accu, key)=>{\r\n            if(!exclude.includes(key)){\r\n                accu[key] = map[key];\r\n            };\r\n            return accu;\r\n        },{});\r\n   \r\n        const reg = /[&<>\"'/]/ig;\r\n        return string.replace(reg, (match)=>{\r\n            return map[match] || match;\r\n        });\r\n    },\r\n    toFormData:function(form, options={}){\r\n        const controls = [];\r\n        const textareas = form.querySelectorAll('TEXTAREA');\r\n        const inputs = form.querySelectorAll('INPUT');\r\n        const selects = form.querySelectorAll('SELECT');\r\n        \r\n\r\n        function loop(arr, cont){\r\n            for (let i = 0; i < arr.length; i++){\r\n                cont.push(arr[i]);\r\n            };\r\n        };\r\n\r\n        loop(textareas, controls);\r\n        loop(inputs, controls);\r\n        loop(selects, controls);\r\n\r\n\r\n        let o = {};\r\n\r\n        for (let i = 0; i < controls.length; i++){\r\n            let control = controls[i];\r\n            let key = control.name || control.id;\r\n\r\n            if(key && [\"{{\",\"((\",\"[[\",\"<<\",\"%%\",\"&&\"].includes(key)){\r\n\r\n            } else {\r\n                let type;\r\n                const element = form[key];\r\n\r\n                \r\n                if(element){\r\n\r\n                    if(element.closest && !element.closest('.cake-template')){\r\n                        const tag = element.tagName;\r\n                        \r\n                        if(tag == 'INPUT' && element.getAttribute('type') == 'checkbox'){\r\n                            value = element.checked;\r\n                        } else {\r\n                            value = this.sanitize(element.value,options.sanitize);\r\n                        };\r\n                        \r\n                        if(options.json){\r\n                            if(options.trim){\r\n                                if(value != \"\"){\r\n                                    o[key] = value;\r\n                                };\r\n                            } else {\r\n                                o[key] = value;\r\n                            }; \r\n                        } else {\r\n                            fd.append(key, value);\r\n                        }\r\n                    };\r\n    \r\n                };\r\n            };\r\n        };\r\n        \r\n\r\n        if(options.json){\r\n            return o;\r\n        } else {\r\n            let fd = new FormData();\r\n            for (let key in o){\r\n                if (o.hasOwnProperty(key)){\r\n                    fd.append(key, o[key]);\r\n                };\r\n            };\r\n            return fd;\r\n        };\r\n    },\r\n    splitBySpace:function(string, fn){\r\n        if(string){\r\n            string = string.split(\" \");\r\n            if(TYPES.isArray(string)){\r\n                for (let i = 0; i < string.length; i++){\r\n                    fn(string[i]);\r\n                };\r\n            };\r\n        }\r\n    },\r\n    toArray(arrayLike){\r\n        let a = [];\r\n        if(!arrayLike.length){\r\n            return a;\r\n        };\r\n        for (let i = 0; i < arrayLike.length; i++){\r\n            a.push(arrayLike[i]);\r\n        };\r\n        return a;\r\n    },\r\n    timeOut(fn, time=1){\r\n        setTimeout(()=>{\r\n            fn();\r\n        }, time);\r\n    },\r\n    instanceID(){\r\n        //to have unique identifier every web app using this, in sessionStorage or localStorage;\r\n        return location.origin;\r\n    },\r\n    recurse(array, callback){\r\n        return new Promise((res, rej)=>{\r\n            try {\r\n                let l = array.length;\r\n                let index = 0;\r\n                const rec = (()=>{\r\n                    if(l > index){\r\n                        callback(array[index]);\r\n                        index += 1;\r\n                        rec();\r\n                    } else {\r\n                        res();\r\n                    };\r\n                });rec();\r\n            } catch(err){\r\n                rej(err.message);\r\n            };\r\n        });\r\n    },\r\n    browser(){\r\n        // Return cached result if avalible, else get result then cache it.\r\n\r\n\r\n        if (window._browser)\r\n        return window._browser;\r\n        // Opera 8.0+\r\n        var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n        // Firefox 1.0+\r\n        var isFirefox = typeof InstallTrigger !== 'undefined';\r\n        // Safari 3.0+ \"[object HTMLElementConstructor]\" \r\n        var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || safari.pushNotification);\r\n        // Internet Explorer 6-11\r\n        var isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n        // Edge 20+\r\n        var isEdge = !isIE && !!window.StyleMedia;\r\n        // Chrome 1+\r\n        var isChrome = !!window.chrome && !!window.chrome.webstore;\r\n        // Blink engine detection\r\n        var isBlink = (isChrome || isOpera) && !!window.CSS;\r\n        return window._browser =\r\n            isOpera ? 'Opera' :\r\n            isFirefox ? 'Firefox' :\r\n            isSafari ? 'Safari' :\r\n            isChrome ? 'Chrome' :\r\n            isIE ? 'IE' :\r\n            isEdge ? 'Edge' :\r\n            isBlink ? 'Blink' :\r\n            \"Don't know\";\r\n    },\r\n    isOpera(){\r\n        return this.browser == 'Opera';\r\n    },\r\n    isFirefox(){\r\n        return this.browser() == 'Firefox';\r\n    },\r\n    isSafari(){\r\n        return this.browser == 'Safari';\r\n    },\r\n    isChrome(){\r\n        return this.browser == 'Chrome';\r\n    },\r\n    isIE(){\r\n        return this.browser == 'IE';\r\n    },\r\n    isEdge(){\r\n        return this.browser == 'Edge';\r\n    },\r\n    isBlink(){\r\n        return this.browser == 'Blink';\r\n    },\r\n    device(){\r\n        if(navigator.userAgent.includes('Android')){\r\n            return 'android';\r\n        } else if(/iPhone|iPad|iPod/i.test(navigator.userAgent)){\r\n            return 'IOS'\r\n        } else {\r\n            return 'desktop';\r\n        };\r\n    },\r\n    isAndroid(){\r\n        return this.device() == 'android';\r\n    },\r\n    isIOS(){\r\n        return this.device() == 'ios';\r\n    },\r\n    isDesktop(){\r\n        return this.device() == 'desktop';\r\n    },\r\n    escapeRegExp(text) {\r\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n    }\r\n};\r\n\r\ntry {\r\n    global.UTILS = {...LOOP, ...TYPES, ...OTHERS, ...STRING};\r\n} catch (err){\r\n    global.UTILS = {};\r\n\r\n    var iter = LOOP.each;\r\n    iter(LOOP, function(key, value){\r\n        global.UTILS[key] = value;\r\n    });\r\n    iter(TYPES, function(key, value){\r\n        global.UTILS[key] = value;\r\n    });\r\n    iter(OTHERS, function(key, value){\r\n        global.UTILS[key] = value;\r\n    });\r\n    iter(STRING, function(key, value){\r\n        global.UTILS[key] = value;\r\n    });\r\n};\r\n\r\nmodule.exports = global.UTILS;",";(function(global){\r\n    global.env = {\r\n        destructure:true,\r\n    };\r\n    const env = global.env;\r\n    // try {let {a} = {a:true};} catch(err){env.destructure = false};\r\n    Promise.prototype.ObjectType = 'Promise';\r\n})(window);\r\n\r\n\r\n","(function(global){\r\n    HTMLCollection.prototype.toArray = function(){\r\n        let b = [];\r\n        for (let a = 0; a < this.length ;a++){\r\n            b[a] = this[a];\r\n        }\r\n    \r\n        return b;\r\n    };\r\n    NodeList.prototype.toArray = function(){\r\n        \r\n        let b = [];\r\n        let index = -1;\r\n        let length = this.length;\r\n        while(++index < length){\r\n            b[index] = this[index];\r\n        };\r\n        // console.trace();\r\n        // console.log(b);\r\n        return b;\r\n    };\r\n    Object.cache = Object.create(null);\r\n\r\n    Object.caching = (name)=>{\r\n        const obj = Object.cache;\r\n        if(!obj[name]){\r\n            obj[name] = {};\r\n        };\r\n\r\n        return {\r\n            set(key, value){\r\n                obj[name][key] = value;\r\n                return true;\r\n            },\r\n            get(key){\r\n                return obj[name][key];\r\n            },\r\n        };\r\n    };\r\n    \r\n    String.prototype.toHyphen = function(){\r\n        let _StringCache = Object.cache;\r\n        let cvt = null;\r\n        let str = this;\r\n\r\n        if (!_StringCache.toHyphen){\r\n            _StringCache.toHyphen = {};\r\n        };\r\n        if (_StringCache[str]){\r\n            cvt = _StringCache[str];\r\n        };\r\n\r\n        if (cvt != undefined){\r\n            return cvt;\r\n        };\r\n        let splitted = str.split('');\r\n        // console.log(splitted)\r\n        let ss = \"\", i = -1;\r\n        while (++i < splitted.length){\r\n            let s = splitted[i];\r\n            switch(i){\r\n                case 0:{\r\n                    ss += s.toLowerCase();\r\n                } break;\r\n                default:{\r\n                    s.charCodeAt() < 91 && (ss += '-');\r\n                    ss += s.toLowerCase();\r\n                }\r\n            }\r\n        };\r\n        _StringCache[str] = ss;\r\n        cvt = ss;\r\n\r\n        \r\n        return cvt;\r\n    };\r\n\r\n    String.prototype.toProper = function(){\r\n        let str = this;\r\n        let cache = Object.caching('toProper').get(str);\r\n        if(cache){\r\n            return cache;\r\n        } else {\r\n            let first = str.substring(0,1);\r\n            let rest = str.slice(1);\r\n            let proper = `${first.toUpperCase()}${rest}`;\r\n            Object.caching('toProper').set(str, proper);\r\n            return proper;\r\n        };\r\n    };\r\n    String.prototype.removeSpace = function(){\r\n        return this.split(\" \").join(\"\");\r\n    };\r\n    \r\n    String.prototype.toCamelCase = function(){\r\n        let str = this.toLowerCase();\r\n        let _StringCache = Object.cache;\r\n\r\n        let cvt =null;\r\n\r\n        if(!_StringCache.toCamel){\r\n            _StringCache.toCamel = {};\r\n        };\r\n        _StringCache = _StringCache.toCamel;\r\n\r\n        if(_StringCache[str]){\r\n            return _StringCache[str];\r\n        } else {\r\n            let split = str.split('-');\r\n            if (split.length == 1){\r\n                return str;\r\n            };\r\n            let join = \"\";\r\n            let i = -1;\r\n            let length = split.length;\r\n            while (++i < length){\r\n                let str = split[i];\r\n                switch(i){\r\n                    case 0:{join += str};break\r\n                    default:{\r\n                        let first = str.substring(0,1).toUpperCase();;\r\n                        let second = str.substring(1);\r\n                        join += (first+second);\r\n                    } break;\r\n                }\r\n            };\r\n            _StringCache[str] = join;\r\n            return join;\r\n        };\r\n    };\r\n    \r\n    HTMLElement.prototype.querySelectorIncluded = function(selector, attr, val){\r\n        let q = this.querySelector(selector);\r\n        return (q)?q:(()=>{\r\n            switch (true){\r\n                case !attr && !val:{\r\n                    let qu = this.closest(selector);\r\n                    if (qu == this){\r\n                        q = qu;\r\n                    };\r\n                };\r\n                break;\r\n                case !!attr && !!val:{\r\n                    \r\n                    q = this.getAttribute(attr) == val?this:null;\r\n                };\r\n                break;\r\n                case !!attr && !val:{\r\n                    q = this.getAttribute(attr)?this:null;\r\n                }\r\n                break;\r\n            };\r\n            return q;\r\n        })();\r\n    };\r\n\r\n\r\n    \r\n    HTMLElement.prototype.querySelectorAllIncluded = function(selector, attr, val){\r\n        let q;\r\n        try {\r\n            q = this.querySelectorAll(selector);\r\n            q && (q = q.toArray());\r\n        } catch(err){\r\n            q = [];\r\n        };\r\n\r\n        if(selector){\r\n            q = this.querySelectorAll(selector).toArray();\r\n        } else if (attr && val){\r\n            q = this.querySelectorAll(`[${attr}=${val}]`).toArray();\r\n            if(this.dataset[attr] == val){\r\n                q.push(this);\r\n            };\r\n        } else if (attr && !val){\r\n            q = this.querySelectorAll(`[${attr}]`).toArray();\r\n            if(!!this.dataset[attr]){\r\n                q.push(this);\r\n            };\r\n        };\r\n\r\n        switch (true){\r\n            case !attr && !val:{\r\n                let qu = this.closest(selector);\r\n                qu == this && q.push(qu);\r\n            };\r\n            break;\r\n            case attr && val:{\r\n                // this.getAttribute(attr) == val && q.push(this);\r\n            };\r\n            break;\r\n            case attr && !val:{\r\n                \r\n                // this.getAttribute(attr) && q.push(this);\r\n            }\r\n            break;\r\n        };\r\n        return q;\r\n    };\r\n    \r\n    HTMLDocument.prototype.querySelectorIncluded = function(selector){\r\n        return this.querySelector(selector);\r\n    };\r\n    \r\n    HTMLDocument.prototype.querySelectorAllIncluded = function(selector){\r\n        return this.querySelectorAll(selector);\r\n    };\r\n    \r\n    \r\n    \r\n    Array.prototype.toggler = function(dataName, activeClass){\r\n        for (let t = 0; t < this.length; t++){\r\n            let node = this[t];\r\n            let name = node.dataset.name;\r\n            if (name == dataName){\r\n                node.classList.toggle(activeClass);\r\n            } else {\r\n                if (node.classList.contains(activeClass)){\r\n                    node.classList.toggle(activeClass);\r\n                };\r\n            };\r\n        };\r\n    };\r\n    \r\n    HTMLElement.prototype.Ref = function(){\r\n        let n = '_cakes_storage';\r\n        !this[n] && (this._cakes_storage = {})\r\n        let storage = this[n];\r\n        return {\r\n            set(key, value){\r\n                storage[key] = value;\r\n            },\r\n            get(key){\r\n                return storage[key];\r\n            },\r\n            getAll(key){\r\n                return storage;\r\n            },\r\n            remove(key){\r\n                delete storage[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    HTMLElement.prototype.replaceDataSrc = function(){\r\n        let srcs = this.querySelectorAllIncluded(null, 'data-src',null);\r\n        for (let s = 0; s < srcs.length; s++){\r\n            let el = srcs[s];\r\n            el.setAttribute('src', el.dataset.src);\r\n            el.removeAttribute('data-src');\r\n        };\r\n    };\r\n\r\n\r\n    Object.keep = function(path, data){\r\n        let rawdirs = path.split(\".\");\r\n        let dirs = rawdirs.slice(1);\r\n        let isArray = data.constructor.name=='Array';\r\n        let ins = isArray?[]:{};\r\n\r\n        const has = function(obj, prop, value){\r\n            if(!obj[prop]){\r\n                obj[prop] = value==undefined?{}:value;\r\n            };\r\n            return obj[prop];\r\n        };\r\n\r\n        if(rawdirs[0]){\r\n            has(Object.cache, rawdirs[0], (dirs.length)?{}:data);\r\n        };\r\n\r\n        let orig = Object.cache[rawdirs[0]];\r\n\r\n        for (let i = 0; i < dirs.length; i++){\r\n            let dir = dirs[i];\r\n            let last = dirs.length -1 == i;\r\n            \r\n            if(last){\r\n                orig = has(orig, dir, ins);\r\n                if(isArray){\r\n                    orig = orig.concat(data);\r\n                } else {\r\n                    orig = Object.assign(orig[dir], data);\r\n                };\r\n            } else {\r\n                orig = has(orig, dir, {});\r\n            };\r\n        };\r\n        return Object.cache[rawdirs[0]];\r\n    };\r\n    \r\n})(window);","if (!Object.keys) {\r\n\r\n    Object.keys = function(obj) {\r\n      var keys = [];\r\n  \r\n      for (var i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n          keys.push(i);\r\n        }\r\n      }\r\n  \r\n      return keys;\r\n    };\r\n}\r\n",";(function(){\r\n    customElements.define('sub-template',\r\n  class extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n  \t}\r\n    connectedCallback(){\r\n        this.replace(this);\r\n    }\r\n    replace(subTemplate){\r\n        let ref = subTemplate.dataset.template;\r\n        let refEl = document.getElementsByName(ref);\r\n        \r\n        \r\n        if (refEl.length > 1){\r\n            console.error(`template with name ${ref} has more than one reference.`)\r\n            return ;\r\n        };\r\n        if (!refEl){\r\n            subTemplate.remove();\r\n            throw new Error(`${ref} is not found!`);\r\n\r\n        };\r\n        if (refEl[0]){\r\n            let temp = refEl[0];\r\n            if (temp.constructor.name == \"HTMLTemplateElement\"){\r\n                temp = temp.content.cloneNode(true).firstElementChild;\r\n                if (!temp) {return;};\r\n                let attrs = subTemplate.attributes;\r\n                for (let a = 0; a < attrs.length ;a++){\r\n                    let attr = attrs[a];\r\n                    if (attr.name != 'data-template'){\r\n                        temp.setAttribute(attr.name, attr.value);\r\n                    };\r\n                };\r\n                // console.log(temp);\r\n                subTemplate.replaceWith(temp);\r\n            } else {\r\n                throw new Error(`${ref} is not referred to a Template Element!`);\r\n            };\r\n        };\r\n    }\r\n});\r\nHTMLTemplateElement.prototype.replaceSubTemplate = function(el){\r\n    let subTemplates = el.getElementsByTagName('sub-template');\r\n    if (subTemplates){\r\n        subTemplates = subTemplates.toArray();\r\n        for (let s = 0; s < subTemplates.length; s++){\r\n            let subTemplate = subTemplates[s];\r\n            customElements.get('sub-template').prototype.replace(subTemplate);\r\n        };\r\n    };\r\n}\r\nHTMLTemplateElement.prototype.collectContent = function(){\r\n    let template = this;\r\n    let cf = null;\r\n    let temp =template.cloneNode(true);\r\n    let fr = document.createDocumentFragment();\r\n    let styles = temp.content.querySelector('style');\r\n    if (styles){\r\n        fr.appendChild(styles);\r\n    }\r\n    let others = [];\r\n    for (let o = 0; o < temp.content.children.length; o++){\r\n        let el = temp.content.children[0];\r\n        this.replaceSubTemplate(el);\r\n        others.push(el);\r\n    }\r\n    cf = {style:fr.children[0], others}\r\n    return cf; \r\n};\r\nHTMLTemplateElement.prototype.parseStyle = function(style){\r\n    if (!style) return false;\r\n    var styles = style.textContent.trim();\r\n    if (!styles.length) { return;}\r\n    let obj = {};\r\n\r\n    let sel = \"\";\r\n    let splitted = styles.split(\"}\");\r\n    for (let sp = 0; sp < splitted.length; sp++){\r\n        let item = splitted[sp];\r\n        let _sp1 = item.split(\"{\");\r\n        let sel = _sp1[0];\r\n        let style = _sp1[1];\r\n        // let [sel, style] = item.split(\"{\");\r\n        if(!!sel){\r\n            obj[sel.trim()] = (()=>{\r\n                let n = false;\r\n                let s = \"\";\r\n                let splitted = style.split(\"\");\r\n                for (let sp = 0; sp < splitted.length; sp++){\r\n                    let item = splitted[sp];\r\n                    if(item == \"\\n\"){\r\n                        n = true;\r\n                    } else if (item == \" \"){\r\n                        if(n){\r\n\r\n                        } else {\r\n                            s += item;\r\n                        };\r\n                    } else {\r\n                        n = false;\r\n                        s += item;\r\n                    };\r\n                };\r\n                return s;\r\n            })();\r\n        };\r\n    };\r\n\r\n\r\n    return obj;\r\n};\r\n\r\nHTMLTemplateElement.prototype.parseHTML = function(others){\r\n    if (others){\r\n        var parent = document.createElement('HTML');\r\n        for (let o = 0; o < others.length; o++){\r\n            let other = others[o];\r\n            parent.append(other);\r\n        };\r\n    };\r\n    return parent || false;\r\n};\r\n\r\nHTMLTemplateElement.prototype.getContent = function(isConvert){\r\n    let _collectedContent = this.collectContent();\r\n    // let {style, others} = this.collectContent();\r\n    let style = _collectedContent.style;\r\n    let others = _collectedContent.others;\r\n    \r\n    let styles = this.parseStyle(style);\r\n    let element = this.parseHTML(others);\r\n\r\n    \r\n    for (let selector in styles){\r\n        if (styles.hasOwnProperty(selector)){\r\n            // console.log(element.outerHTML)\r\n            let query = element.querySelectorAll(selector);\r\n            let css = styles[selector];\r\n            for (let q= 0; q < query.length; q++){\r\n                let item = query[q];\r\n                // console.log(item, css)\r\n                item.setAttribute('style', css);\r\n                // console.log(item);\r\n            };\r\n        }\r\n    };\r\n    element = (isConvert)?element.children.toArray():element.innerHTML;\r\n    return (element.length == 1)?element[0]:element;\r\n};\r\n})();","\nconst Utils = require('./utils');\nmodule.exports = (function(){\n    Object.caching('plugins').set('plugin', {});\n    return function(key, value){\n        if(Utils.isObject(key) && !value){\n            const plugins = Object.caching('plugins').get('plugin');\n            Object.caching('plugins').set('plugin', Object.assign(plugins, key));\n        } else if(Utils.isString(key) && value != undefined){\n            const plugins = Object.caching('plugins').get('plugin');\n            plugins[key] = value;\n            Object.caching('plugins').set('plugin', plugins);\n        } else if(Utils.isString(key) && value == undefined) {\n            return Object.caching('plugins').get('plugin')[key] || {};\n        };\n    };\n})();","const Utils = require('./utils');\r\nconst Templating = require('./templating');\r\n\r\nconst notifyAttr = require('./attrib/data-attr');\r\nconst notifyBind = require('./attrib/data-bind');\r\nconst notifyClass = require('./attrib/data-class');\r\nconst notifyForUpdate = require('./attrib/data-for-update');\r\nconst notifyFor = require('./attrib/data-for');\r\nconst notifyIf = require('./attrib/data-if');\r\nconst notifyModel = require('./attrib/data-model');\r\nconst notifyToggle = require('./attrib/data-toggle');\r\nconst AttribConfigStorage = require('./storage/AttribConfigStorage');\r\n// const notifyForAuto = require('./attrib/data-for-auto');\r\n// const notifySwitch = require('./attrib/data-switch');\r\n\r\n// const st = {};\r\n// \r\nfunction Attrib(){\r\n\r\n    this.uiid = 0;\r\n    this.notify = {};\r\n    this.sts = {};\r\n    this.storage = new AttribConfigStorage();\r\n    this.logicalType = ['if', 'bind', 'switch', 'toggle', 'class', 'attr'];\r\n};\r\n\r\nAttrib.prototype.notifyFor = notifyFor;\r\nAttrib.prototype.notifyForUpdate = notifyForUpdate;\r\n\r\nAttrib.prototype.notifyClass = notifyClass;\r\nAttrib.prototype.notifyBind = notifyBind;\r\nAttrib.prototype.notifyAttr = notifyAttr;\r\nAttrib.prototype.notifyIf = notifyIf;\r\nAttrib.prototype.notifyModel = notifyModel;\r\nAttrib.prototype.notifyToggle = notifyToggle;\r\n\r\n/*\r\n    watch for the (name) which is registered to the scope\r\n    get all attribute with that name,\r\n    get all component holding that (name),\r\n    and notify them;\r\n*/\r\n\r\nAttrib.prototype.notifier = function(prop, newValue, prevValue, component){\r\n    // console.time('attr');\r\n\r\n    // console.log(47, newValue);\r\n\r\n    if(newValue == undefined){\r\n        return Promise.resolve();\r\n    };\r\n\r\n    let val = JSON.parse(JSON.stringify(newValue));\r\n    // if(Utils.isObject(val)){\r\n    //     val = JSON.parse(JSON.stringify(newValue));\r\n    // };\r\n    const equiv = {\r\n        for:'For',\r\n        forUpdate:'ForUpdate',\r\n        // switch:'Switch',\r\n        toggle:'Toggle',\r\n        bind:'Bind',\r\n        // model:'Model',\r\n        if:'If',\r\n        class:'Class',\r\n        attr:'Attr',\r\n\r\n        // disabled:'Disabled',\r\n        // readonly:'Readonly',\r\n        // checked:'Checked',\r\n    };\r\n    let hits = Object.caching('AttribProp').get(prop) || \r\n    (()=>{\r\n        let hits = {};\r\n        const actions = Object.keys(equiv);\r\n        // const configs = this.sts[component];\r\n        const configs = this.storage.get(component);\r\n        if(!configs){\r\n            return [];\r\n        };\r\n        for (let a = 0; a < actions.length; a++){\r\n            const action = actions[a];\r\n            const vals = configs[action];\r\n            if(vals){\r\n                for (let v = 0; v < vals.length; v++){\r\n                    const val = vals[v];\r\n                    // const {bind} = val;\r\n                    const bind = val.bind;\r\n                    if(bind == prop){\r\n                        hits[action] = true;\r\n                    };\r\n                };\r\n            };\r\n        };\r\n        hits = Object.keys(hits);\r\n        Object.caching('AttribProp').set(prop, hits);\r\n        return hits;\r\n    })();\r\n\r\n    return new Promise((res, rej)=>{\r\n        try {\r\n            let l = hits.length;\r\n            let index = 0;\r\n            const rec = (()=>{\r\n                if(l > index){\r\n                    let attr = hits[index];\r\n                    const name = equiv[attr];\r\n                    index += 1;\r\n                    this[`notify${name}`](prop, val, prevValue, component).then(()=>{\r\n                        rec();\r\n                    });\r\n                } else {\r\n                    res();\r\n                };\r\n            });rec();\r\n        } catch(err){\r\n            rej(err.message);\r\n        };\r\n    });\r\n};\r\n\r\nAttrib.prototype.registerNotifier = function(component, fn){\r\n\r\n    if (!this.notify[component]){\r\n        this.notify[component] = [];\r\n    };\r\n    this.notify[component].push(fn);\r\n};\r\n\r\nAttrib.prototype.getEventTarget = function(component){\r\n    let id = `${component}`;\r\n    let target = Object.caching('getEventTarget').get(id);\r\n    if (!target){\r\n        let cf = this.storage.get(component);\r\n        target = (cf && cf.evt)?cf.evt:[];\r\n        Object.caching('getEventTarget').set(id, target);\r\n    };\r\n    return target;\r\n};\r\n\r\nAttrib.prototype.getRouterTarget = function(component){\r\n    let id = `${component}`;\r\n    let target =  Object.caching('getRouterTarget').get(id);\r\n    if(!target){\r\n        let cf = this.storage.get(component);\r\n        target = (cf && cf.router)?cf.router:[];\r\n        Object.caching('getRouterTarget').set(id, target);\r\n    };\r\n    return target;\r\n};\r\n\r\nAttrib.prototype.getWatchItems = function(component){ \r\n    let id = `${component}`;\r\n    let target =  Object.caching('getWatchItems').get(id);\r\n    if(!target){\r\n        let _st = this.storage.get(component);\r\n        let wt = new Set;\r\n        for (let type in _st){\r\n            if (_st.hasOwnProperty(type)){\r\n                let tst = _st[type];\r\n                for (let t = 0; t < tst.length; t++){\r\n                    let item = tst[t];\r\n                    // let {bind} = item;\r\n                    let bind = item.bind;\r\n                    if (bind){\r\n                        wt.add(bind);\r\n                    } else {continue};\r\n                };\r\n            };\r\n        };\r\n        target = [...wt];\r\n        Object.caching('getWatchItems').set(id, target);\r\n    };\r\n    return target;\r\n};\r\n\r\nAttrib.prototype.getConfig = function(component){\r\n    return this.storage.get(component);\r\n};\r\n\r\n\r\nAttrib.prototype.getWatchItemsByType = function(component, type){\r\n    let id = `${component}-${type}`;\r\n    let target =  Object.caching('getWatchItemsByType').get(id);\r\n    if (!target){\r\n        let _st = this.storage.get(component);;\r\n        let tst = _st[type] || [];\r\n        let wt = new Set();\r\n        for (let t = 0; t < tst.length; t++){\r\n            let item = tst[t];\r\n            // let {bind} = item;\r\n            let bind = item.bind;\r\n            switch(!!bind){\r\n                case true:{\r\n                    wt.add(bind);\r\n                } break;\r\n                default:{\r\n                    switch(true){\r\n                        case (type == 'animate' || type == 'toggle'):{\r\n                            if (wt.constructor.name = \"Set\"){\r\n                                wt = [];\r\n                            };\r\n                            wt.push(item);\r\n                        }\r\n                    };\r\n                };\r\n            };\r\n        };\r\n        target = [...wt];\r\n        Object.caching('getWatchItemsByType').set(id, target);\r\n    };\r\n    return target;\r\n};\r\n\r\nAttrib.prototype.getWatchItemsBySel = function(component, type, sel){\r\n    let id = `${component}-${type}-${sel}`\r\n    let target =  Object.caching('watchItemsBySel').get(id);\r\n    if (!target){\r\n        // let array = this.sts[component][type];\r\n        let array = this.storage.get(component, type);;\r\n        let find = array.find(item=>{return item.sel == sel});\r\n        target = (find)?find:false;\r\n        Object.caching('watchItemsBySel').set(id, target);\r\n    };\r\n    return target;\r\n};\r\n\r\nAttrib.prototype._activateReactive = (component)=>{\r\n\r\n};\r\n\r\nAttrib.prototype._register = function(f, s, obj){\r\n\r\n    return this.storage.set(f, s, obj);\r\n};\r\n\r\nAttrib.prototype._static = function(component){\r\n    return function(qs, isStatic){\r\n        let els = [];\r\n\r\n        // console.log(component, qs, isStatic)\r\n        for(let t = 0; t < qs.length; t++){\r\n            let el = qs[t];\r\n            // console.log(el);\r\n            switch(isStatic){\r\n                case false:{\r\n                    els.push(el);\r\n                };\r\n                break;\r\n                case true:{\r\n                    let dComponent = el.closest('[data-component]');\r\n                    // console.log(dComponent ,component);\r\n                    dComponent = dComponent && dComponent.dataset.component;\r\n                    switch(dComponent == component){\r\n                        case true:{\r\n                            els.push(el);\r\n                        } break;\r\n                    };\r\n                }\r\n                break;\r\n                default:{continue;}\r\n            };\r\n        };\r\n        // console.log(els, component);\r\n        return els;\r\n    }\r\n};\r\n\r\nAttrib.prototype._compileEvents = function(events,component, isStatic){\r\n    return new Promise((res)=>{\r\n        // console.log(component, events,isStatic)\r\n        if (!events.length) {res();return;};\r\n        let els = this._static(component)(events, isStatic)\r\n        // console.log(els,component);\r\n        if (!els.length){res();return;}\r\n        for (let e = 0; e < els.length; e++){\r\n            let id = `cke${this.uiid}`;\r\n            let el = els[e];\r\n            let splitted = el.dataset.event.removeSpace().split(',');\r\n            for (let s = 0; s < splitted.length ; s++){\r\n                let _sp1 = splitted[s].split(':');\r\n                let event = _sp1[0];\r\n                let cb = _sp1[1];\r\n                // let [event, cb] = splitted[s].split(':');\r\n  \r\n                this._register(component, 'evt', {event, sel:id, cb});\r\n                el.dataset.event = id;\r\n                this.uiid++;\r\n            }\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileToggle = function(toggles, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!toggles.length){res();return;}\r\n        let els = this._static(component)(toggles, isStatic);\r\n        if (!els.length){res();return;}\r\n        let c = {};\r\n        for(let t = 0; t < toggles.length; t++){\r\n            let id = `ckt${this.uiid}`;\r\n            let el = toggles[t];\r\n            let ns = el.dataset.toggle;\r\n            \r\n\r\n            if (c[ns]){\r\n                id = c[ns];\r\n            };\r\n            this._register(component, 'toggle', {sel:id, name:'ns-'+ns});\r\n            el.dataset.toggle = id;\r\n            this.uiid++;\r\n            c[ns] = id;\r\n        };\r\n        c = {};\r\n        res();\r\n    });\r\n};\r\nAttrib.prototype._compileFor = function(fors, component, isStatic, el){\r\n    return new Promise((res)=>{\r\n        let target = el;\r\n        if (!fors.length) {res();return;};\r\n        let els = this._static(component)(fors, isStatic);\r\n        // console.log(component, els)\r\n        if (!els.length){res();return;}\r\n\r\n        let o = {};\r\n        for (let f = 0; f < els.length; f++){\r\n            let id = `ckf${this.uiid}`;\r\n\r\n            o[id] = {};\r\n\r\n            let el = els[f];\r\n            let fr = el.dataset.for;\r\n            let autoBind = el.dataset.forAutoBind;\r\n            let isCleaned = el.dataset.forCleaned==undefined || el.dataset.forCleaned==\"true\"; \r\n            // let [a, b, c] = fr.split(\" \");\r\n            let _sp1 = fr.split(\" \");\r\n            let a = _sp1[0];\r\n            let b = _sp1[1];\r\n            let c = _sp1[2];\r\n\r\n            if(autoBind){\r\n                let iteration = el.dataset.forIter;\r\n\r\n                let split = autoBind.split(':');\r\n                let autoBindKey = split[0] && split[0].trim();\r\n                let autoBindValue = split[1] && split[1].trim();\r\n\r\n                o[id] = {iteration};\r\n\r\n                // console.log(342, iter);\r\n\r\n                el.dataset.forAutoBindKey = autoBindKey;\r\n                el.dataset.forAutoBindValue = autoBindValue;\r\n                el.removeAttribute('data-for-auto-bind');\r\n            }\r\n            \r\n            el.style.display  = 'none';\r\n            el.classList.add('cake-template');\r\n            el.dataset.for = id;\r\n            el.dataset.forTemplate = id;\r\n\r\n\r\n            o[id] = Object.assign(o[id], {bind:c, sel:id, iter:a, ins: b, cleaned:isCleaned});\r\n\r\n            ++this.uiid;\r\n            if (f != 0){\r\n                let parent = el.parentElement && el.parentElement.closest('[data-for]');\r\n                if (!parent) { continue}\r\n                let parentIsFor = !!parent.dataset.for;\r\n                if (target.contains(parent) && parentIsFor){\r\n                    let parentId = parent.dataset.for;\r\n                    let parentCf = o[parentId];\r\n                    if (parentCf && !parentCf.children){\r\n                        parentCf.children = [id];\r\n                    } else if (parentCf){\r\n                        parentCf.children.push(id);\r\n                    };\r\n                }\r\n                \r\n            };\r\n        };\r\n        for (let key in o){\r\n            if (o.hasOwnProperty(key)){\r\n                this._register(component, 'for', o[key]);\r\n            };\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileForUpdate = function(fors, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!fors.length) {res();return;};\r\n        let els = this._static(component)(fors, isStatic);\r\n        if (!els.length){res();return;}\r\n        for (let f = 0; f < els.length; f++){\r\n            let id = `ckfu${this.uiid}`;\r\n            let el = els[f];\r\n            let fr = el.dataset.forUpdate;\r\n            el.style.display  = 'none';\r\n            el.classList.add('cake-template');\r\n            el.dataset.forUpdate = id;\r\n\r\n            if (!el.dataset.for){\r\n                el.dataset.forTemplate = id;\r\n            }\r\n            let _sp1 = fr.split(\" \");\r\n            let a = _sp1[0];\r\n            let b = _sp1[1];\r\n            let c = _sp1[2];\r\n            // let [a, b, c] = fr.split(\" \");\r\n            this._register(component, 'forUpdate', {bind:c, sel:id, iter:a,ins: b});\r\n            this.uiid++;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileSwitch = function(switchs, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!switchs.length) {res();return;};\r\n        let els = this._static(component)(switchs, isStatic);\r\n        if (!els.length){res();return;}\r\n        for (let s = 0; s < els.length; s++){\r\n            let id = `cks${this.uiid}`;\r\n            let el = els[s];\r\n\r\n            let bind = el.dataset.switch, map='def';\r\n            if (bind.includes('.')){\r\n                const _sp1 = el.dataset.switch.split('.');\r\n                bind = _sp1[0];\r\n                map = _sp1[1];\r\n                // var [f, ...rest] = el.dataset.switch.split('.');\r\n                // bind = f;\r\n                // map = rest[0];\r\n            };\r\n            el.dataset.switch = id;\r\n            let cases = el.querySelectorAll('[data-case]');\r\n            // console.log(cases);\r\n            let casesId = [];\r\n            for (let c = 0; c < cases.length; c++){\r\n                let _case = cases[c];\r\n                let closest = _case.closest(`[data-switch=${id}]`);\r\n\r\n\r\n                _case.classList.add('cake-template');\r\n\r\n                if (closest){\r\n                    let caseBind = _case.dataset.case;\r\n                    let _id = `cksc${this.uiid}`\r\n                    _case.dataset.case = `${id}-${_id}`;\r\n                    casesId.push({_id, bind:caseBind});\r\n\r\n                    this.uiid++;\r\n                };\r\n            };\r\n            this._register(component, 'switch', {bind, sel:id, map, cases:casesId});\r\n            this.uiid++;\r\n        };\r\n        res()\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileBind = function(elModels, component, isStatic){\r\n    return new Promise((res)=>{\r\n\r\n        if (!elModels.length) {res();return;};\r\n        let els = this._static(component)(elModels, isStatic);\r\n        if (!els.length){res();return;}\r\n        for (let s = 0; s < els.length; s++){\r\n            let id = `ckm${this.uiid}`;\r\n            let el = els[s];\r\n            let model = el.dataset.bind;\r\n            let gr = model.split(',');\r\n            for (let g = 0; g < gr.length; g++){\r\n                let val = gr[g].split(\" \").join(\"\");\r\n                if (val.includes(':')){\r\n                    const _sp1 = val.split(\":\");\r\n                    var attr = _sp1[0];\r\n                    var bind = _sp1[1];\r\n                    // var [attr, bind] = val.split(\":\");\r\n                } else {\r\n                    var bind = val;\r\n                    var attr = 'value';\r\n                };\r\n                this._register(component, 'bind', {attr, bind, sel:id});\r\n            }\r\n            this.uiid++;\r\n            el.dataset.bind = id;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileAnimate = function(anims, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!anims.length) {res();return;};\r\n\r\n        // console.log(1403,component);\r\n\r\n        let els = this._static(component)(anims, isStatic);\r\n        if (!els.length){res();return;}\r\n\r\n        \r\n        for (let s = 0; s < els.length; s++){\r\n            let id = `cka${this.uiid}`;\r\n            let el = els[s];\r\n            let anim = el.dataset.animate;\r\n            anim = anim.split(\" \").join(\"\");\r\n            //to handle multiple attr binding;\r\n            //render:appead-slideInUp, remove:disappear\r\n            let o = {};\r\n            let split = anim.split(',');\r\n            for (let a = 0; a < split.length; a++){\r\n                let item = split[a];\r\n                // let [ctx, anims] = item.split(':');\r\n\r\n                let _sp1 = item.split(':');\r\n                let ctx = _sp1[0];\r\n                let anims = _sp1[1];\r\n\r\n                if (ctx == 'ns'){\r\n                    o.ns = anims;\r\n                    break;\r\n                } else {\r\n                    o[ctx] = {keyframes:anims.split('-')};\r\n                };\r\n            };\r\n            o.selector = {attr:'data-animate', val:id};\r\n            this._register(component, 'animate', o);\r\n            this.uiid++;\r\n            el.dataset.animate = id;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileIf = function(ifs, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!ifs.length) {res();return;};\r\n        let els = this._static(component)(ifs, isStatic);\r\n        if (!els.length){res();return;}\r\n        const regex = new RegExp('<|>|===|==|!==|!=');\r\n        for (let s = 0; s < els.length; s++){\r\n            let id = `ci${this.uiid}`;\r\n            let el = els[s];\r\n            let _if = el.dataset.if;\r\n            let _ifBind = el.dataset.ifBind;\r\n            let gr = _if.split(',');\r\n            for (let g = 0; g < gr.length; g++){\r\n                let val = gr[g];\r\n\r\n                let attr = val.substring(0,val.indexOf('='));\r\n                let exp = val.substring(val.indexOf('=')+1, val.length);\r\n\r\n\r\n                exp = exp.split(new RegExp('[()]')).join(\"\");\r\n                \r\n                // let [test, r] = exp.split('?');\r\n\r\n                let _sp2 = exp.split('?');\r\n                let test = _sp2[0];\r\n                let r = _sp2[1];\r\n\r\n\r\n                let hasNegate = test[0] == '!';\r\n                hasRegularLog = test.match(regex);\r\n\r\n                let bind, testVal, ops;\r\n                if(hasRegularLog){\r\n                    let splitted = test.split(regex);\r\n                    bind = splitted[0].trim();\r\n                    testVal = splitted[1].trim();\r\n                    ops = hasRegularLog[0];\r\n                } else {\r\n                    bind = test;\r\n                };\r\n\r\n                if(hasNegate){\r\n                    bind = bind.slice(1);\r\n                };\r\n                \r\n                let _sp1 = r.split(':');\r\n                let _true = _sp1[0];\r\n                let _false = _sp1[1];\r\n                // let [_true, _false] = r.split(':');\r\n\r\n\r\n                this._register(component, 'if', {hasNegate, attr, ops, bind, testval:testVal || null, _true, _false, sel:id, ifBind:_ifBind});\r\n\r\n                \r\n            }\r\n            this.uiid++;\r\n            el.dataset.if = id;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileClass = function(cls, component, isStatic){\r\n    return new Promise((res)=>{\r\n        \r\n        if (!cls.length) {res();return;};\r\n        let els = this._static(component)(cls, isStatic);\r\n        if (!els.length){res();return;}\r\n\r\n\r\n        let regex = new RegExp('<|>|===|==|!==|!=');\r\n\r\n        for (let s = 0; s < els.length; s++){\r\n\r\n            let id, el, cl, hasRegularLog, hasNegate, bindVal, ops, testVal, hasNegateCount;\r\n\r\n            id = `cc${this.uiid}`;\r\n            el = els[s];\r\n            cl = el.dataset.class;\r\n\r\n            let cls = cl.split(',');\r\n\r\n            for (let c = 0; c < cls.length; c++){\r\n                let clItem = cls[c];\r\n                let _sp1 = clItem.split('&&');\r\n                // let [test, className] = clItem.split('&&');\r\n                let test = _sp1[0];\r\n                let className = _sp1[1];\r\n\r\n                test = test.trim();\r\n                className = className.trim();\r\n    \r\n                \r\n    \r\n                hasRegularLog = test.match(regex);\r\n    \r\n    \r\n                if(test.substring(0,2).includes('!')){\r\n                    hasNegate = true;\r\n                    hasNegateCount = (test.substring(0,2) == '!!')?2:(test.substring(0,1)=='!')?1:0;\r\n                } else {\r\n                    hasNegate = false;\r\n                    hasNegateCount = 0;\r\n                };\r\n    \r\n                \r\n                if(hasRegularLog){\r\n                    let splitted = test.split(regex);\r\n                \r\n                    bindVal = splitted[0].trim();\r\n                    testVal = splitted[1].trim();\r\n                    ops = hasRegularLog[0].trim();\r\n                } else {\r\n                    \r\n                    !hasNegate && (bindVal = test);\r\n                    if(hasNegate){\r\n                        bindVal = test.substring(hasNegateCount);\r\n                        testVal = hasNegateCount == 2;\r\n                    };\r\n                };\r\n    \r\n                \r\n                // if(component == 'header1'){\r\n                //     console.log(1534, bindVal, test, testVal, hasNegateCount);\r\n                // }\r\n    \r\n                this._register(component, 'class', {hasNegate, bind:bindVal, testVal,className, ops, sel:id});\r\n            }\r\n\r\n\r\n\r\n            this.uiid++;\r\n            el.dataset.class = id;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileAttr = function(attrs, component, isStatic){\r\n    return new Promise((res)=>{\r\n        if (!attrs.length) {res();return;};\r\n        let els = this._static(component)(attrs, isStatic);\r\n        if (!els.length){res();return;}\r\n        let regex = new RegExp('<|>|===|==|!==|!=');\r\n        for (let s = 0; s < els.length; s++){\r\n            let id, el, cl, hasRegularLog, hasNegate, bindVal, ops, testVal;\r\n            id = `cre${this.uiid}`;\r\n            el = els[s];\r\n            cl = el.dataset.attr;\r\n\r\n            let _sp2 = cl.split('&&');\r\n            // let [test, attrPair] = cl.split('&&');\r\n            let test = _sp2[0];\r\n            let attrPair = _sp2[1];\r\n            attrPair = attrPair.trim();\r\n        \r\n            // let [attrkey, attrvalue] = attrPair.split('=');\r\n            let _sp1 = attrPair.split('=');\r\n            let attrkey = _sp1[0];\r\n            let attrvalue = _sp1[1];\r\n\r\n            test = test.trim();\r\n            \r\n            hasRegularLog = test.match(regex);\r\n            hasNegate = test[0] == '!';\r\n            if(hasRegularLog){\r\n                let splitted = test.split(regex);\r\n            \r\n                bind = splitted[0];\r\n                testVal = splitted[1];\r\n                ops = hasRegularLog[0];\r\n            } else {\r\n                bind = test;\r\n            };\r\n\r\n            if(hasNegate){\r\n                hasNegate && (bind = bind.slice(1));\r\n            };\r\n\r\n            this._register(component, 'attr', {hasNegate, bind, testVal,attrkey, attrvalue, ops, sel:id});\r\n            this.uiid++;\r\n            el.dataset.attr = id;\r\n        };\r\n        res();\r\n    });\r\n};\r\n\r\nAttrib.prototype._compileModel = function(elModels, component, isStatic){\r\n    return new Promise((res)=>{\r\n\r\n        if (!elModels.length) {res();return;};\r\n        let els = this._static(component)(elModels, isStatic);\r\n        if (!els.length){res();return;}\r\n        for (let s = 0; s < els.length; s++){\r\n            let id = `cknt${this.uiid}`;\r\n            let el = els[s];\r\n            let nodeType = el.tagName;\r\n            let model = el.dataset.model;\r\n            let gr = model.split(',');\r\n\r\n            for (let g = 0; g < gr.length; g++){\r\n                let val = gr[g].split(\" \").join(\"\");\r\n                if (val.includes(':')){\r\n                    // var [attr, bind] = val.split(\":\");\r\n                    var splitted = val.split(':');\r\n                    var attr = splitted[0];\r\n                    var bind = splitted[1];\r\n\r\n                } else {\r\n                    var bind = val;\r\n                    var attr = 'value';\r\n                };\r\n                this._register(component, 'model', {attr, bind, sel:id,nodeType});\r\n            };\r\n            this.uiid++;\r\n            el.dataset.model = id;\r\n        };\r\n        res();\r\n    });\r\n}\r\n\r\nAttrib.prototype.inject = function(el, component, isStatic=false){\r\n    return new Promise((res)=>{\r\n        // let query = el.getElementsByDataset('bind', 'for', 'for-update', 'switch', 'toggle', 'event', 'animate','if','class','model','attr');\r\n        let query = el.getElementsByDataset('bind', 'for', 'for-update', 'switch', 'toggle', 'event', 'animate','if','class','attr');\r\n        // console.log(query, component);\r\n        res(query);\r\n    }).then((query)=>{\r\n        let r = [];\r\n        let map = {\r\n            'bind':this._compileBind,//logical\r\n            'switch':this._compileSwitch,//logical\r\n            'toggle':this._compileToggle,//logical\r\n            'if':this._compileIf,//logical\r\n            'class':this._compileClass,//logical\r\n            'attr':this._compileAttr,//logical\r\n            'for':this._compileFor,\r\n            'for-update':this._compileForUpdate,\r\n            'event':this._compileEvents,\r\n            'animate':this._compileAnimate,\r\n            // 'model':this._compileModel,\r\n\r\n            // 'model':\"\",\r\n            // 'validator':\"\",\r\n        };\r\n\r\n        for (let q in query){\r\n            if (query.hasOwnProperty(q)){\r\n                if (query[q].length){\r\n                    r.push(map[q].apply(this, [query[q], component, isStatic, el]));\r\n                };\r\n            };\r\n        };\r\n        \r\n        console.timeEnd(component);\r\n        \r\n        return Promise.all(r.length?r:[r]);\r\n    }).then(()=>{\r\n\r\n        \r\n        // return this.store.createOrUpdate(component, this.st[component]);\r\n        return Promise.resolve();\r\n    });\r\n    \r\n};\r\n\r\n\r\nmodule.exports = Attrib;","const Utils = require('./utils');\r\n// escapeRegExp\r\n\r\nfunction Templating(options){\r\n    this.options = options;\r\n    this.tag = ((this.options && this.options.tag) || \"{{ }}\").split(\" \");\r\n    this.lefttag = Utils.escapeRegExp(this.tag[0]);\r\n    this.righttag = Utils.escapeRegExp(this.tag[1]); \r\n};\r\nTemplating.prototype._getTag = function(template){\r\n    //get the tag in < h1>;\r\n    return template.match(new RegExp('(?<=<)|([^/s]+)(?=\\>)', 'g'))[2];\r\n};\r\nTemplating.prototype._bindReplace = function(obj,string){\r\n    for (let key in obj){\r\n        if (obj.hasOwnProperty(key)){\r\n\r\n            let pattern = new RegExp(`${this.lefttag}${key}${this.righttag}`, 'g');\r\n            pattern && (string = string.replace(pattern, `${obj[key]}`));\r\n        };\r\n    };\r\n    return string;\r\n};\r\nTemplating.prototype.replaceString = function(obj, string){\r\n    return this._bindReplace(obj, string);\r\n}\r\nTemplating.prototype._toElement = function(template, tag){\r\n    let fr = document.createElement('template');\r\n    fr.innerHTML = template;\r\n    return fr.content.children[0];\r\n};\r\nTemplating.prototype.createElement = function(data,template,  isConvert){\r\n    // let template = this.template;\r\n    // let data = this.data;\r\n    // let isConvert = this.isConvert;\r\n\r\n\r\n    if (data){\r\n        if (data instanceof Array){\r\n            let isString = typeof template == 'string';\r\n            let tag = (isString)?this._getTag(template): template.tagName;\r\n            template = (isString)?template:template.outerHTML;\r\n\r\n            let els = [];\r\n            for (let d = 0; d < data.length; d++){\r\n                let dd = data[d];\r\n                let bindData = this._bindReplace(dd, template);\r\n\r\n                // console.log(42, dd, bindData);\r\n\r\n                let element = this._toElement(bindData, tag);\r\n                if (isConvert){\r\n                    element = element.outerHTML;\r\n                };\r\n                els.push(element);\r\n            };\r\n            return els;\r\n        } else if (data instanceof Object){\r\n            // console.log(template)\r\n            let isString = typeof template == 'string';\r\n            let tag = (isString)?this._getTag(template): template.tagName;\r\n            template = (isString)?template:template.outerHTML;\r\n\r\n\r\n            let bindData = this._bindReplace(data, template);\r\n\r\n            // console.log(60, this.tag);\r\n            // console.log(61, bindData);\r\n\r\n\r\n            let element = this._toElement(bindData, tag);\r\n            if (isConvert){\r\n                element = element.outerHTML;\r\n            };\r\n            return element;\r\n        }\r\n    } else {\r\n        let isString = typeof template == 'string';\r\n        let tag = (isString)?this._getTag(template): template.tagName;\r\n        return this._toElement(template, tag);\r\n    };\r\n};\r\nmodule.exports = Templating;","exports.getConfig = function(st, prop, newValue, prevValue, component){\n    /*\n        newValue is null, when emptying the scope;\n    */\n    if (newValue == null) {return []};\n    if (newValue == prevValue && type != 'bind'){ return [];};\n    return (()=>{\n        let ctx = [];\n        let s = st;\n        if (s && s.length){\n            for (let i = 0; i < s.length; i++){\n                let item = s[i];\n                // console.log(item.bind, prop, item);\n                if (item.bind == prop){\n                    // console.log(type, item);\n                    ctx.push({...item, component});\n                };\n            };\n        };\n        return ctx;\n    })();\n};\n\nexports.updateConfig = function(st, type, prop, newValue, prevValue, component, update,sel){\n    if (newValue == null) {return };\n    if (newValue == prevValue && type != 'bind'){ return };\n    // if(update.incrementedSels){\n    //     console.debug(121,sel, update);\n    // };\n    var st = (()=>{\n        let config = (st[component] && st[component][type]);\n        if(config && config.length){\n            let ctx = [];\n            for (let i = 0; i < config.length; i++){\n                let item = config[i];\n                let test = item.bind == prop && ((sel)?item.sel == sel:true);\n                if(test){\n                    Object.assign(item, update);\n                } else {\n\n                };\n            };\n            return ctx;\n        } else {\n            return [];\n        };\n    })();\n    return st;\n};\n\n\n\nexports.extendConfig = function(configs){\n    /**\n     * add config dynanucakky since\n     * every element has unique identifier.\n     * everytime it is created either in swith or forUpdate;\n     */\n    const cloned = [];\n\n    for (let i = 0; i < configs.length; i++){\n        const cl = {};\n        const item = configs[i];\n        for (let key in item){\n            cl[key] = item[key];\n        };\n        cloned.push(cl);\n    };\n\n    return cloned.reduce((accu, iter)=>{\n        // let {incrementedSels} = iter;\n        let incrementedSels = iter.incrementedSels;\n        if(incrementedSels && incrementedSels.length){\n            incrementedSels.forEach(ic=>{\n                let cloned = {...iter};\n                cloned.incrementedSel = ic;\n\n                accu.push(cloned);\n            });\n        } else {\n            accu.push(iter);\n        };\n        return accu;\n    }, []);\n};","const Utils = require('../utils');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n    let st = this.storage.get(component, 'attr');\n    let configs = getConfig(st, prop, newValue, prevValue, component);\n    if (!configs.length) return;\n\n    // console.log(834, newValue);\n    // if(!(newValue).toString().includes('Object')){\n    //     console.log(852, configs);\n    // };\n    configs = extendConfig(configs);\n    // if(!(newValue).toString().includes('Object')){\n    //     console.table(854, configs);\n    // };\n\n    \n\n    return Promise.all(configs.map(config=>{\n        let  data;\n        // let {hasNegate, bind, testVal,attr, ops, sel, attrkey, attrvalue, incrementedSel,incrementId} = config;\n\n        let hasNegate = config.hasNegate;\n        let bind = config.bind;\n        let testVal = config.testVal;\n        let attr = config.attr;\n        let ops = config.ops;\n        let sel = config.sel;\n        let attrkey = config.attrkey;\n        let attrvalue = config.attrvalue;\n        let incrementedSel = config.incrementedSel;\n        let incrementId = config.incrementId;\n\n        bind = Utils.removeWhiteSpace(bind);\n        attr = Utils.removeWhiteSpace(attr);\n\n        incrementedSel = newValue.incrementedSel || incrementedSel;\n\n        // console.log(850,incrementedSel);\n\n        if(!!newValue.incrementedSel){\n            // console.log(229, newValue, bind);\n            data = newValue[bind];\n        } else {\n            data = newValue;\n        };\n\n        \n        // console.log(39, data);\n        \n        if (prop == bind){\n\n            let els = html.querySelectorAll(`[data-attr=${incrementedSel || sel}]:not(.cake-template)`);\n            // console.log(839, els, `[data-attr=${incrementedSel || sel}]:not(.cake-template)`);\n            // console.log(865,sel,incrementedSel,els);\n\n            // console.log(572, prop, bind, data, sel, els);\n            \n            return Promise.all([...els].map(el=>{\n                // console.log(869,el);\n                \n                let test = false;\n                if (ops){\n                    test = Utils.logTest(data, ops, testVal);\n                    hasNegate && (test = !test);\n                } else if (hasNegate){\n                    test = !data;\n                } else {\n                    test = !!data;\n                };\n\n                // console.log(el, prop, data);\n                \n\n                \n                if (test){\n                    if(attrvalue){\n                        el.setAttribute(attrkey, attrvalue);\n                    } else {\n                        el.setAttribute(attrkey);\n                    };\n                } else {\n                    el.removeAttribute(attrkey);\n                };\n            }));\n        };\n\n        newValue = null;\n    }));\n});","const Utils = require('../utils');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n    let st = this.storage.get(component, 'bind');\n    let configs = getConfig(st,prop, newValue, prevValue, component);\n\n\n    if (!configs.length) return;\n\n\n    configs = extendConfig(configs);\n\n\n    for (let c = 0; c < configs.length; c++){\n        let config = configs[c], data;\n        // let {attr, bind, sel, incrementedSel,incrementId, incrementedSels} = config;\n\n        let attr = config.attr;\n        let bind = config.bind;\n        let sel = config.sel;\n        let incrementedSel = config.incrementedSel;\n        let incrementId = config.incrementId;\n        let incrementedSels = config.incrementedSels;\n\n        \n        incrementedSel = newValue.incrementedSel || incrementedSel;\n\n        \n\n\n        if(!!newValue.incrementedSel){\n            // console.log(229, newValue, bind);\n            data = newValue[bind];\n        } else {\n            data = newValue;\n        };\n        let attrHyphen = attr.toHyphen();\n        if (prop == bind){\n            let els = html.querySelectorAll(`[data-bind=${incrementedSel || sel}]`);\n            // console.log(incrementedSel, els);\n\n            for (let p = 0; p < els.length; p++){\n                let el = els[p];\n\n                \n                if (attr == 'class' || attr == 'className'){\n\n                    if (el.classList.length){\n                        // console.log(prevValue);\n                        Utils.splitBySpace(prevValue, function(cls){\n                            el.classList.remove(cls);\n                        });\n                        Utils.splitBySpace(data, function(cls){\n                            el.classList.add(cls);\n                        });\n                    } else {\n                        Utils.splitBySpace(data, function(cls){\n                            el.classList.add(cls);\n                        });\n                    };\n\n                } else {\n\n                    // if(prop == 'current_balance'){\n                    //     console.log(262, el, attrHyphen, data,)\n                    //     console.log(263, config.incrementedSel, newValue.incrementedSel);\n                    //     console.log(264, newValue, data);\n                    // };\n\n                    if(data != undefined || data != null){\n                        \n \n\n                        el.setAttribute(attrHyphen, data);\n                        el[attr] = data;\n                    };\n\n                };\n            };\n        };\n    };\n\n    newValue = null;\n});","const Utils = require('../utils');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n\n    // console.log(477,prop, newValue, component);\n\n    let st = this.storage.get(component, 'class');\n    html = html || document;\n    let configs = getConfig(st,prop, newValue, prevValue, component);\n\n    // console.log(478, configs);\n\n    if (!configs.length) return;\n\n    let cache = {};\n\n    configs = extendConfig(configs);\n\n    // console.log(731, configs);\n\n    for (let c = 0; c < configs.length; c++){\n        let config = configs[c], data;\n        // let {hasNegate, bind, testVal,className, ops, sel,  incrementedSel,incrementId} = config;\n\n        let hasNegate = config.hasNegate;\n        let bind = config.bind;\n        let testVal = config.testVal;\n        let className = config.className;\n        let ops = config.ops;\n        let sel = config.sel;\n        let incrementedSel = config.incrementedSel;\n        let incrementId = config.incrementId;\n\n        bind = Utils.removeWhiteSpace(bind);\n\n        incrementedSel = newValue.incrementedSel || incrementedSel;\n\n        if(!!newValue.incrementedSel){\n            // console.log(229, newValue, bind);\n            data = newValue[bind];\n        } else {\n            data = newValue;\n        };\n        \n        if (prop == bind){\n            if (!cache[incrementedSel || sel]){\n                cache[incrementedSel || sel] = html.querySelectorAll(`[data-class=${incrementedSel || sel}]:not(.cake-template)`);//just to convert iterable;\n            }\n            let els = cache[incrementedSel || sel];\n\n            // component == 'header1' && console.log(759, data,  component);\n\n            for (let p = 0; p < els.length; p++){\n                let el = els[p];\n                let test = false;\n                if (ops){\n                    test = Utils.logTest(data, ops, testVal);\n                    hasNegate && (test = !test);\n                } else if (hasNegate){\n                    // test = !data;\n                    test = data == testVal;\n                } else {\n                    test = !!data;\n                };\n\n                // component == 'header1' && console.log(503, {data}, {testVal}, {test}, {el}, {className});\n\n                if (test){\n                    // console.log('add ',className);\n                    Utils.splitBySpace(className, function(cls){\n                        // console.log(519, data,  ops, testVal, test);\n                        const classList = Utils.toArray(el.classList);\n                        if (!classList.includes(cls)){\n                           setTimeout(()=>{\n                                el.classList.add(cls);\n                           });\n                        };\n                    });\n                } else {\n                    // console.log('remove ',className);\n                    Utils.splitBySpace(className, function(cls){\n                        const classList = Utils.toArray(el.classList);\n\n                        if (classList.includes(cls)){\n                            setTimeout(()=>{\n                                el.classList.remove(cls);\n                            });\n                        };\n                    });\n\n                };\n            };\n        };\n    };\n\n    newValue = null;\n});","const Utils = require('../utils');\nconst Piece = require('../piece');\nconst Templating = require('../templating');\nconst Plugin = require('../plugin');\n\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n\n    let st = this.storage.get(component, 'forUpdate');\n\n    let configs = getConfig(st, prop, newValue, prevValue, component);\n    if (!configs.length) return;\n\n    let templating = new Templating(Plugin('templating'));\n    // console.log(configs)\n\n    // console.log(206, prop, newValue, component);\n\n\n    // console.log(23, this.sts);\n\n    const attrPayload = [];\n    for (let c = 0; c < configs.length; c++){\n        // let {bind, sel, iter, ins, targets} = configs[c];\n        let bind = configs[c].bind;\n        let sel = configs[c].sel;\n        let iter = configs[c].iter;\n        let ins = configs[c].ins;\n        let targets = configs[c].targets;\n        // let index = -1;\n        for (let o in newValue){\n            if (newValue.hasOwnProperty(o)){\n                let targets = document.querySelectorAll(`[data-for-update-bind=${o}]`);\n                // console.log(467, targets);\n                // const row = newValue[o];\n                // index += 1;\n\n                for (let t = 0; t < targets.length; t++){\n                    \n                    let target = targets[t];\n                    let binded = target.dataset.forUpdateBind;\n\n                    \n\n                    // console.log({binded})\n                    // console.log({target})\n\n                    if (!target.dataset.forTemplate){\n                        target.remove();\n                    } else {\n                        let template = target.cloneNode(true);\n                        template.style.removeProperty('display');\n                        template.classList.remove('cake-template');\n                        let dataForIteration = newValue[binded];\n\n                        // console.log({dataForIteration})\n\n\n\n                        let i = -1; l = dataForIteration.length;\n                        while(++i < l){\n                            let item = dataForIteration[i];\n                            let index = i;\n\n                            for (let lt = 0; lt < this.logicalType.length; lt++){\n                                let type = this.logicalType[lt];\n                                const logicalHtml = new Piece(target).querySelectorAllIncluded(`[data-${type}]`)\n     \n                                for (let l = 0; l < logicalHtml.length; l++){\n                                    const hit = logicalHtml[l];\n                                    // console.log(550, hit, hit.dataset[type]);\n                                    if (hit.dataset[type]){\n                                        let sel = hit.dataset[type];\n                                        let incrementedSel = `${sel}-${index}`;\n                                        template.dataset[type] = incrementedSel;\n                                        let bind = this.getWatchItemsBySel(component,type,sel).bind;\n                                        if (bind.includes('.')){\n                                            let split = bind.split('.');\n                                            binded = split[0];\n                                            for (let key in item){\n                                                let value = item[key];\n                                                let _key = `${binded}.${key}`;\n                                                item[_key] = value;\n                                            };\n                                        };\n                                       \n                                        \n                                        \n                                        if (sel){\n                 \n                                            \n                                            attrPayload.push({_type:type, ...item, incrementedSel,sel, bind, incrementId:index, component});\n                                        };\n                                    };\n                                };\n                            };\n    \n                              \n                            let create = templating.createElement(item, template, false);\n                            // console.log(create);\n                            create.classList.remove('cake-template');\n                            create.removeAttribute('data-for-template');\n                            target.insertAdjacentElement('beforebegin', create);\n                            if (target.parentElement.tagName == 'SELECT'){\n                                target.parentElement.selectedIndex = 0;\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n\n    newValue = null;\n\n    // console.log(attrPayload);\n    // console.log(185, attrPayload);\n    return Promise.all(attrPayload.map(payload=>{\n        // const {bind, _type, component, incrementedSel, sel} = payload;\n        const bind = payload.bind;\n        const _type = payload._type;\n        const component = payload.component;\n        const incrementedSel = payload.incrementedSel;\n        const sel = payload.sel;\n        const name = `notify${_type.toProper()}`;\n\n\n        // console.log(665, {incrementedSel});\n        updateConfig(_type, bind, payload, null, component, {incrementedSel}, sel);\n\n\n        return this[name](bind, payload, null,component);\n    })).then(()=>{\n        // console.log('finish setting attribute', component);\n    });\n});","function Piece(el){\r\n    this.el = Piece.toArray(el);\r\n};\r\nPiece.toArray = function(el){\r\n    let r = [];\r\n    switch(true){\r\n        case (el instanceof Array):{\r\n            r = el;\r\n        } break;\r\n        case (el.length && (el.tagName && el.tagName != 'FORM') && !(el instanceof Array)):{\r\n            for (let e = 0; e < el.length; e++){\r\n                r.push(el[e]);\r\n            };\r\n        } break;\r\n        case !(el instanceof Array):{\r\n            r = [el];\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\nPiece.prototype.loop = function(callback){\r\n    try {\r\n        let i = -1, length = this.el.length;\r\n        while(++i < length){\r\n            let el = this.el[i];\r\n            callback(i, el);\r\n        };\r\n        return true;\r\n    } catch(err){\r\n        console.error(err);\r\n        return false;\r\n    };\r\n\r\n}\r\nPiece.prototype.getElements = function(){\r\n    return this.el;\r\n};\r\nPiece.prototype.getElement = function(index=0){\r\n    return this.el[index];\r\n};\r\nPiece.prototype.remove = function(){\r\n    let i = -1, length = this.el.length;\r\n    let fg = document.createDocumentFragment();\r\n    while(++i < length){\r\n        let el = this.el[i];\r\n        el  && (fg.appendChild(el));\r\n        // el  && el.remove();\r\n    };\r\n    fg = null;\r\n    return true;\r\n};\r\n\r\nPiece.prototype.replaceDataSrc = function(){\r\n\r\n    return this.loop(function(index, el){\r\n        el.replaceDataSrc();\r\n    });\r\n    // let els = this.el[0];\r\n    // let srcs = els.querySelectorAll('[data-src]');\r\n    // for (let s = 0; s < srcs.length; s++){\r\n    //     el = srcs[s];\r\n    //     el.setAttribute('src', el.dataset.src);\r\n    //     el.removeAttribute('data-src');\r\n    // };\r\n};\r\n\r\nPiece.cloneNode = function(el){\r\n    el = (el instanceof Array)?el:this.toArray(el);\r\n    let a = [];\r\n    for (let e = 0; e < el.length; e++){\r\n        a.push(el[e].cloneNode(true));\r\n    };\r\n    return new Piece(a);\r\n};\r\nPiece.prototype.dataset = function(data, cb){\r\n    let l = this.el.length;\r\n    let i = -1;\r\n\r\n    while(++i < l){\r\n        if (this.el[i].dataset[data]){\r\n            let exec = cb(this.el[i]);\r\n            if (exec == 'break'){\r\n                break;\r\n            };\r\n        };\r\n    };\r\n    return true;\r\n};\r\nPiece.prototype.getContainers = function(){\r\n    return this.getElementsByDataset('container').container;\r\n};\r\nPiece.prototype.cloneNode = function(el){\r\n    el = this.el;\r\n    return Piece.cloneNode(el);\r\n};\r\nPiece.prototype.getAllElements = function(){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].getElementsByTagName('*').toArray();\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.getElementsByTagName('*');\r\n                if (q){\r\n                    for (let i = 0; i < q.length; i++){\r\n                        r.push(q[i]);\r\n                    };\r\n                };\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\n\r\nPiece.prototype.appendTo = function(root, cleaned){\r\n    if (!root && !root.attributes){\r\n        throw new TypeError(`the ${root} is not an instance of Element`);\r\n    };\r\n\r\n    cleaned && (root.innerHTML = \"\");\r\n\r\n\r\n    for (let i = 0; i < this.el.length; i++){\r\n        let el = this.el[i];\r\n        root.appendChild(el);\r\n    };\r\n};\r\nPiece.prototype.getElementsByTagName = function(tag){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].getElementsByTagName(id).toArray();\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.getElementsByTagName(selector);\r\n                if (q){\r\n                    for (let i = 0; i < q.length; i++){\r\n                        r.push(q[i]);\r\n                    };\r\n                };\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\n\r\nPiece.prototype.getElementById = function(ids){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].getElementById(id);\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.querySelector(selector);\r\n                if (q){\r\n                    r.push(q);\r\n                };\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n}\r\n\r\nPiece.prototype.querySelectorAll = function(selector){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].querySelectorAll(selector);\r\n        } break;\r\n        case length > 1:{\r\n            let els = [];\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.querySelectorAll(selector);\r\n                q && (r = r.concat(q.toArra()));\r\n            };\r\n        } break;\r\n        default:{\r\n            r = [];\r\n        }\r\n    };\r\n    return r;\r\n};\r\n\r\nPiece.prototype.querySelector = function(selector){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].querySelector(selector);\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.querySelector(selector);\r\n                if (q){\r\n                    r.push(q);\r\n                };\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\n\r\nPiece.prototype.querySelectorIncluded = function(selector, attr, val){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].querySelectorIncluded(selector, attr, val);\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.querySelectorIncluded(selector, attr, val);\r\n                q && (r.push(q))\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\n\r\n\r\nPiece.prototype.querySelectorAllIncluded = function(selector, attr, val){\r\n    let length = this.el.length;\r\n    let r = [];\r\n    switch(true){\r\n        case length == 1:{\r\n            r = this.el[0].querySelectorAllIncluded(selector, attr,val);\r\n        } break;\r\n        case length > 1:{\r\n            let i = -1;\r\n            while(++i < length){\r\n                let el = this.el[i];\r\n                let q = el.querySelectorAllIncluded(selector, attr, val);\r\n                q && (r = r.concat(q.toArra()));\r\n            };\r\n        } break;\r\n    };\r\n    return r;\r\n};\r\n\r\nPiece.prototype.contains = function(el){\r\n    let length = this.el.length, test = false;\r\n    switch(length == 1){\r\n        case true:{\r\n            test = this.el[0].contains(el);\r\n        } break;\r\n        case false:{\r\n           let index = -1;\r\n           while(++index < length){\r\n               let _el = this.el[index];\r\n               if (_el.contains(el)){\r\n                test = true;\r\n                break;\r\n               };\r\n           };\r\n        } break;\r\n    }\r\n    return test;\r\n};\r\nPiece.prototype.getElementsByDataset = function(){\r\n    let arg, sel, i, a, el, query;\r\n    arg = arguments;\r\n    o = {};\r\n    length = arg.length;\r\n    i = -1;\r\n    a = -1;\r\n    while(++i < this.el.length){\r\n        el = this.el[i];\r\n        while(++a < length){\r\n            sel = arg[a];\r\n            if (el.getAttribute(`data-${sel}`)){\r\n                o[sel] = [el];\r\n            } else {\r\n                o[sel] = [];\r\n            }\r\n            query = el.querySelectorAll(`[data-${sel}]`);\r\n            if (query.length){\r\n                o[sel] = o[sel].concat([...query]);\r\n            };\r\n        };\r\n    };\r\n    return o;\r\n}\r\n\r\nmodule.exports = Piece;","const Utils = require('../utils');\nconst Templating = require('../templating');\nconst Plugin = require('../plugin');\nconst ComponentStorage = require('../storage/components-store');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n        \n    // console.log(12, this.sts);\n\n    let sts = this.storage.get(component);\n  \n\n    // console.log(18, st);\n\n    let templating = new Templating(Plugin('templating'));\n    return new Promise((res, rej)=>{\n        try {\n            let configs = getConfig(this.storage.get(component,'for'), prop, newValue, prevValue, component);\n            \n            let switchConfig = getConfig(this.storage.get(component,'switch'), prop, newValue, prevValue, component);\n\n            // console.log(27, switchConfig);\n            \n           \n            \n            if (!configs.length) return;\n\n            let data = newValue.reduce((accu, item)=>{\n                accu.push(item);\n                return accu;\n            }, []);\n\n            newValue = null;\n\n\n\n\n            for (let c = 0; c < configs.length; c++){\n                // let {bind, sel, iter, ins, component, cleaned} = configs[c];\n\n                let bind = configs[c].bind;\n                let sel = configs[c].sel;\n                let iter = configs[c].iter;\n                let ins = configs[c].ins;\n                let component = configs[c].component;\n                let cleaned = configs[c].cleaned;\n        \n                // html = Cake.Components[component].html;\n                html = ComponentStorage.get(component).html;\n\n\n                \n                let target = html.querySelectorIncluded(`[data-for-template=${sel}]`);\n                let cloned = target.cloneNode(true);\n\n\n\n                //manipulate data;\n                ;(()=>{\n                    data = data.map(item=>{\n                        for (let key in item){\n\n\n                            // console.log(64, key, item[key]);\n\n                            if (item.hasOwnProperty(key)){\n                                item[`${iter}.${key}`] = item[key];\n                            };\n                        };\n                        return item;\n                    });\n                })();\n\n\n                let hasReplaced = [];\n                //update other\n                ;(()=>{\n                    let increment = 0;\n                    Object.keys(sts).forEach(key=>{\n                        if(!['for','evt','animate','switch'].includes(key)){\n                           let conf = sts[key];\n                           let temp = conf[0];\n                        //    let {bind} = temp || {};\n\n                           let bind = temp && temp.bind || undefined;\n\n                           if(bind && bind.match(new RegExp(templating.lefttag),'g')){\n                                data.forEach((item, index)=>{\n                                    let o = {};\n                                    o.bind =  templating.replaceString(item, bind);\n                                    o.sel = `${temp.sel}-${increment}`;\n                                    o.rawsel = temp.sel;\n                                    increment += 1;\n\n                                    //data binding to the element selector;\n                                    data[index].__sel = o.sel;\n                                    \n                                    for (let key in temp){\n                                        if (temp.hasOwnProperty(key)){\n                                            if(!o[key]){\n                                                o[key] = temp[key];\n                                            };\n                                        };\n                                    };\n\n                                    conf.push(o);\n\n                                });\n                                hasReplaced.push(key);\n                            } else {\n\n                            };\n                        };\n                    });\n\n                })();\n\n                ;(()=>{\n                    if (cleaned){\n                        let parent = target.parentElement;\n                        parent.children.toArray().forEach(child=>{\n                            if(child.dataset.for && !child.classList.contains('cake-template')){\n                                child.remove();\n                            };\n                        });\n                    };\n\n                    let i = -1; l = data.length;\n        \n                    \n                    data.forEach((item, index)=>{\n                        let template = target.cloneNode(true);\n                        //switch;\n                        (()=>{\n                            if(switchConfig && !switchConfig.length)return;\n                            // const [{bind, map, sel, cases}] = switchConfig;\n\n                            let bind = switchConfig[0].bind;\n                            let map = switchConfig[0].map;\n                            let sel = switchConfig[0].sel;\n                            let cases = switchConfig[0].cases;\n\n                            const mapping = item[map];\n                            const switchElement = template.querySelector(`[data-switch=${sel}]`);\n                            let hitCase = cases.find(item=>{\n\n                                let _id = item._id;\n                                let bind = item.bind;\n                                \n                                if(bind.includes('|')){\n                                    return bind.split('|').map(item=>item.trim()).some(item=>item==mapping);\n                                } else {\n                                    return bind == mapping\n                                };\n                            });\n\n                            const find = cloned.querySelector(`[data-case=${sel}-${hitCase._id}]`);\n\n                            find.classList.remove('cake-template');\n                            switchElement.innerHTML = find.outerHTML;\n\n                            // switchElement.parentNode.replaceChild(find, switchElement);\n                        })();\n\n                        let create = templating.createElement(item, template, false);\n                        \n                        //replace the templated data-*;\n                        ;(()=>{\n                            Object.keys(sts).forEach(key=>{\n                                if(hasReplaced.includes(key)){\n                                    let conf = sts[key];\n                                    let cf = conf.find(cf=>{\n                                        return cf.sel == item.__sel;\n                                    });\n                                    if(cf){\n                                        let rawsel = cf.rawsel;\n                                        if(rawsel){\n                                            let get = create.querySelector(`[data-${key}=${rawsel}]`);\n                                            get.dataset[key] = cf.sel;\n                                        };\n                                    }\n                                };\n                            });\n    \n                        })();\n\n                        //for\n                        ;(()=>{\n                            // create.style.display = 'block';\n                            create.style.removeProperty('display');\n                            create.classList.remove('cake-template');\n                            create.removeAttribute('data-for-template');\n                            target.insertAdjacentElement('beforebegin', create);\n                        })();\n\n                        //auto\n                        ;(()=>{\n                            const children = configs[0] && configs[0].children;\n                            if(!children) return;\n\n                            \n        \n                            children.forEach(child=>{\n                                const forAutoElement = create.querySelector(`[data-for=${child}]`);\n\n                                if(forAutoElement){\n                                    const dataBindKey = forAutoElement.dataset.forAutoBindKey;\n                                    const dataBindValue = forAutoElement.dataset.forAutoBindValue;\n                                    const iteration = forAutoElement.dataset.forIter;\n\n                                    const datas = item[iteration];\n\n                                    if(datas){\n                                        for (let d = 0; d < datas.length; d++){\n                                            let data = datas[d];\n                                            let template = forAutoElement.cloneNode(true);\n\n                                            let create = templating.createElement(data, template, false);\n                                            create.style.removeProperty('display');\n                                            create.classList.remove('cake-template');\n                                            create.removeAttribute('data-for-template');\n                                            forAutoElement.insertAdjacentElement('beforebegin', create);\n                                        };\n                                    };\n\n                                    const select = forAutoElement.closest('SELECT');\n                                    if (select){\n                                        select.selectedIndex = 0;\n                                    };\n                                };\n                            });\n                        })();\n\n                        create.replaceDataSrc();\n                        // let safeSrc = create.replaceDataSrc();\n                        // if (safeSrc){\n        \n                        //     for (let s = 0; s < safeSrc.length; s++){\n                        //         let el = safeSrc[s];\n                        //         el.src = el.dataset.src;\n                        //         el.removeAttribute('data-src');\n        \n                        //     };\n                        // };\n                    });\n\n\n\n                    res()\n                })();\n            };\n            data= null;\n        } catch(err){\n            rej(err);\n        }\n    });\n});","const storage = {};\n\nfunction subscribeExternal(){\n    let component = storage[name];\n    \n    if (component){\n        if (cb instanceof Function){\n            let name = cb.name;\n            if (ctx){\n                cb = cb.bind(ctx)\n            }\n            cb.binded = 'external';\n            cb.original = name;\n            cb.listenTo = component.name;\n            component.Subscribe(cb);\n        }\n    } else {\n    };\n};\n\nwindow.ComponentStorage = storage;\n\nmodule.exports = {\n    subscribe(cb, ctx){\n\n        return new Promise((res, rej)=>{\n\n            let lk = setInterval(()=>{\n                if (storage[name]){\n                    \n                    subscribeExternal();\n                    clearInterval(lk);\n                    res();\n                };\n            });\n        })\n    },\n    set(componentName, component){\n        storage[componentName] = component;\n        return true;\n    },\n    get(componentName){\n        return storage[componentName];\n    }\n};","const Utils = require('../utils');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n    // console.log(605,prop, newValue);\n\n    let st = this.storage.get(component, 'if');\n\n    let configs = getConfig(st, prop, newValue, prevValue, component);\n    // console.log(603, configs);\n\n    if (!configs.length) return;\n\n    configs = extendConfig(configs);\n\n    let cache = {};\n\n    // console.log(610, configs);\n    for (let c = 0; c < configs.length; c++){\n        let config = configs[c];\n        /**\n         * the incremetedSel is not null when this is called within a loop or data-for;\n         */\n        // let {attr, bind, sel, testval, _true, _false, ops, hasNegate, incrementedSel,incrementId} = config;\n\n        let attr = config.attr;\n        let bind = config.bind;\n        let sel = config.sel;\n        let testval = config.testval;\n        let _true = config._true;\n        let _false = config._false;\n        let ops = config.ops;\n        let hasNegate = config.hasNegate;\n        let incrementedSel = config.incrementedSel;\n        let incrementId = config.incrementId;\n\n\n\n\n        let attrHyphen = attr.toHyphen();\n        let trueNotIgnore = _true != 'null';\n        let falseNotIgnore = _false != 'null';\n\n        if (prop == bind){\n            if (!cache[sel]){\n                // console.log(incrementedSel, sel,`[data-if=${incrementedSel || sel}]:not(.cake-template)`);\n                cache[sel] = html.querySelectorAll(`[data-if=${incrementedSel || sel}]:not(.cake-template)`);//just to convert iterable;\n            }\n            let els = cache[sel];\n            // console.log(624,els, newValue);\n\n            for (let p = 0; p < els.length; p++){\n                let el = els[p];\n\n                let data = newValue; //it can accept, el with data-if-bind and none;\n\n                let test;\n                if(testval){\n                    test = Utils.logTest(testval, ops, data);\n                } else {\n                    test = (hasNegate)?!data:!!data;\n                };\n\n                if(test){\n                    if(trueNotIgnore){\n                        if(attr == 'class'){\n                            let trueClasses = _true.split(' ');\n                            if(falseNotIgnore){\n                                let falseClasses = _false.split(' ');\n                                falseClasses.forEach(cls=>{\n                                    el.classList.remove(cls);\n                                });\n                                trueClasses.forEach(cls=>{\n                                    el.classList.add(cls);\n                                });\n                            } else {\n                                trueClasses.forEach(cls=>{\n                                    if(!el.classList.contains(cls)){\n                                        el.classList.add(cls);\n                                    };\n                                });\n                            };\n                            \n                        } else {\n                            if(data[_true]){\n                                el.setAttribute(attr, data[_true]);\n                            }\n                        };\n                    }\n                } else {\n                    if(falseNotIgnore){\n                        if(attr == 'class'){\n                            let falseClasses = _false.split(' ');\n                            if(trueNotIgnore){\n                                let trueClasses = _true.split(' ');\n                                trueClasses.forEach(cls=>{\n                                    el.classList.remove(cls);\n                                });\n                                falseClasses.forEach(cls=>{\n                                    el.classList.add(cls);\n                                });\n                            } else {\n                                trueClasses.forEach(cls=>{\n                                    if(!el.classList.contains(cls)){\n                                        el.classList.add(cls);\n                                    };\n                                });\n                            };\n                            \n                        } else {\n                            el.setAttribute(attr, _false);\n                        };\n                    }\n                };\n            };\n        };\n    };\n\n    newValue = null;\n});","const Utils = require('../utils');\n\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n\n\n    let st =this.storage.get(component, 'model');\n\n    let configs = getConfig(st,  prop, newValue, prevValue, component);\n    if (!configs.length) return;\n    for (let c = 0; c < configs.length; c++){\n        let config = configs[c];\n        // let {attr, bind, sel} = config;\n\n        let attr = config.attr;\n        let bind = config.bind;\n        let sel = config.sel;\n\n        let attrHyphen = attr.toHyphen();\n        if (prop == bind){\n            let els = html.querySelectorAll(`[data-model=${sel}]`);\n            for (let p = 0; p < els.length; p++){\n                let el = els[p];\n                if (attr == 'className'){\n                    if (prevValue){\n                        if (newValue){\n                            el.classList.replace(prevValue, newValue);\n                        } else {\n                            el.classList.remove(prevValue);\n                        };\n                    } else {\n                        el.classList.add(newValue);\n                    };\n                } else {\n                    el.setAttribute(attrHyphen, newValue);\n                    el[attr] = newValue;\n                };\n            };\n        };\n    };\n\n    newValue = null;\n});","const Utils = require('../utils');\nconst _utils = require('./utils');\nconst getConfig =_utils.getConfig\nconst updateConfig =_utils.updateConfig\nconst extendConfig =_utils.extendConfig\n\nmodule.exports = (async function(prop, newValue, prevValue, component, html){\n    html = html || document;\n    let st = this.storage.get(component, 'toggle');\n    // console.log(8, this.sts);\n    let configs = getConfig(st,prop, newValue, prevValue);\n    // if (!configs.length) return;\n    if (!configs){return ;};\n\n    configs = extendConfig(configs);\n\n    html = html || document;\n    for (let s = 0; s < configs.length; s++){\n        let sub = configs[s];\n        if (!sub) continue;\n        // let {sel, bind, value, ops} = sub;\n\n        let sel = sub.sel;\n        let bind = sub.bind;\n        let value = sub.value;\n        let ops = sub.ops;\n\n        let el = html.querySelector(`[data-toggle=${sel}]`);\n\n\n        //TODO\n        if (value == prevValue){\n            el && el.classList.remove('is-active');\n        }  \n        if (value == newValue){\n            if (el){\n                if (el.classList.contains('is-active')){\n                    el.classList.remove('is-active');\n                };\n                el && el.classList.add('is-active');\n            };\n        };\n    };\n\n    newValue = null;\n});","let store = {};\n\nfunction ComponentAttribStorage(){\n    this.store = {};\n};\n\nComponentAttribStorage.prototype.set = function(component, type, obj){\n    // let name = component+\"-\"+type+obj;\n    let store = this.store;\n    switch(true){\n        case (!store[component]):{store[component] = {}};\n        case (!store[component][type]):{store[component][type] = []};\n        default:{store[component][type].push(obj)};\n        break;\n    };\n    // store[name] = obj;\n};\n\nComponentAttribStorage.prototype.get = function(component, attr){\n    let store = this.store;\n    if(component && attr){\n        return store[component] && store[component][attr] || [];\n    };\n    if(component && !attr){\n        return store[component] || {};\n    }\n};\n\n// function ComponentAttribute(config/*array */){\n//     this.config = config;\n//     // if(store[]){\n\n//     // }\n// };\n\n// ComponentAttribute.prototype.get = function(type){\n\n// }\n\n\n\nmodule.exports = ComponentAttribStorage;","const Attrib = require('./attributes');\r\nconst Scope = require('./scope')();\r\nconst Component = require('./component');\r\n// const Hasher = require('./hash');\r\nconst Router = require('./router');\r\nconst Persistent = require('./persist');\r\nconst StorageKit = require('./storage')();\r\nconst Observer = require('./observer');\r\nconst Formy = require('./form');\r\nconst Utils = require('./utils');\r\nconst Templating = require('./templating');\r\nconst Plugin = require('./plugin');\r\nconst Subscriber = require('./storage/subscriber');\r\nconst Handler = require('./storage/handler');\r\nconst ComponentStorage = require('./storage/components-store');\r\n\r\n\r\nfunction Cake(name){\r\n    this.componentName = name;\r\n    this.components = {};\r\n};\r\n\r\nCake.app = function (config){\r\n    this.name = config.name || \"\";\r\n};\r\n\r\nCake.Components = function(name){\r\n    return {\r\n        subscribe(cb, ctx){\r\n            function subscribeExternal(){\r\n                let component = Cake.Components[name];\r\n                \r\n                if (component){\r\n                    if (cb instanceof Function){\r\n                        let name = cb.name;\r\n                        if (ctx){\r\n                            cb = cb.bind(ctx)\r\n                        }\r\n                        cb.binded = 'external';\r\n                        cb.original = name;\r\n                        cb.listenTo = component.name;\r\n                        component.Subscribe(cb);\r\n                    }\r\n                } else {\r\n                };\r\n            };\r\n            return new Promise((res, rej)=>{\r\n\r\n                let lk = setInterval(()=>{\r\n                    if (Cake.Components[name]){\r\n                        \r\n                        subscribeExternal();\r\n                        clearInterval(lk);\r\n                        res();\r\n                    };\r\n                });\r\n            })\r\n        },\r\n    };\r\n};\r\n\r\nCake.Models = {};\r\n\r\nCake.plugin = Plugin;\r\n\r\nCake.Attributes = new Attrib();\r\n\r\nCake.Models.$loaded = function(name){\r\n    return new Promise((res, rej)=>{\r\n        let mk = setInterval(()=>{\r\n            if (Cake.Models[name]){\r\n                clearInterval(mk);\r\n                res(Cake.Models[name]);\r\n            };\r\n        });\r\n        setTimeout(()=>{\r\n            if(!Cake.Models[name]){\r\n                clearInterval(mk);\r\n                rej(name);\r\n            }\r\n        }, 10000);\r\n    })\r\n};\r\n\r\nCake.MainMessageChannel = (function(){\r\n    let channel = new MessageChannel();\r\n    return {\r\n        send(data){\r\n            // console.log(data);\r\n            channel.port2.postMessage(data);\r\n        },\r\n        receive(fn){\r\n            channel.port1.onmessage = function(payload){\r\n                // let {isTrusted, data} = payload || {isTrusted:false};\r\n                let data = payload.data;\r\n                let isTrusted = payload.isTrusted == undefined?false:payload.isTrusted;\r\n\r\n\r\n                if (isTrusted){\r\n                    fn({status:1, data});\r\n                } else {\r\n                    fn({status:0, err:'not trusted!'});\r\n                };\r\n            };\r\n        },\r\n    };\r\n})();\r\n\r\nCake.Utils = {\r\n    scopeTrap(k){\r\n        return false;\r\n    },\r\n    scopeNotifier(m){\r\n        return m;\r\n    },\r\n};\r\n\r\nCake.create = function(name, template, options){\r\n    let group = new Cake(name, template, options);\r\n    // console.log(group);\r\n    group.create(name, template, options);\r\n};\r\n\r\n\r\nCake.init = function(name){\r\n    return new Component(name);\r\n};\r\n\r\n\r\n\r\n// Cake.Hasher = new Hasher(Cake.Components); \r\n// Cake.Hasher.listen();\r\n\r\n\r\nCake.Router = Router(Cake.Components, Component);\r\n\r\n\r\n\r\n\r\n\r\nCake.Persistent = new Persistent;\r\n\r\nCake.Persistent.listen(Cake.Components);\r\n\r\nCake.Cache = new StorageKit({\r\n    name:'cache',\r\n    storage:'session',\r\n    child:'object',\r\n});\r\n\r\nCake.getSubscriber = function(component, handler){\r\n    // let subscribe = Cake.Subscribe;\r\n    let subscribe = Subscriber;\r\n    let obj = {};\r\n    for (let c in subscribe){\r\n        if (subscribe.hasOwnProperty(c)){\r\n            let handlers = subscribe[c];\r\n            // console.log(handlers);\r\n            for (let h in handlers){\r\n                if (handlers.hasOwnProperty(h)){\r\n                    let hs = handlers[h];\r\n                \r\n                    for (let h of hs){\r\n                        let _handler = h;\r\n                        let original = _handler.original;\r\n                        let binded = _handler.binded;\r\n                        let listenTo = _handler.listenTo;\r\n\r\n                        if (listenTo == component){\r\n                            // console.log(original, handler, original==handler);\r\n                            if (original == handler){\r\n                                if (!obj[binded]){\r\n                                    obj[binded] = handler;\r\n                                } else {\r\n                                    let v = obj[binded] instanceof Array?obj[binded]:[obj[binded]];\r\n                                    obj[binded] = v.concat(handler);\r\n                                };\r\n                            } else if(!handler) {\r\n                                // console.log(h);\r\n                                if (!obj[binded]){\r\n                                    obj[binded] = original;\r\n                                } else {\r\n                                    let v = obj[binded] instanceof Array?obj[binded]:[obj[binded]];\r\n                                    obj[binded] = v.concat(original);\r\n                                };\r\n                            }\r\n                        };\r\n\r\n                    };\r\n                };\r\n            };\r\n        }\r\n    };\r\n    return obj;\r\n};\r\n\r\nCake.Observer = new Observer();\r\n\r\nCake.prototype._defineProperty = function(component, prop, get, set){\r\n    Object.defineProperty(component, prop, {\r\n        configurable:true,\r\n        get(){\r\n            return get();\r\n        },\r\n        set(value){\r\n            if (set){\r\n                set(value);\r\n            } else {\r\n                // throw new Error(`unable to set property in (${prop})`);\r\n            }\r\n        },\r\n    });\r\n};\r\n\r\nCake.prototype._defineProperty(Component.prototype, '$observer', function(){\r\n    return Cake.Observer;\r\n});\r\n\r\n//global scope\r\nCake._globalScope = new Scope('globalScope');\r\nCake.prototype._defineProperty(Component.prototype, '$globalScope', function(){\r\n    const scope = Cake._globalScope;\r\n    return scope;\r\n});\r\nCake._universalScope = new Scope('universalScope');\r\n\r\nCake.$universalScope = (function(){\r\n    const scope = Cake._universalScope;\r\n    return scope;\r\n});\r\n\r\n//attributes\r\nCake.prototype._defineProperty(Component.prototype, '$attrib', function(){\r\n    return Cake.Attributes;\r\n});\r\n//persistent ui using sessionStorage\r\nCake.prototype._defineProperty(Component.prototype, '$persist', function(){\r\n    return Cake.Persistent;\r\n});\r\n//caching data;\r\nCake.prototype._defineProperty(Component.prototype, '$cache', function(){\r\n    return Cake.Cache;\r\n});\r\n//hash\r\nCake.prototype._defineProperty(Component.prototype, '$hash', function(){\r\n    return Cake.Hasher;\r\n});\r\n\r\nCake.prototype.create = function(name, template, options){\r\n    // console.time(name);\r\n    //observer\r\n    console.time(name);\r\n    let component = new Component(name, template, options);\r\n    //after it has been pass to Cakem t ws assumed that the fn are binded to component holder;\r\n    const scope = new Scope(name);\r\n    component.scope && (()=>{\r\n    \r\n        for (let _component in component.scope){\r\n\r\n\r\n            if(component.scope.hasOwnProperty(_component)){\r\n                const handlers = component.scope[_component];\r\n                for(let key in handlers){\r\n                    if(handlers.hasOwnProperty(key)){\r\n                        let handler = handlers[key];\r\n                        const bind = handler.name;\r\n                        handler = handler.bind(component);\r\n                        scope.hook(_component, bind, handler);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    })();\r\n\r\n    //register a notifier;\r\n    scope.registerNotifier(function(prop, newValue, prevValue, component){\r\n        return Cake.Attributes.notifier(prop, newValue, prevValue, component);\r\n    });\r\n\r\n    Cake.Attributes.registerNotifier(name, function(name, obj){\r\n        return scope.notifier(name, obj);\r\n    });\r\n\r\n\r\n    component.compile.then(()=>{\r\n        // let { subscribe, root, html, handlers, role, state} = component;\r\n\r\n        let subscribe = component.subscribe;\r\n        let root = component.root;\r\n        let html = component.html;\r\n        let handlers = component.handlers;\r\n        let role = component.role;\r\n        let state = component.state;\r\n\r\n\r\n\r\n        // console.log(role == 'form');\r\n\r\n        // console.log(284, component.name, subscribe);\r\n        // return Cake.Observer.registerSubscribe(subscribe).then(()=>{\r\n        //     return {root, handlers}\r\n        // });\r\n        return Subscriber.set(subscribe).then(()=>{\r\n            return {root, handlers};\r\n        });\r\n\r\n        //subscribe and handlers are binded to its componnt\r\n        \r\n    }).then((_obj)=>{\r\n        // const {handlers,root}\r\n        const handlers = _obj.handlers;\r\n        const root = _obj.root;\r\n        // Cake.Observer.registerHandlers(handlers, component.name);\r\n\r\n \r\n        Handler.set(handlers, component.name);\r\n\r\n\r\n        this._defineProperty(component, 'root', function(){\r\n            // console.log(281,component);\r\n            if (component._root){\r\n                return component._root;\r\n            }else {\r\n                let selector = root || '#app';\r\n                let query = document.querySelector(selector);\r\n                if (query){\r\n                    return query;\r\n                }\r\n            };\r\n            throw new Error(`the selector '${root}' as container of component '${component.name}' is not found!`);\r\n        },function(value){\r\n            Object.assign(component, {_root:value})\r\n        });\r\n\r\n        //scope\r\n        this._defineProperty(component, '$scope', function(){\r\n            return scope;\r\n        });\r\n\r\n\r\n        component.role == 'form' && (()=>{\r\n            // console.log(component;\r\n            const methods = Formy(component);\r\n\r\n            // let has = !!component.root.querySelector('FORM');\r\n            const form = ()=>{\r\n                return component.root.querySelector(component.formSelector || 'FORM');\r\n            };\r\n\r\n            for (let method in methods){\r\n                if(methods.hasOwnProperty(method)){\r\n                    Object.defineProperty(form, method, {\r\n                        get(){\r\n                            return methods[method];\r\n                        }\r\n                    })\r\n                };\r\n            };\r\n\r\n            // console.log(this._defineProperty);\r\n            this._defineProperty(component, '$form', function(){\r\n                return form;\r\n            });\r\n\r\n        })();\r\n\r\n    }).then(()=>{\r\n        component.fire = (function(){\r\n            function fire(name, variable){\r\n                /**\r\n                 * the static fn of fire are those declared in handlers;\r\n                 * fire is also a function that accepts handler fn, that is not declared in handlers;\r\n                 * these are commonly refers to quick functions;\r\n                 * the usage of fire is to manually run the notify, it tells notify what handler has been fired;\r\n                 * so that the notify will make a variable from it, to be feed to subscriber to that;\r\n                 */\r\n\r\n\r\n\r\n                variable = !variable?null:typeof variable == 'function'?variable.bind(component)():(function(){return variable}).bind(component)();\r\n\r\n                let o = {\r\n                    [name]:()=>{\r\n                        return variable;\r\n                    }\r\n                };\r\n                fn = o[name].bind(component);\r\n                if (typeof fn == 'function'){\r\n                    fn.name = name;\r\n                    fn.original = name;\r\n                    fn.binded = component.name;\r\n\r\n                    Handler.set({[name]: fn}, component.name);\r\n\r\n                    // const awaitNotify = Cake.Observer.notify(component.name, name, {});\r\n                    // component.await[name] = awaitNotify;\r\n                    // return awaitNotify;\r\n\r\n                    let payload = variable;\r\n                    // console.log(payload);\r\n\r\n                    function getAttributes(element){\r\n                        let o = {};\r\n                        if (!element){\r\n                            return o;\r\n                        };\r\n                        let attributes = element.attributes;\r\n                        if (attributes){\r\n                            for (let i = 0; i < attributes.length; i++){\r\n                                let attribute = attributes[i];\r\n                                let name = attribute.name;\r\n                                let value = attribute.value;\r\n                                o[name] = value;\r\n                            };\r\n                        };\r\n                        return o;\r\n                    };\r\n\r\n\r\n                    if (variable && (variable.element || variable.root || variable.container)){\r\n                        const element = getAttributes(variable.element);\r\n                        const root = getAttributes(variable.root);\r\n                        const container = getAttributes(variable.container);\r\n                        payload = {status:0, attributes:{element, root, container}};\r\n                    };\r\n\r\n                    // console.log(392, {component:component.name, event:name, payload});\r\n\r\n                    // Cake.MainMessageChannel.send({component:component.name, event:name, payload});\r\n\r\n                    const notify = Cake.Observer.notify(component.name, name, {}).then(()=>{\r\n                        return Cake.Observer.results[component.name][name];\r\n                    });\r\n                    component.await[name] = notify;\r\n                    return component.await[name];\r\n                };\r\n                console.error(`the param in fire is not an instance of function`);\r\n            };\r\n            \r\n            function addStaticMethod(fire, handlers){\r\n                for (let h in handlers){\r\n                    if (handlers.hasOwnProperty(h)){\r\n                        let handler = handlers[h];\r\n\r\n                        let event = handler.original;\r\n                        let fn = {\r\n                            [event]:function (variable, isBroadcast){\r\n                                //automatic broadcast if the event is destroy;\r\n                                if (isBroadcast != undefined){\r\n                                    isBroadcast = isBroadcast;\r\n                                };\r\n\r\n\r\n                                if (isBroadcast == undefined && event == 'destroy'){\r\n                                    //force to broadcast is destroy event;\r\n                                    isBroadcast = true;\r\n                                };\r\n\r\n                                if (isBroadcast == undefined){\r\n                                    isBroadcast = false;\r\n                                };\r\n\r\n                                // console.log(461, component.name, event, isBroadcast);\r\n\r\n                                if (isBroadcast){\r\n                                    /**\r\n                                     * async\r\n                                     */\r\n                                    component.await[event] = new Promise((res)=>{\r\n                                        //without setTimeout, there will be a problem;\r\n                                        //i think setTimeout, helps the promise to call resolve;\r\n                                        //as it commands the promise to resolve on the next clock tick;\r\n                                        setTimeout(()=>{\r\n                                            let payload = variable || {};\r\n\r\n                                            Cake.Observer.notify(component.name, event, payload).then(()=>{\r\n                                                return Cake.Observer.results[component.name][event];\r\n                                            }).then(r=>{\r\n                                                res(r);\r\n                                            }).catch(err=>{\r\n                                                console.log(448, component.name, event, payload);\r\n                                                console.trace();\r\n                                                console.error(err);\r\n                                            });\r\n                                            \r\n                                        });\r\n                                    });\r\n                                    return component.await[event];\r\n                                } else {\r\n                                    return handler(variable);\r\n                                };\r\n                            }\r\n                        };\r\n                        // console.log(412, event, fn);\r\n                        fn[event] = fn[event].bind(component);\r\n                        fn[event].originalName = event;\r\n                        fn[event].binded = component.name;\r\n\r\n                        fire[event] = fn[event];\r\n                        fire.component = component.name;\r\n                    };\r\n                };\r\n            }\r\n            addStaticMethod(fire, component.handlers);\r\n\r\n            return fire;\r\n        })()\r\n    }).then(()=>{\r\n\r\n        if (component.type == 'view'){\r\n            component.toggler = component.toggler(component);\r\n            // Cake.Components[name] = component;\r\n            ComponentStorage.set(name, component);\r\n        };\r\n    }).then(()=>{\r\n        //update the binding of data, trigger, and utils option of component;\r\n        component.options.router && Cake.Router.subscribe(component.options.router.bind(component));\r\n        component.options.data && component.options.data.bind(component.data)(component);\r\n        component.options.init && component.options.init.bind(component)();\r\n        component.options.utils && component.options.utils.bind(component.utils)(component);\r\n\r\n    }).then(()=>{\r\n\r\n        if (component.type == 'model'){\r\n            Cake.Models[name] = component;\r\n        }\r\n        if (component.isStatic && component.type == 'view'){\r\n            component.render();\r\n        } else {\r\n            \r\n        };\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = Cake;","module.exports = class {\r\n    constructor(config=[],html){\r\n        this.html = html || document;\r\n        this.cf = config;\r\n        this.duration = 300;\r\n    }\r\n    animate(moment){\r\n        this.config = this.parse(this.cf);\r\n\r\n        return new Promise((res)=>{\r\n            for (let i = 0; i < this.config.length; i++){\r\n                let cf = this.config[i];\r\n                // console.log(cf)\r\n\r\n                let element = cf.element;\r\n                //when there is no config for certain moment, render || remove\r\n                //safekeep\r\n                if (!cf[moment]){ res();break;};\r\n                let config = cf[moment];\r\n                if (!config.options && !(config.options && config.options.duration)){\r\n                    config.options = {duration : this.duration};\r\n                };\r\n                if (!config.keyframes && !element){continue;}\r\n\r\n                let keyframes = config.keyframes;\r\n                let index = 0;\r\n                let fr = [];\r\n                for (let k = 0; k < keyframes.length; k++){\r\n                    let kk = keyframes[k];\r\n                    switch(true){\r\n                        case typeof kk == 'string':{\r\n                            fr.push(this.dic(kk));\r\n                        } break;\r\n                        case (kk instanceof Object):{\r\n                            //maybe the offset is declared along with the keyframes;\r\n                            //name - refers to default animation\r\n                            // let {name, offset} = kk;\r\n                            let name = kk.name;\r\n                            let offset = kk.offset;\r\n                            if (name && offset){\r\n                                //support for element.animation - offset, equivalent to 10%-100% css @keyframes;\r\n                                let def = this.dic(name);\r\n                                def[def.length-1].offset = offset;\r\n                                fr.push(def);\r\n                            } else {\r\n                                fr.push(kk)\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                keyframes = fr;\r\n                fr = null;\r\n                //to series calls of animation, one after the another;\r\n                // console.log(element, keyframes, config);\r\n                let recurseCall= ()=>{\r\n                    let kf = keyframes[index];\r\n                    let animate = element.animate(kf, (config.options || this.duration));\r\n                    // console.log(animate);\r\n                    if(animate.finished){\r\n                        animate.finished.then(()=>{\r\n                            if (index < keyframes.length -1){\r\n                                index += 1;\r\n                                recurseCall()\r\n                            } else {\r\n                                keyframes = [];\r\n                                // console.log(index, keyframes.length)\r\n                                res();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        animate.onfinish =()=>{\r\n                            if (index < keyframes.length -1){\r\n                                index += 1;\r\n                                recurseCall()\r\n                            } else {\r\n                                keyframes = [];\r\n                                // console.log(index, keyframes.length)\r\n                                res();\r\n                            }\r\n                        };\r\n                    };\r\n\r\n\r\n                }; recurseCall();\r\n            };\r\n        });\r\n    }\r\n    parse(config){\r\n        let configs = [], length = config.length, i = -1;\r\n        // console.log(config);\r\n        while(++i < length){\r\n            let cf = config[i];\r\n            let selector = cf.selector, el;\r\n            \r\n            switch(true){\r\n                case !!(selector.val && selector.attr):{\r\n                    el = this.html.querySelectorIncluded(`[${selector.attr}=${selector.val}]`, selector.attr, selector.val);\r\n                } break;\r\n                case !!(selector.val && !selector.attr):{\r\n                    let attr = selector.val.match(new RegExp(`^[.]`))?'class':\r\n                    selector.val.match(new RegExp(`^[#]`))?'id':null;\r\n                    let val = (attr)?selector.val.slice(1):null;\r\n                    el = this.html.querySelectorIncluded(selector.val, attr, val);\r\n                } break;\r\n            };\r\n            cf.element = el;\r\n            configs.push(cf);\r\n        };\r\n        // console.log(configs);\r\n        return configs;\r\n    }\r\n    dic(name){\r\n        let coll = {\r\n            slideOutUp:[{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\",\r\n                easing: 'ease-out',\r\n            },{\r\n                transform: \"translate3d(0,100%,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\",\r\n                easing: 'ease-out',\r\n            }],\r\n            slideOutRight:[{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\"\r\n            },{\r\n                transform: \"translate3d(100%,0,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\"\r\n            }],\r\n            slideOutLeft:[{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\"\r\n            },{\r\n                transform: \"translate3d(-100%,0,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\"\r\n            }],\r\n            slideOutDown:[{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\",\r\n                easing: 'ease-out'\r\n            },{\r\n                transform: \"translate3d(0,-100%,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\",\r\n                easing: 'ease-out',\r\n            }],\r\n            slideInUp:[\r\n                {\r\n                    transform: \"translate3d(0,100%,0)\",\r\n                    visibility: \"hidden\",\r\n                    opacity: \"0\",\r\n                    easing: 'ease-out',\r\n                },\r\n                {\r\n                    transform: \"translate3d(0,0,0)\",\r\n                    visibility: \"visible\",\r\n                    opacity: \"1\",\r\n                    easing: 'ease'\r\n                },\r\n            ],\r\n            slideInRight:[{\r\n                transform: \"translate3d(100%,0,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\"\r\n            },{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\"\r\n            }],\r\n            slideInLeft:[{\r\n                transform: \"translate3d(-100%,0,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\",\r\n                easing:'ease-out',\r\n            },{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\"\r\n            }],\r\n            slideInDown:[{\r\n                transform: \"translate3d(0,-100%,0)\",\r\n                visibility: \"hidden\",\r\n                opacity: \"0\",\r\n                easing: 'ease-out',\r\n            },{\r\n                transform: \"translate3d(0,0,0)\",\r\n                visibility: \"visible\",\r\n                opacity: \"1\",\r\n                easing: 'ease-out',\r\n            }],\r\n            disappear:[{\r\n                opacity: \"1\"\r\n            },{\r\n                opacity: \"0\"\r\n            }],\r\n            appear:[{\r\n                opacity: \"0\"\r\n            },{\r\n                opacity: \"1\"\r\n            }],\r\n            flipInX:[\r\n                ,{offset:0, backfaceVisibility: \"visible\"}\r\n                ,{transform: \"perspective(400px) rotate3d(1,0,0,90deg)\",opacity: \"0\", offset:0}\r\n                ,{transform: \"perspective(400px) rotate3d(1,0,0,-20deg)\", offset: 0.4,easing:'ease-in'}\r\n                ,{offset:0.6,  opacity: \"1\",transform: \"perspective(400px) rotate3d(1,0,0,10deg)\"}\r\n                ,{transform: \"perspective(400px) rotate3d(1,0,0,-5deg)\", offset:0.8}\r\n                ,{offset:1, backfaceVisibility: \"visible\",transform: \"perspective(400px) rotate3d(1,0,0,0)\"}\r\n            ],\r\n        };\r\n        return coll[name.trim()] || [];\r\n    }\r\n};","const Mo = require('./animate');\r\nconst Piece = require('./piece');\r\nconst Utils = require('./utils');\r\nconst Templating = require('./templating');\r\nconst Plugin = require('./plugin');\r\n\r\n// const {pushState} = require('./router')();\r\n\r\nfunction Component(name, template, options){\r\n    this.name = name;\r\n    this.template = template;\r\n    this.options = options;\r\n    this.handlers = options.handlers;\r\n    this.subscribe = options.subscribe;\r\n    this.data = {};\r\n    this.root = options.root;\r\n    this.items = false;\r\n    this.type = options.type || 'view';\r\n    this.toggle = options.toggle;\r\n    this.targets = {};\r\n    this.animateOptions = options.animate;\r\n    this.role = options.role;\r\n    this.isReady = false;\r\n    this.scope = options.scope;\r\n\r\n    this.formSelector = options.form;\r\n\r\n    this.await = {};//storage of async handlers\r\n    \r\n    this.state = options.state;\r\n    this.originalState = {};\r\n\r\n\r\n    this.utils = Utils;\r\n\r\n\r\n\r\n    // options.data && options.data.bind(this.data)(this);\r\n    ((name == 'app') || (options.role == 'app')) && (()=>{ this.staticComponent = options.static || [];})();\r\n    // options.trigger && options.trigger.bind(this)();\r\n    // options.utils && options.utils.bind(this.utils)(this);\r\n\r\n    this.container = {};\r\n\r\n\r\n    this.compile = new Promise((res)=>{\r\n\r\n        this._bindHandlers();\r\n        res();\r\n    }).then(()=>{\r\n\r\n        return this._bindSubscribe();\r\n    }).then(()=>{\r\n        return this.cloneState();\r\n    }).then(()=>{\r\n        switch(this.type == 'view' && !!this.template){\r\n            case true:\r\n                return this.createElementAsync();\r\n            default:\r\n                this.isStatic = false;\r\n                break\r\n        };\r\n    });\r\n\r\n};\r\n\r\nComponent.prototype.isStatic = false;\r\nComponent.prototype.hasEvent = false;\r\nComponent.prototype.isConnected = false;\r\nComponent.prototype.destroyed = false;\r\nComponent.prototype.isCreated = false;\r\n\r\n\r\n\r\nComponent.prototype.cloneState = function(){\r\n    if(!this.state){\r\n        return;\r\n    };\r\n    for (let key in this.state){\r\n        if(this.state.hasOwnProperty(key)){\r\n            this.originalState[key] = this.state[key];\r\n        };\r\n    };\r\n    this.$state = (()=>{\r\n        return this.state;\r\n    })();\r\n\r\n};\r\n\r\n\r\n\r\nComponent.prototype.clearState = function(){\r\n    if(!this.state){\r\n        return;\r\n    };\r\n    this.state = JSON.parse(JSON.stringify(this.originalState));\r\n\r\n    this.$state = (()=>{\r\n        return this.state;\r\n    })();\r\n};\r\n\r\nComponent.prototype.Subscribe = function(handler){\r\n    this.$observer.registerSubscribe({\r\n        [handler.listenTo]:{\r\n            [handler.original]:[handler],\r\n        }\r\n    })\r\n};\r\n\r\nComponent.prototype.Node = function(el){\r\n    const piece = new Piece(el);;\r\n    return piece;\r\n};\r\n\r\nComponent.prototype._bindHandlers = function(){\r\n    for (let key in this.handlers){\r\n        if (this.handlers.hasOwnProperty(key)){\r\n            let fn = this.handlers[key];\r\n            let originalName = fn.name;\r\n            fn = fn.bind(this);\r\n            fn.original = originalName;\r\n            fn.binded = this.name;\r\n            this.handlers[originalName] = fn;\r\n    \r\n            this.initAwaitHandlers(key);\r\n        };\r\n    };\r\n    if (!this.await.destroy){\r\n        this.await.destroy = Promise.resolve();\r\n    }\r\n    if (!this.await.animateRemove){\r\n        this.await.animateRemove = Promise.resolve();\r\n    }\r\n};\r\n\r\nComponent.prototype.initAwaitHandlers = function(handlerName){\r\n    //initializing awaits for handlers;\r\n    this.await[handlerName] = Promise.resolve();\r\n};\r\n\r\nComponent.prototype._bindSubscribe = function(){\r\n    //binding the subscribe to component;\r\n    let flattened = {};\r\n    for (let component in this.subscribe){\r\n        if (this.subscribe.hasOwnProperty(component)){\r\n            subscribe = this.subscribe[component];\r\n\r\n            if(!!subscribe.components && !subscribe.handler){\r\n                throw new Error(`there is no handler in format many of subscribe in event ${component}`);\r\n            } else if (!subscribe.components && !!subscribe.handler){\r\n                throw new Error(`there is no components in format many of subscribe in event ${component}`);\r\n            };\r\n\r\n            let isMany = !!subscribe.components && !!subscribe.handler;\r\n            \r\n            if (isMany){\r\n    \r\n                /**\r\n                 * multiple components triggering the same event;\r\n                 * this component is listening to that one event;\r\n                    event :{\r\n                        components:[],\r\n                        handler(){},\r\n                    }\r\n                 */\r\n                let event = component;\r\n                // let {components, handler} = subscribe;\r\n\r\n                let components = subscribe.components;\r\n                let handler = subscribe.handler;\r\n\r\n                handler =  handler.bind(this);\r\n                handler.binded = this.name;\r\n                handler.original = event;\r\n                for (let c = 0; c < components.length; c++){\r\n                    let component = components[c];\r\n      \r\n                    if (!flattened[component]){\r\n                        flattened[component] = {};\r\n                    };\r\n                    if (!flattened[component][event]){\r\n                        // flattened[component][event] = [];\r\n                        flattened[component][event] = {};\r\n                    }\r\n                    handler.listenTo = component;\r\n                    // flattened[component][event].push(handler);\r\n                    flattened[component][event] = handler;\r\n                };\r\n    \r\n            } else {\r\n                \r\n                if (!flattened[component]){\r\n                    flattened[component] = {};\r\n                };\r\n                /**\r\n                single event is triggerd by a component;\r\n                    component:{\r\n                        event:{\r\n                            handler(){},\r\n                        }\r\n                    }\r\n                 */\r\n                 let fns = subscribe;//object\r\n       \r\n                 for (let fn in fns){\r\n                    if (fns.hasOwnProperty(fn)){\r\n                        let handler = fns[fn];\r\n                        let original = handler.name;\r\n\r\n                        // console.log(component, handler);\r\n                        try{\r\n                            handler = handler.bind(this);\r\n                        } catch(err){}\r\n                        handler.original = original;\r\n                        handler.binded = this.name;\r\n                        handler.listenTo = component;\r\n       \r\n                        if (!flattened[component][original]){\r\n                           flattened[component][original] = {};\r\n                        //    flattened[component][original] = [];\r\n                        };\r\n                        \r\n                        // flattened[component][original].push(handler);\r\n                        flattened[component][original] = handler;\r\n                    };\r\n    \r\n                 };\r\n            };\r\n        };\r\n    };\r\n    this.subscribe = flattened;\r\n};\r\n\r\n\r\n\r\nComponent.prototype.doFor = function(prop, newValue){\r\n    // console.trace();\r\n    const getHTML = ()=>{\r\n        return this.html;\r\n    };\r\n    if (newValue == null) return;\r\n    return this.$attrib.notifyFor(prop, newValue, null, this.name, getHTML());\r\n};\r\n\r\nComponent.prototype.doToggle = function(prop, newValue){\r\n    this.$attrib.notifyToggle(prop, newValue, null, this.name, this.html);\r\n};\r\nComponent.prototype.doSwitch = function(prop, newValue){\r\n    this.$attrib.notifySwitch(prop, newValue, null, this.name, this.html);\r\n};\r\nComponent.prototype.doIf = function(prop, newValue){\r\n    this.$attrib.notifyIf(prop, newValue, null, this.name, this.html);\r\n};\r\nComponent.prototype.$animate = function(moment){\r\n    //normalize the two sourse, attr, and component declaration;\r\n    let ata = this.$attrib.getWatchItemsByType(this.name, 'animate');\r\n    let da = this.animateOptions;\r\n    let arr = [];\r\n    \r\n    ;(()=>{\r\n        if ((!ata.length && !(ata instanceof Array)) || !da){return;}\r\n        for (let a = 0; a < ata.length; a++){\r\n            let at = ata[a];\r\n            // let {ns:name, selector} = at;\r\n\r\n            let name = at.ns;\r\n            let selector = at.selector;\r\n\r\n            //declare name space in html, mapped to component animation declaration\r\n            if (at.ns){\r\n                if (da[name]){\r\n                    let ns = da[name];\r\n                    Object.assign(at, da[name]);\r\n                    delete da[name];\r\n                };\r\n            } else {\r\n                //declared animation in html, using animation name;\r\n                arr.push(ata);\r\n            };\r\n        };\r\n    })();\r\n    if (!ata.length) {return false}\r\n    //tweak component declared animation;\r\n    ;(()=>{\r\n        let obj = {};\r\n        let selector = {};\r\n        for (let key in da){\r\n            if (da.hasOwnProperty(key)){\r\n                selector.val = key;\r\n                obj.selector = selector;\r\n                Object.assign(obj, da[key]);\r\n                ata.push(obj);\r\n                //reset;\r\n                obj = {};\r\n                selector = {};\r\n            };\r\n        };\r\n    })();\r\n\r\n    // console.log(ata);\r\n\r\n    \r\n    return new Mo(ata, this.html).animate(moment);\r\n    // return Promise.resolve();\r\n};\r\n\r\nComponent.prototype.$templating = function(data, t, isConvert){\r\n    let template = t || this.template;\r\n    return new Templating(Plugin('templating')).createElement(data, template, isConvert);\r\n};\r\n\r\nComponent.prototype.createElement = function(){\r\n    let isSelector = this.template.substring(0,1) == '#';\r\n    if (!isSelector) return;\r\n    let selector =  this.template.substr(1);\r\n    let query = document.getElementById(selector);\r\n    let isTemplate = this.isTemplate = query && query.toString().includes('Template');\r\n\r\n\r\n\r\n    if (!query){\r\n        throw new Error(`the template for ${this.name} is not found with.`);\r\n    };\r\n\r\n    return new Promise((res)=>{\r\n        switch(isTemplate){\r\n            //template html\r\n            case true:{\r\n                // console.time(this.name)\r\n                let element = query.getContent(true);\r\n                if (!element){\r\n                    throw new Error(`it might be theres no template in component - ${this.name}`);\r\n                }\r\n                element.cake_component = this.name;\r\n                // console.timeEnd(this.name)\r\n                this.html = this.Node(element);\r\n                // console.log(274,this.html);\r\n                this._parseHTML(this.isStatic).then(()=>{\r\n                    res();\r\n                })\r\n            } break;\r\n            case null:{\r\n                res();\r\n            }\r\n            break;\r\n            //static html\r\n            default:{\r\n                let element = query;\r\n                if (!element){\r\n                    throw new Error(`it might be theres no template in component - ${this.name}`);\r\n                }\r\n                element.cake_component = this.name;\r\n                this.html = this.Node(element);\r\n                // console.log(290,this.html);\r\n                this.isStatic = true;\r\n\r\n                this._parseHTML(this.isStatic).then(()=>{\r\n                    res();\r\n                })\r\n            };\r\n        };\r\n    })\r\n};\r\n\r\nComponent.prototype.createElementAsync = function(){\r\n\r\n    return new Promise((res)=>{\r\n        this.createElement().then(()=>{\r\n            res();\r\n        });\r\n    }).then(()=>{\r\n        // console.log(`${this.name} is rendered async`)\r\n        this.isReady = true;\r\n    });\r\n    // console.log(`${this.name} is creating async el`)\r\n};\r\n\r\nComponent.prototype._isParsed = false;\r\n\r\nComponent.prototype._parseHTML = function(isStatic=false){\r\n    return this.$attrib.inject(this.html, this.name, isStatic).then(()=>{\r\n        // console.log(this.html, this.name)\r\n        this.original = this.html.cloneNode();\r\n        this._isParsed = true;\r\n    });\r\n};\r\n\r\nComponent.prototype.render = function(options={}){\r\n\r\n    if(this.isConnected){\r\n        console.error(`${this.name} is already rendered and connected to the DOM`);\r\n        return Promise.resolve();\r\n    };\r\n\r\n    // let {root, cleaned, emit={}, data={}} = options || {};\r\n\r\n    let root = options.root;\r\n    let cleaned = options.cleaned;\r\n    let emit = options.emit || {};\r\n    let data = options.data || {};\r\n\r\n\r\n\r\n    let multiple = this.options.multiple;\r\n    let state = this.state || {};\r\n\r\n    let payload = {emit};\r\n\r\n    const getValue = (item)=>{\r\n        //get the initial value in state as it being cleared when the component is destroyed;\r\n        //or in the data attribute upon render;\r\n        return {...state,...data}[item] || null;\r\n    };\r\n\r\n    return new Promise((res, rej)=>{\r\n\r\n        (!!root) && (this.root = root);\r\n        \r\n\r\n        if (!this.isReady){\r\n            this.createElement().then(()=>{\r\n                // (hashed === true) && this.$hash.add(this.name);\r\n\r\n                return (!this.template) && this.fire.isConnected && this.fire.isConnected(payload, true);\r\n\r\n            }).then(()=>{\r\n                this.isReady = true;\r\n                res();\r\n            });\r\n        } else {\r\n            res();\r\n        };\r\n    }).then(()=>{\r\n        return this.await.destroy.then(()=>{\r\n            return this.await.animateRemove;\r\n        }).then(()=>{\r\n            return new Promise((res, rej)=>{\r\n                //html restructure base on data;\r\n                //by mutation;\r\n    \r\n                let forItems = this.$attrib.getWatchItemsByType(this.name, 'for');\r\n                // for (let i = 0; i < forItems.length; i++){\r\n                //     let nv = getValue(forItems[i]);\r\n                //     this.doFor(forItems[i], nv);\r\n                // };\r\n                // console.log(forItems);\r\n                Promise.all(forItems.map(item=>{\r\n                    return this.doFor(item, getValue(item));\r\n                })).then(()=>{\r\n                    // console.log(405, this.name, this.html);\r\n                    res(this.html);\r\n\r\n                });\r\n\r\n\r\n\r\n            }).then((element)=>{\r\n                payload = {element, emit};\r\n                \r\n                return new Promise((res, rej)=>{\r\n                    try {\r\n                        this.fire.beforeConnected && this.fire.beforeConnected(payload, true);\r\n                        res(element);\r\n                    } catch(err){\r\n                        rej(err);\r\n                    };\r\n                });\r\n            }).then((element)=>{\r\n                if (this.isStatic){\r\n                    //static component, those already attached to DOM;\r\n                } else {\r\n                    //replace the mustache here;\r\n                    let prom = (!data)?Promise.resolve():(()=>{\r\n                        return new Promise((res)=>{\r\n                            let el = element.getElement();\r\n                            el = this.$templating(data, el);\r\n                            this.html = element = this.Node(el);\r\n                            this.html.replaceDataSrc();\r\n                            \r\n                            data = null;\r\n                            res();\r\n                        })\r\n                    })();\r\n  \r\n                    return prom.then(()=>{\r\n                        \r\n    \r\n                        element.appendTo(this.root, cleaned);\r\n                        this.isConnected = true;\r\n                    });\r\n                }\r\n            }).\r\n            // .then(()=>{\r\n            //     return this.findRouterLink();\r\n            // }).\r\n            then(()=>{\r\n                //switch\r\n                // let switchItems = this.$attrib.getWatchItemsByType(this.name, 'switch');\r\n    \r\n                // for (let i = 0; i < switchItems.length; i++){\r\n                //     this.doSwitch(switchItems[i], getValue(switchItems[i]));\r\n                // };\r\n            }).then(()=>{\r\n                return this.findContainer();\r\n                \r\n            }).then(()=>{\r\n                try {\r\n                    // console.log('setting attributes', this.name);\r\n                    return  this.fire.isConnected && this.fire.isConnected(payload, true);\r\n                }catch(err){\r\n                    console.log(440,err);\r\n                }\r\n            }).then(()=>{\r\n                return this.findTarget();\r\n            }).then(()=>{\r\n                // console.log(this.container);\r\n                // console.log('this containers must have el',this.name, this.container);\r\n                // return this.addEvent(static, multiple);\r\n                return this.addEvent();\r\n            }).then(()=>{\r\n                // console.log('start animation', this.name);\r\n                return this.$animate('render');\r\n            }).then(()=>{\r\n                (multiple) && this._smoothReset();\r\n                return new Promise((res, rej)=>{\r\n                    setTimeout(()=>{\r\n                        this._watchReactive();\r\n                        res();\r\n                    },100);\r\n                });\r\n            });\r\n    \r\n        })\r\n    })\r\n};\r\n\r\nComponent.prototype.renderAsync = function(options){\r\n    this.render(options).then(()=>{\r\n        this.$persist.append(this.name);\r\n    });\r\n};\r\n\r\nComponent.prototype._smoothReset = function(){\r\n    this.isConnected = false;\r\n    this.html = this.original.cloneNode();\r\n};\r\n\r\nComponent.prototype._hardReset = function(name){\r\n    this.isConnected = false;\r\n    this.$persist.remove(name);\r\n    //remove the element first;\r\n    //clone the element;\r\n    this.html = this.original.cloneNode();\r\n    return true;\r\n};\r\n\r\nComponent.prototype.reset = function(){\r\n    let animate = this.$animate('remove');\r\n    // console.log(this,this.html, animate);\r\n\r\n\r\n    if (animate instanceof Promise){\r\n        return this.await.animateRemove = new Promise((res)=>{\r\n            animate.then(()=>{\r\n                //it is very important to remove first the component\r\n                //before hard reset;\r\n                return this.html.remove();\r\n            }).then(()=>{\r\n                this.container = {};\r\n            }).then(()=>{\r\n                return this.clearState();\r\n            }).then(()=>{\r\n                return this._hardReset(this.name);\r\n            }).then(()=>{\r\n                res();\r\n            });\r\n        });\r\n    } else {\r\n        return new Promise((res)=>{\r\n            this.html.remove(this.name);\r\n            this.clearState();\r\n            this.container = {};\r\n            this._hardReset(this.name);\r\n            res();\r\n        });\r\n    }\r\n};\r\n\r\nComponent.prototype.addEvent = function (static, multiple){\r\n    // let isStatic = !!static;\r\n    // let isMultiple = !!multiple;\r\n    // if (isMultiple && isStatic){\r\n    //     return false;\r\n    // };\r\n    let component = this.name;\r\n    function notify(event, component,  isPreventDefault, isStopPropagation){\r\n        return function(e){ \r\n            // console.log(512,e);\r\n            // console.log(509,!isPreventDefault, component,event)\r\n            if (!isPreventDefault){\r\n                e.preventDefault();\r\n            };\r\n            if (isStopPropagation){\r\n                e.stopPropagation();\r\n            };\r\n\r\n            Cake.Observer.notify(component, event, e);\r\n        };\r\n    };\r\n    // this.name == 'product_list' && console.log(this.targets);\r\n    // console.log(547,this.name, this.targets);\r\n    if (!this.targets) return;\r\n    for (let event in this.targets){\r\n        if (this.targets.hasOwnProperty(event)){\r\n            // let cf = JSON.parse(JSON.stringify(this.targets[event]));\r\n            let cf = this.targets[event];\r\n            // if(this.name == 'sidebar'){\r\n            //     console.log(527, cf);\r\n            // };\r\n  \r\n            for (let item of cf){\r\n                // let {sel, el, cb} = item;\r\n\r\n                let sel = item.sel;\r\n                let el = item.el;\r\n                let cb = item.cb;\r\n\r\n                let _event = event;\r\n                \r\n                let place = event.substring(0,2);\r\n                let isPreventDefault = place.includes('~');//default to true;\r\n                let isStopPropagation = place.includes('^');//default to false;\r\n\r\n                // console.log(542,isPreventDefault);\r\n\r\n                if(isPreventDefault || isStopPropagation){\r\n                    _event = event.slice(1);\r\n                    cb = cb || _event;\r\n                } else {\r\n                    if(!cb){\r\n                        cb = event;\r\n                    }\r\n                };\r\n\r\n                if (!el.Ref().get('__cake__events')){\r\n                    el.Ref().set('__cake__events', {});\r\n                }; \r\n                let store = el.Ref().get('__cake__events');\r\n                \r\n                if (!store[cb]){\r\n\r\n                    el.addEventListener(_event, notify(cb, component, isPreventDefault, isStopPropagation), true);\r\n                    store[cb] = true;\r\n                    el.Ref().set('__cake__events', store);\r\n                } else {continue};\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nComponent.prototype.findTarget = function(){\r\n    let q = this.$attrib.getEventTarget(this.name);\r\n    return new Promise((res)=>{\r\n        for (let item of q){\r\n            let els = this.html.querySelectorAllIncluded(`[data-event=${item.sel}]`);\r\n            for (let e = 0; e < els.length; e++){\r\n                if (!this.targets[item.event]){\r\n                    this.targets[item.event] = [];\r\n                };\r\n                this.targets[item.event].push({el:els[e], ...item});\r\n            };\r\n        };\r\n        res();\r\n    });\r\n}; \r\n\r\n// Component.prototype.findRouterLink = function(){\r\n//     let q = this.$attrib.getRouterTarget(this.name);\r\n//     let e = JSON.parse(JSON.stringify(q));//deep cloning\r\n\r\n//     for (let item of e){\r\n        \r\n//         item.el = document.querySelector(`[data-event=${item.sel}]`);\r\n//         if (!item.el.__router){\r\n//             // item.el.addEventListener('click',(e)=>{\r\n//             //     e.preventDefault();\r\n//             //     e.stopPropagation();\r\n//             //     pushState(item.value, null, e.target.href);\r\n//             // });\r\n//             item.el.__router = 1;\r\n//         };\r\n//     };\r\n// }; \r\n\r\nComponent.prototype.toggler = function(_this){\r\n    /*\r\n        @params\r\n        {basis} - comparison of elements;\r\n        {cls} - class to toggle;\r\n        {mode} - radio/ switch;\r\n        {sel} - siblings selector;\r\n        {persist} - bool;\r\n    */\r\n    let attrToggle = this.$attrib.getWatchItemsByType(this.name, 'toggle');\r\n\r\n    let cl = class{\r\n        constructor(bind, bases, html, _this){\r\n            this.toggle = _this.toggle;\r\n            this.bind = bind;\r\n            this.bases = bases;\r\n            this.cache = _this.$cache;\r\n            this.html = html;\r\n        }\r\n        check(bind){\r\n            let config = this.toggle[bind];\r\n            // console.log(this.toggle)\r\n\r\n            if (!config){ \r\n                console.error(`${bind} is not found in toggle! choose from ${JSON.stringify(Object.keys(this.toggle))}`);\r\n            } else {\r\n                if (attrToggle.length){\r\n                    // let {ns} = config;\r\n                    let ns = config.ns;\r\n                    //toggle is use only for namespacing;\r\n                    let f = attrToggle.find(item=>{return item.name == `ns-${ns}`});\r\n                    f && (config.sel = `[data-toggle=${f.sel}]`);\r\n                };\r\n                return config;\r\n            };\r\n        }\r\n        _toggle(){\r\n            let config = this.check(this.bind);\r\n            if(!config){ return;}\r\n            // let {basis='data-name', cls='is-active', mode='radio', sel, persist=true} = config;\r\n\r\n            let basis = config.basis || 'data-name';\r\n            let cls = config.cls || 'is-active';\r\n            let mode = config.mode || 'radio';\r\n            let sel = config.sel;\r\n            let persist = config.persist == undefined? true : config.persist;\r\n\r\n            let targets = this.html.querySelectorAll(sel);\r\n            if (!targets.length) { return; };\r\n\r\n            let prev, next;\r\n\r\n            // console.log(targets);\r\n\r\n            if (targets.length == 1){\r\n                let isbool = typeof this.bases == 'boolean'\r\n                let isforce =  !!this.bases;\r\n                let el =  targets[0];\r\n                // console.log(isbool, isforce)\r\n                if (persist){\r\n                    const _forceState = function(el, cls, isforce){\r\n                        if(isforce){\r\n                            if (el.classList.contains(cls)){\r\n                                el.classList.remove(cls);\r\n                            };\r\n                        } else {\r\n                            if (!el.classList.contains(cls)){\r\n                                el.classList.add(cls);\r\n                            };\r\n                        }\r\n                    };\r\n                    if (isbool){\r\n                        if (isforce){\r\n                            this.cache.createOrUpdate(this.bind, true);\r\n                            _forceState(el, cls, true);                 \r\n                        } else {\r\n                            this.cache.createOrUpdate(this.bind,false);                          \r\n                            _forceState(el, cls, false);                 \r\n                        }\r\n                        el.classList.toggle(cls);\r\n                    } else {\r\n                        this.cache.createOrUpdate(this.bind, !el.classList.contains(cls));\r\n                        el.classList.toggle(cls);\r\n                    };\r\n                };\r\n            } else {\r\n                for (let t = 0; t < targets.length; t++){\r\n                    let el = targets[t];\r\n                    let has = el.classList.contains(cls);\r\n                    let attr = el.getAttribute(basis);\r\n                    \r\n                    if (attr == this.bases){\r\n                        if (mode == 'switch'){\r\n                            el.classList.toggle(cls);\r\n                        } else {\r\n                            if (!has){ el.classList.add(cls) };\r\n                        };\r\n                        if (persist){\r\n                            this.cache.createOrUpdate(this.bind, attr);\r\n                        };\r\n                        next = attr;\r\n                    } else {\r\n                        if(has){ \r\n                            el.classList.remove(cls)\r\n                            prev = el.getAttribute(basis);\r\n                        };\r\n                    };\r\n                };\r\n            }\r\n            return {prev, next};\r\n        }\r\n        _recall(){\r\n            let config = this.check(this.bind);\r\n            if(!config){ return;}\r\n            // let {basis='data-name', cls='is-active',  sel} = config;\r\n\r\n            let basis = config.basis || 'data-name';\r\n            let cls = config.cls || 'is-active';\r\n            let sel = config.sel;\r\n\r\n            return this.cache.get(this.bind).then(result=>{\r\n                if (!result){\r\n                    return result;\r\n                };\r\n                let bases = result;                \r\n                let targets = this.html.querySelectorAll(sel);\r\n                if (!targets.length) { return ;};\r\n                if (targets.length == 1){\r\n                    let el = targets[0];\r\n                    // console.log(bases, this.bind);\r\n                    if (bases){\r\n                        el.classList.add(cls);\r\n                    };\r\n                } else {\r\n                    for (let t = 0; t < targets.length; t++){\r\n                        let el = targets[t];\r\n                        let has = el.classList.contains(cls);\r\n                        let attr = el.getAttribute(basis);\r\n                        if (attr == bases){\r\n                            if (!has){ el.classList.add(cls) };\r\n                        };\r\n                    };\r\n                };\r\n                return bases;\r\n            });\r\n        }\r\n    };\r\n    let fn = (bind, bases)=>{\r\n        return new cl(bind, bases, this.html, this)._toggle();\r\n    };\r\n    fn.recall = (bind)=>{\r\n        return new cl(bind, false, this.html, this)._recall();\r\n    };\r\n    return fn;\r\n};\r\n\r\nComponent.prototype.findContainer = function(){\r\n\r\n\r\n    return new Promise((res)=>{\r\n        let containers = this.html.getContainers();\r\n        for (let c = 0; c < containers.length; c++){\r\n            let el = containers[c];\r\n            let name = el.dataset.container;\r\n            if (name){\r\n                this.container[name] = el;\r\n            };\r\n        };\r\n        res();\r\n    });\r\n\r\n    // console.log('must trigger first',containers);\r\n    // console.log('must trigger first',this.container);\r\n};\r\n\r\n\r\n\r\nComponent.prototype._validator = function(name, value){\r\n    if(this.options.validate){\r\n        this.validate = this.options.validate;\r\n        const handler = this.validate[name];\r\n        if(handler){\r\n\r\n        };\r\n    };\r\n};\r\n\r\n/*\r\n    this will watch the form input and validate the data,\r\n    , set it to scope and state as formData;\r\n*/\r\nComponent.prototype._watchReactive = function(){\r\n    if(this.role == 'form' && this.options.watch === true){\r\n        const validator = this.options.validate;\r\n        const form = this.$form();\r\n\r\n        if(form._reactive){\r\n            return ;\r\n        };\r\n  \r\n        if(this.state && !this.state.formData){\r\n            this.state.formData = {};\r\n        };\r\n        const component = this;\r\n        const handler = (e)=>{\r\n            const target = e.target;\r\n            const name = target.name || target.id;\r\n            const value = target.value;\r\n            let handler = validator[name];\r\n            if(handler){\r\n                handler = handler.bind(component);\r\n                if(handler){\r\n                    let validated = handler(e);\r\n                    if(validated){\r\n                        this.state && (this.state.formData[name] = value);\r\n                        this.$scope.set(name, value);\r\n                    };\r\n                };\r\n            } else {\r\n                this.state && (this.state.formData[name] = value);\r\n                this.$scope.set(name, value);\r\n            };\r\n        };\r\n        form.addEventListener('change',(e)=>{\r\n            if(!(e.target.tagName == 'INPUT' || e.target.tagName == 'TEXTAREA')){\r\n                handler(e);\r\n            };\r\n        });\r\n        form.addEventListener('input',(e)=>{\r\n            if(e.target.tagName == 'INPUT' || e.target.tagName == 'TEXTAREA'){\r\n                handler(e);\r\n            };\r\n        });\r\n        form._reactive = true;\r\n    };\r\n};\r\n\r\n\r\nComponent.prototype.observer = function(subscribe){\r\n    function callback(name){\r\n        return this.handler[name]\r\n    }\r\n    this.observer = new Observer(this, subscribe, callback.bind(this));\r\n};\r\n\r\nComponent.prototype.variable = function(obj){\r\n    let vary = Object.keys(obj);\r\n    let validate = {};\r\n    let values = [];\r\n    function invalid(name, test, type){\r\n        if (!test){\r\n            validate[name] = `value is not '${type}'`;\r\n        };\r\n    };\r\n    for (let key in obj){\r\n        if (obj.hasOwnProperty(key)){\r\n            let config = obj[key];\r\n            // let {type, value} = config;\r\n            let type = config.type;\r\n            let value = config.value;\r\n            let test;\r\n            if (['string', 'number'].includes(type)){\r\n                test = typeof value == type;\r\n            } else if (value instanceof Array){\r\n                test = type == 'array';\r\n            } else {\r\n                test = type == 'object';\r\n            }\r\n            values.push(value);\r\n            invalid(key, test, type);\r\n        };\r\n    };\r\n    if (Object.keys(validate).length){\r\n        throw new Error(JSON.stringify(validate));\r\n    } else {\r\n        return values;\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = Component;","const Utils = require('./utils');\nconst StorageKit = require('./storage')();\nconst ComponentStorage = require('./storage/components-store');\nconst authCredential = new StorageKit({\n    child:'object',\n    storage:'local',\n    name:`_cake_router_cf`,\n});\nmodule.exports = function(components, component){\n\n    const hooks = [];\n    return class {\n        constructor(routes, options){\n            \n            this.unauthRoute = options && options['401'] || null;\n\n            this.authRoute = {};\n            this.route = this.compile(routes);\n            this.prev = null;\n            this.components = ComponentStorage;\n\n            this.watch();\n            this.persist();\n            // this.navigate();\n\n            // console.log(this.route);\n            // console.log(12,routes);\n            // console.log(13,this.route);\n            // console.log(14,this.prev);\n            \n            Object.defineProperty(component.prototype, '$router', {\n                configurable:true,\n                get:()=>{\n                    return {\n                        goTo:this.goTo.bind(this),\n                        goBack:this.goBack.bind(this),\n                        auth:this.auth.bind(this),\n                        logout:this.logout.bind(this),\n                        ...this.prev,\n                    };\n                },\n                set(value){\n                    return;\n                },\n            });\n\n            // this.authenticate();\n\n        }\n        authenticate(initialize){\n            if(this.unauthRoute){\n                try {\n                    const config = authCredential.get('role', true);\n                    // console.log(52, this.authRoute);\n                    // console.log(53, config);\n                    if(config){\n                        if(initialize){\n                            // const {role, data} = config;\n\n                            const role = config.role;\n                            const data = config.data;\n\n                            const route = this.authRoute[role];\n                            // console.log(route);\n                            if(route){\n                                // const {name} = route;\n                                const name = route.name;\n                                this.goTo(name);\n                            };\n                        } else {\n    \n                        }\n                    } else {\n                        if(initialize){\n\n                        } else {\n                            this.logout();\n                        }\n                    };\n                } catch(err){\n                    if(initialize){\n                    } else {\n                        this.logout();\n\n                    }\n                };\n            };\n            \n        }\n        auth(cred){\n            if(cred){\n                // let {role,token, data} = cred;\n\n                let role = cred.role;\n                let token = cred.token;\n                let data = cred.data;\n\n\n                authCredential.createOrUpdate('role',{role,token, data});\n            } else {\n                const cred = authCredential.get('role', true);\n                if(cred){\n                    let o = {};\n\n                    if(cred){\n                        o = cred;\n                    }\n\n                    if(o.data){\n                        o = o.data;\n                    };\n                    if(o.user){\n                        o = o.user;\n                    };\n                    o.token = cred.token;\n                    return o;\n                } else {\n                    return \"token\";\n                }\n            };\n        }\n        logout(){\n            try {\n                authCredential.remove('role');\n            } catch(err){};\n            this.goTo(this.unauthRoute,{replace:true});\n            // sessionStorage.createOrUpdate('history',[]);\n        }\n        goTo(routeName,config){\n            try {\n                let routes = this.route;\n                // let {params={}, replace:isreplace} = config || {};\n\n                let params = config.params || {};\n                let isreplace = config.replace;\n\n\n                let hash = null;\n                const raw = Object.entries(routes);\n\n                // console.log(108, routeName,config,isreplace, raw);\n\n\n                for (let i = 0; i < raw.length; i++){\n                    // const [route, config] = raw[i];\n                    const route = raw[i][0];\n                    const config = raw[i][1];\n                    // const {name} = config;\n                    const name = config.name;\n\n\n                    if(name == routeName){\n                        hash = route;\n                        break;\n                    };\n                };\n                if(!hash){\n                    throw new Error(`${routeName} is not found in routes`);\n                };\n\n                // console.log(131, hash);\n\n                if(hash == '/'){\n                    if(isreplace){\n                        location.replace(`${location.origin}${location.pathname}`);\n                    } else {\n                        window.location = `${location.origin}${location.pathname}`;\n                    }\n                    return;\n                };\n\n                let path;\n                hash = hash.slice(1);\n                if(params.toString().includes('Object')){\n                    let p = '';\n                    for (let key in params){\n                        p += `${key}=${params[key]}&`;\n                    };\n                    params = p;\n                    path =`!/${hash}?${params}`;\n                } else {\n\n                    path = `!/${hash}`;\n                }\n                if(hash == '/'){\n                    path = \"\";\n                };\n\n                // console.log(159, path);\n\n                // console.log(123, isreplace);\n\n\n                if(isreplace){\n                    let loc = `${location.origin}${location.pathname}#${path}`;\n                    // console.log(180,loc, !Utils.isFirefox());\n                    // console.log(!Utils.isFirefox());\n                    Utils.isChrome() && !Utils.isFirefox() && history.replaceState(undefined, undefined, loc);\n                    location.replace(loc);\n                } else {\n                    // console.log(128,path);\n\n                    var a = document.createElement('a');\n                    a.href = `#${path}`;\n                    Utils.isChrome() && !Utils.isFirefox() && history.pushState(undefined, undefined, a.href);\n                    a.click();\n                    // console.log(171,a.href);\n\n                }\n            } catch(err){\n                console.log(err);\n            }\n        }\n        goBack(){\n            \n            // return storage.getAll().then(r=>{\n            //     console.log(94, r);\n            //     const l = r.length;\n            //     if(l && l > 1){\n            //         const prev = r[l-2];\n            //         if(prev){\n            //             this.goTo(prev);\n            //         }\n            //     };\n            // });\n            return new Promise((res, rej)=>{\n                // const prev = this.history[this.history.length-2];\n            \n                // if(prev){\n                //     this.goTo(prev, {replace:true});\n                // };\n                // console.log('hit back');\n                // console.log(prev);\n                window.history.back();\n                res();\n            });\n        }\n        persist(){\n            if (!document.hasRouterPersist){\n                let event = 'DOMContentLoaded';\n                if('deviceready' in document){\n                    event = 'deviceready';\n                };\n                document.addEventListener(event, (e)=>{\n                    this.parse();\n                    this.notify().then(()=>{\n                        return this.navigate(true);\n                    });\n                });\n    \n                document.hasRouterPersist = true;\n            };\n        }\n        watch(){\n            if (!window.hasRouterPop){\n                // console.log('set pop state');\n                window.addEventListener('popstate',(e)=>{\n                    // console.log(236, e);\n                    this.parse();\n                    this.notify().then(()=>{\n                        console.log('notified');\n                        return this.clear().then(()=>{\n                            console.log('cleared');\n                            return this.navigate().then(()=>{\n                                console.log('navigated');\n                            });\n                        });\n                    })\n                });\n\n                window.hasRouterPop = true;\n            } else {\n                this.parse();\n            };\n        }\n        compile(routes){\n            // console.log(167, this);\n            let con = {};\n            for (let key in routes){\n                let config = routes[key];\n                key = String(key);\n                const len = key.length;\n                let regex = key;\n                if(['404'].includes(key)){\n                    //http errors;\n                    const callback = routes[key];\n                    routes[key] = {callback, name:key};\n                } else {\n                    regex = regex.slice(1);\n                };\n                \n                regex = regex.split('/');\n                regex = regex.map((item, index)=>{\n                    let param = item.includes(':');\n                    let a = \"\";\n                    (index==0)?(a+=\"^/\"):(a+='/');\n                    (param?a+='(([^/#?]+?))':a+=item);\n                    (index == len-1)?a+='/?$':a+=\"\";\n                    if (param){\n                        const paramKey = item.replace(':',\"\");\n                        if (!con[key]){\n                            con[key] = {};\n                        };\n                        con[key].params = {\n                            [paramKey]:index,\n                        };\n                    };\n                    return a\n                });\n\n                \n\n                if (con[key] && con[key].params){\n                    con[key] = {\n                        params:con[key].params,\n                        regex:new RegExp(regex.join(\"\")),\n                        ...config,\n                    }\n                } else {\n                    con[key] = {\n                        regex:new RegExp(regex.join(\"\")),\n                        ...config,\n                    }\n                };\n\n                // let {auth} = config;\n                let auth = config.auth;\n\n                // console.log(217,auth);\n                // console.log(218,this);\n\n                if(auth){\n                    if(this.authRoute[auth]){\n                        throw new Error(`auth ${auth} is found in other route`);\n                    } else {\n                        this.authRoute[auth] = config;\n                    };\n                };\n\n            };\n            con.length = Object.keys(routes).length;\n            con.keys = Object.keys(routes);\n\n            // console.log(con);\n            return con;\n        }\n        parse(){\n            // console.log(330,this.route);\n            let hash = window.location.hash, scheme, routeName;\n            if(hash){\n                scheme = hash.includes('#!/')?2:hash.includes('#/')?1:null;\n                hash =  hash.slice(scheme);\n            } else {\n                hash = '/';\n                scheme = true;\n            };\n            if (!scheme){\n                return;\n            };\n            const url = new URL(`http://localhost${hash}`);\n            // const {search, pathname:path} = url;\n\n            let search = url.search;\n            let path = url.pathname;\n\n            const keys = this.route.keys;\n            const state = {};\n            if (search){\n                new URLSearchParams(search).forEach((value, key)=>{\n                    state[key] = value;\n                });\n            };\n\n            \n\n            let has = false;\n            for (let i = 0; i < keys.length; i++){\n                const route = this.route[keys[i]];\n\n                // const {regex, components, params, name, overlay,display,onrender} = route;\n\n\n                const regex = route.regex;\n                const components = route.components;\n                const params = route.params;\n                const name = route.name;\n                const overlay = route.overlay;\n                const display = route.display;\n                const onrender = route.onrender;\n\n\n                if (params){\n                    let _path = String(path);\n                    _path = _path.slice(1);\n                    _path = _path.split('/');\n                    Object.entries(params).forEach(param=>{\n                        // const [key, value] = param;\n\n                        const key = param[0];\n                        const value = param[1];\n\n                        if (_path[value]){\n                            state[key] = _path[value];\n                        };\n                    });\n                };\n\n                const test = regex.test(path);\n\n                // console.log(160, test, route);\n                \n                if (test){\n                    routeName = name;\n                    \n                    if(this.unauthRoute != name){\n                        this.authenticate();\n                    } else {\n                        this.authenticate(true);\n                    };\n\n                    // console.log(381, route);\n\n                    this.prev = {components, state,path, name, prev:this.prev, overlay, display, onrender};\n                    has = true;\n                    break;\n                };\n            };\n\n\n            if(!has){\n                if(this.route['404']){\n                    let path = this.route['404'].callback();\n                    // const {origin, pathname} = location;\n\n                    let origin = location.origin;\n                    let pathname = location.pathname;\n\n                    if(this.route[path]){\n                        // console.log(1);\n                        if(path == '/'){\n                            path = `${origin}${pathname}`;\n                        } else {\n                            if(pathname.slice(-1) == '/'){\n                                path = `${origin}${pathname}#!${path}`;\n                            } else {\n                                path = `${origin}${pathname}/#!${path}`;\n                            };\n                        };\n                        location.replace(path);\n                    } else if(!!path && !this.route[path]) {\n                        if(origin.slice(-1)=='/'){\n                            if(path[0] == '/'){\n                                path = path.slice(1);\n                            };\n                        };\n                        path = `${origin}${path}`;\n                        location.replace(path);\n                    };\n                };\n            } else {\n                // return await this.log(routeName);\n            }\n        }\n        navigate(ispersist){\n            // console.log('here', this.prev);\n            if (this.prev){\n                // const {components, state, path, name, overlay, onrender={}} = this.prev;\n\n                const components = this.prev.components;\n                const state = this.prev.state;\n                const path = this.prev.path;\n                const name = this.prev.name;\n                const overlay = this.prev.overlay;\n                const onrender = this.prev.onrender || {};\n\n\n                // if(overlay){\n                //     storage.create(name);\n                // };\n\n\n                // console.log(425, components);\n\n                try {\n\n                    // console.log(hooks);\n                    if(components.length){\n                        // return Promise.all(components.map(item=>{                        \n                        //     return this.components[item].render({emit:{route:this.prev}});\n                        // }));\n                        return new Promise((res, rej)=>{\n                            const l = components.length;\n                            let i = 0;\n\n\n                            if(l){\n                                const recur = ()=>{\n                                    let component = components[i];\n\n                                   \n\n                                    if(components.length > i){\n                                        let componentName = component;\n                                        // component = this.components[component];\n                                        component = this.components.get(component);\n\n                                        component.render({emit:{route:this.prev},...(onrender[componentName] || {})}).then(()=>{\n                                            if(component.await.isConnected){\n                                                component.await.isConnected && component.await.isConnected.then(()=>{\n                                                    recur();\n                                                });\n                                            } else {\n                                                recur();\n                                            }\n                                        }).catch(err=>{\n                                            throw err;\n                                        });\n    \n                                        i += 1;\n                                    } else {\n                                        res()\n                                        // rej(`${component} is not found`);\n                                    };\n                                    \n                                };recur();\n                            } else {\n                                res();\n                            };\n                        });\n                    }\n\n                } catch(err) {\n                    console.log(err);\n                    throw new Error(`some of the component in ${JSON.stringify(components)} in path ${path} of router is not found, make sure the it is created`);\n                }\n            }\n        }\n        static pushState(data, notused, path){\n            window.history.pushState(data, notused, path);\n            let promise = Promise.resolve();\n            if (this.prev){\n                // const {components:_components, state, path, name} = this.prev;\n\n                const _components = this.prev.components;\n                const state = this.prev.state;\n                const path = this.prev.path;\n                const name = this.prev.name;\n\n                promise = new Promise((res, rej)=>{\n                    const l = components.length;\n                    let i = 0;\n                    if(l){\n                        const recur = ()=>{\n                            let component = components[i];\n                            if(components.length > i){\n                                // component = this.components[component];\n                                component = this.components.get(component);\n                                component.fire.destroy();\n                                component.await.destroy.then(()=>{\n                                    recur();\n                                });\n                            } else {\n                                // rej(`${component} is not found`);\n                                res()\n                            };\n                            \n                            i += 1;\n                        };recur();\n                    } else {\n                        res();\n                    };\n                });\n\n                // promise = Promise.all(_components.map(item=>{\n                //     return components[item].fire.destroy();\n                // }));\n            };\n            return promise.then(()=>{\n                return this.navigate();\n            })\n        }\n        clear(){\n            let promise = Promise.resolve();\n            \n\n            const overlay = this.prev && this.prev.overlay || undefined;\n            //if overlay prevent in detroying current rendered component;\n            if(overlay){\n                return promise;\n            };\n\n            // console.log('has cleared?', overlay);\n\n\n            const recur = function(index, componentNames, sourceComponents, callback){\n                let component = componentNames[index];\n                let componentName = component;\n                let self = recur;               \n                try {\n\n                    if(componentNames.length > index){\n                        // component = sourceComponents[component];\n\n                        component = sourceComponents.get(component);\n\n\n\n                        if(!component.fire.destroy){\n                            throw new Error(`${componentName} has no destroy handler!`);\n                        };\n\n                        component.fire.destroy();\n                        component.await.destroy.then(()=>{\n                            self(index, componentNames, sourceComponents, callback);\n                        });\n                    } else {\n                        // rej(`${component} is not found`);\n                        callback()\n                    };\n                    index += 1;\n                } catch(err){\n                    throw (err);\n                }\n            };\n\n            // console.log(624, this.components);\n\n            if (this.prev && this.prev.prev){\n                // const {components, state, path, name, overlay} = this.prev.prev;\n                let components = this.prev.prev.components;\n                let state = this.prev.prev.state;\n                let path = this.prev.prev.path;\n                let name = this.prev.prev.name;\n                let overlay = this.prev.prev.overlay;\n                let destroyPromise = Promise.resolve();\n                // const components = this.prev.components;\n\n                if(overlay){\n                    destroyPromise = new Promise((res, rej)=>{\n                        \n                        const l = components.length;\n                        \n                        let i = 0;\n                        if(l){\n                            recur(i, components, this.components, res);\n                        } else {\n                            res();\n                        };\n                    });\n                };\n\n                promise = new Promise((res, rej)=>{\n                    \n                    const l = components.length;\n                    // console.log(644, components, l);\n                    let i = 0;\n                    if(l){\n                        recur(i, components, this.components, res);\n                    } else {\n                        res();\n                    };\n                });\n                return destroyPromise.then(()=>{\n                    return promise;\n                });\n            };\n            return promise;\n        }\n        pushState(data, notused, path){\n            window.history.pushState(data, notused, path);\n            let promise = Promise.resolve();\n            this.clear();\n            return promise.then(()=>{\n                return this.navigate();\n            })\n        }\n        static subscribe(fn){\n            if(fn && fn.constructor.name == 'Function'){\n                hooks.push(fn);\n            };\n        }\n        notify(){\n            return Promise.all((false)?[Promise.resolve()]:hooks.map(subscribe=>{\n                return subscribe();\n            }))\n        }\n    }\n};","const StorageKit = require('./storage')();\r\nconst ComponentStorage = require('./storage/components-store');\r\nmodule.exports = class {\r\n    constructor(){\r\n        this.storage = new StorageKit({\r\n            child:'array',\r\n            storage:'session',\r\n            name:'_cake_persistent',\r\n        });\r\n    }\r\n    listen(components){\r\n        components = ComponentStorage;\r\n        let event = 'DOMContentLoaded';\r\n        if('deviceready' in document){\r\n            event = 'deviceready';\r\n        };\r\n        window.addEventListener(event, (e)=>{\r\n            setTimeout(()=>{\r\n                this.storage.getAll().then(result=>{\r\n                    if (!(result && !result.length)) return;\r\n\r\n\r\n                    for (let r = 0; r < result.length; r++){\r\n                        let item = result[r];\r\n                        let component = components.get(item);\r\n                        component.isConnected = false;\r\n\r\n\r\n                        \r\n                        if (component){\r\n                            // console.log(component, !component.isConnected);\r\n                            !component.isConnected && component.render.bind(component)();\r\n                        } else {\r\n                            console.error(`component ${component} is not found!`)\r\n                        }\r\n                    };\r\n                })\r\n            })\r\n        });\r\n    }\r\n    append(name){\r\n        this.storage.create(name);\r\n    }\r\n    remove(name){\r\n        this.storage.remove(name);\r\n    }\r\n};","const stat = {\n    handlers:{},\n    subscribe:{},\n};\n\nwindow.Stat = stat;\n\nfunction set(storage, component, fn){\n\n    if(storage[component] == undefined){\n        storage[component] = {};\n    };\n    if(storage[component][fn] == undefined){\n        storage[component][fn] = 0;\n    } else {\n        storage[component][fn] += 1;\n    };\n    return true;\n}\n\nmodule.exports = {\n    handlers:{\n        set:function(component, fn){\n            return set(stat.handlers,component, fn);\n\n        },\n        get:function(component){\n            if(stat.handlers[component] != undefined){\n                console.table(stat.handlers[component]);\n            } else {\n                console.log(null);\n            };\n        },\n    },\n    subscribe:{\n        set:function(component, fn){\n            return set(stat.subscribe,component, fn);\n        },\n        get:function(component){\n            if(stat.subscribe[component] != undefined){\n                console.table(stat.subscribe[component]);\n            } else {\n                console.log(null);\n            };\n        },\n    },\n}","const Stat = require('./handler-stat');\nconst subscriber = {};\n\nwindow.Subscribe = subscriber;\nmodule.exports = {\n    set:function(subscribe){\n        return new Promise((res, rej)=>{\n            for(component in subscribe){\n                if (subscribe.hasOwnProperty(component)){\n\n                    let events = subscribe[component];\n                    for (let event in events){\n                        if (events.hasOwnProperty(event)){\n                            let handler = events[event];\n    \n                            if(!subscriber[component]){\n                                subscriber[component] = {};\n                            };\n                            if(!subscriber[component][event]){\n                                subscriber[component][event] = [];\n                            };\n                            subscriber[component][event].push(handler);\n\n                            Stat.subscribe.set( component,handler.original);\n                        };\n                    };\n                };\n            };\n            res();\n        });\n    },\n    get:function(component, event){\n        return subscriber[component] && subscriber[component][event];\n    },\n};","const Stat = require('./handler-stat');\nconst handler = {};\n\nwindow.Handler = handler;\n\nmodule.exports = {\n    set:function(handlers, component){\n\n        return new Promise((res)=>{\n            for (let fn in handlers){\n                if (handlers.hasOwnProperty(fn)){\n                    let _handler = handlers[fn];\n                    // Handler[component][fn] = handler;\n        \n\n                    if(!handler[component]){\n                        handler[component] = {};\n                    };\n            \n                    handler[component][_handler.original] = _handler;\n        \n                    Stat.handlers.set( component,_handler.original);\n                };\n            };\n\n            res();\n        });\n    },\n    get:function(component, event){\n        return handler[component] && handler[component][event];\n    },\n};","const Subscriber = require('./storage/subscriber');\r\nconst Handler = require('./storage/handler');\r\nconst Stat = require('./storage/handler-stat');\r\n\r\nfunction Observer(logger){\r\n\r\n    this.logger = logger || false;\r\n    this.results = {};\r\n\r\n}\r\nObserver.prototype.notify = function(component, /*handler- name/fn*/event, e/*payload */){\r\n    /*\r\n        calls by fire or DOM event;\r\n        DOM Event - string;\r\n        fire - string || fn;\r\n    */\r\n       \r\n\r\n\r\n\r\n    let _component = component;\r\n    let _event = event;\r\n    let _e = e;\r\n\r\n    let handler = Handler.get(_component, _event);  \r\n    if (!handler) {\r\n        console.error(`no setup handler for the event ${_event} in ${_component} component`);\r\n        return;\r\n    };\r\n\r\n    _component = handler.binded;\r\n\r\n    //it is able to accept a promise from handlers;\r\n    let prom = new Promise((res,rej)=>{\r\n        let e = handler(_e);\r\n        res(e);\r\n    });\r\n\r\n    Stat.handlers.set( _component,handler.original);\r\n\r\n    return prom.then(variable=>{\r\n        let execs = []; \r\n        if (!this.results[_component]){\r\n            this.results[_component] = {};\r\n        };\r\n        let subscribe = Subscriber.get(_component, _event);\r\n        if (subscribe){\r\n            for (let s = 0; s < subscribe.length; s++){\r\n                let fn = subscribe[s];\r\n\r\n                Stat.subscribe.set( _component,fn.original);\r\n\r\n                execs.push(new Promise((res, rej)=>{\r\n                    try{\r\n                        let exec = (()=>{\r\n                            return fn(variable)\r\n                        })();\r\n\r\n                        if (exec && exec.ObjectType == 'Promise'){\r\n                             exec.then(result=>{\r\n                                if (!this.results[_component]){\r\n                                    this.results[_component] = {};\r\n                                };\r\n                                this.results[_component][_event] = result;\r\n                                res(result);\r\n                             }).catch(err=>{\r\n                                rej(err);\r\n                             });\r\n                        } else {\r\n                            this.results[_component][_event] = exec;\r\n                            res(exec);\r\n                        }\r\n                    } catch(e){\r\n                        console.log(e);\r\n                        rej(e);\r\n                    };\r\n                }));\r\n            };\r\n        } else {\r\n            if (this.logger) {\r\n                console.info(`no subscriber for (${_event}) event of (${_component}) component`);\r\n            };\r\n            \r\n            this.results[_component][_event] = variable;\r\n\r\n        };\r\n        \r\n        return Promise.all(execs).then(()=>{\r\n            variable = null;\r\n            execs = [];\r\n            return true;\r\n        });\r\n    });\r\n\r\n};\r\n\r\nmodule.exports = Observer;","module.exports =  function (component){\r\n    // let component = this;\r\n    // console.log(component);\r\n    // if (!component.await.$form){\r\n    //     component.await.$form = {};\r\n    // }\r\n\r\n\r\n    class Options{\r\n        constructor(type){\r\n            this.type = type;\r\n            this.storage = {};\r\n        }\r\n        store(formControl,data){\r\n            this.storage[formControl] = data;\r\n        }\r\n        get options(){\r\n            if(this.type == 'select' || this.type == 'virtual'){\r\n                let a = {};\r\n                for (let key in this.storage){\r\n                    let val = this.storage[key];\r\n                    a[key] = val.options;\r\n                };\r\n                return a;\r\n            };\r\n            return false;\r\n        }\r\n        get value(){\r\n            if(this.type == 'input'){\r\n                let a = \"\";\r\n                for (let key in this.storage){\r\n                    let val = this.storage[key];\r\n                    a = val.options[0];\r\n                };\r\n                return a;\r\n            };\r\n            return false;\r\n        }\r\n\r\n        get query(){\r\n            let a = {};\r\n            for (let key in this.storage){\r\n                let val = this.storage[key];\r\n                a = val.query[0] || null;\r\n            };\r\n            return a;\r\n        }\r\n\r\n        get has(){\r\n            let a = \"\";\r\n            for (let key in this.storage){\r\n                let val = this.storage[key];\r\n                a = val.query[0] || null;\r\n            };\r\n            return a;\r\n        }\r\n    };\r\n\r\n    const form = {};\r\n\r\n    form.options = (obj)=>{\r\n        // console.log(9, obj);\r\n        // let {options, params} = obj;\r\n        let options = obj.options;\r\n        let params = obj.params;\r\n        \r\n        if (!options) { options = [] };\r\n\r\n        // console.log(33, params);\r\n        let isgroup = options.length > 1;\r\n\r\n        let prom = Promise.all(options.map(item=>{\r\n            // let {control, field, tbl, src, schema, type} = item;\r\n\r\n            let control = item.control;\r\n            let field = item.field;\r\n            let tbl = item.tbl;\r\n            let src = item.src;\r\n            let schema = item.schema;\r\n            let type = item.type;\r\n\r\n            // console.log(schema)\r\n            // console.log(15, item);\r\n\r\n            // console.log(40,src, {tbl, field, params});\r\n            // console.trace();\r\n            return component.fire(src, {tbl, field, params}).then((opts)=>{\r\n                // console.log(18, opts);\r\n            \r\n\r\n                opts = opts || [];\r\n                item.query = opts;\r\n                // console.log(18, opts);\r\n                opts = opts.map(item=>{\r\n                    // console.log(18, item);\r\n                    return schema(item);\r\n                });\r\n\r\n                if(type != 'input'){\r\n                    /**appending empty option */\r\n                    let scheme = schema({});\r\n                    for (let key in scheme){\r\n                        if (scheme.hasOwnProperty(key)){\r\n                            scheme[key] = \"\";\r\n                        };\r\n                    };\r\n                    opts.unshift(scheme);\r\n                }\r\n                /**end */\r\n\r\n                // console.log(opts);\r\n                item.options = opts;\r\n                return item;\r\n            }).then((iter)=>{\r\n                // console.log(51, iter);\r\n                // let {type, control} = iter;\r\n                let type = iter.type;\r\n                let control = iter.control;\r\n                if (!type){\r\n                    type = 'others';\r\n                };\r\n                const cls = new Options(type);\r\n                if (isgroup){\r\n                    let o = {};\r\n                    if (!o[control]){\r\n                        o[control] = cls;\r\n                        o[control].store(control, iter);\r\n                    };\r\n                    return o;\r\n                } else {\r\n                    cls.store(control, iter);\r\n                    return cls;\r\n                };\r\n            });\r\n        })).then(res=>{\r\n            if(isgroup){\r\n                return res.reduce((accu, iter)=>{\r\n                    Object.assign(accu, iter);\r\n                    return accu;\r\n                },{});\r\n            } else {\r\n                return res[0];\r\n            }\r\n        }).catch(err=>{\r\n            console.error(err);\r\n        });\r\n\r\n        // component.await.$form.options = prom;\r\n        return prom;\r\n    };\r\n    form.plot = (config)=>{\r\n        // let {data, container} = config;\r\n\r\n        let data = config.data;\r\n        let container = config.container;\r\n\r\n        if (!data && !container) { return };\r\n        const query = (root, selector, callback)=>{\r\n            if (!root){\r\n                console.info('root is not provided!');    \r\n                return ;\r\n            }\r\n            const els = root.querySelectorAll(`${selector}`);\r\n            const len = els.length;\r\n            if (!len){\r\n                callback(null, data);\r\n                return;//exit;\r\n            }\r\n            for (let e = 0; e < len; e++){\r\n                let el = els[e];\r\n                let name = el.name;\r\n                let value = data[name];\r\n\r\n                let r = callback(el, value, e);\r\n                if (r == 'break'){break; };\r\n                if (r == 'continue'){ continue; };\r\n            };\r\n        };\r\n\r\n\r\n\r\n        query(container, 'INPUT.input', function(el, value){\r\n            if (value != undefined){\r\n                if (el.type == 'date'){\r\n                    value = new Date(value) == 'Invalid Date'?\"\":new Date(value).toJSON().split('T')[0];\r\n                    el.value = value;\r\n                } else {\r\n                    el.value = value;\r\n                }\r\n            };\r\n        })\r\n\r\n        setTimeout(()=>{\r\n            query(container, 'SELECT.input:not(.cake-template)', function(select, value){\r\n                // console.log(select);\r\n                query(select, 'OPTION:not(.cake-template)', function(option, _value, index){\r\n                    // console.log(option)\r\n                    if (option){\r\n                        if (option.value == value){\r\n                            select.selectedIndex = index;\r\n                            return 'break';\r\n                        };\r\n                    } else {\r\n                        // console.trace();\r\n                        // console.log(_value);\r\n                        console.log(option, _value, 'provide schema')\r\n                        //provide schema\r\n                    }\r\n                });\r\n            });\r\n        }, 500);\r\n\r\n        return Promise.resolve();\r\n\r\n    };\r\n\r\n    return form;\r\n};","// const mootools = require('./scripts/mootools');\r\nconst env = require('./scripts/env');\r\nconst extensions = require('./scripts/extends');\r\nconst polyfill = require('./scripts/polyfill');\r\nconst utils = require('./scripts/utils');\r\nconst templateExtend = require('./scripts/template-extend');\r\nconst plugin = require('./scripts/plugin');\r\n\r\n// const piece = require('./scripts/piece');\r\n// const observer = require('./scripts/observer');\r\n// const templating = require('./scripts/templating');\r\n// const animate = require('./scripts/animate');\r\n// const persist = require('./scripts/persist');\r\n// const hash = require('./scripts/hash');\r\n// const form = require('./scripts/form');\r\n\r\n\r\n// const storageKit = require('./scripts/storage')();\r\n// const scope = require('./scripts/scope')();\r\n// const router = require('./scripts/router')();\r\n// const attributes = require('./scripts/attributes');\r\n// const component = require('./scripts/component');\r\n\r\nconst cake = require('./scripts/cake');\r\n\r\nwindow.Cake = cake;\r\n\r\n\r\n\r\n"],"names":["$770d5ac834b029d1$var$StorageKit","parcelRequire","module","exports","dependency","_hooks","constructor","name","this","reactiveData","notify","install","pKeys","sanitize","data","map","replace","match","registerNotifier","fn","push","session","child","storage","notifier","component","obj","value","bind","set","getInputData","type","_component","JSON","parse","stringify","key","formData","FormData","append","hook","callback","get","quick","pkey","Promise","async","res","rej","createOrUpdate","then","all","cb1","hooks","callbacks","forEach","cb","$gt3cs","typeOf","_obj","toLowerCase","ObjectForEach","hasOwnProperty","isNull","d","isObject","src","id","has","i","length","item","Object","keys","hasInArray","_key","undefined","hasInObject","unique","Set","add","Array","from","hasItem","includes","assign","ObjectMerge","arr","filter","contains","some","_value","storageType","err","sessionStorage","clear","localStorage","Error","instanceID","cache","save","recache","init","array","create","object","issave","setItem","open","methods","resolve","update","close","arguments","$bfd1d63cb03efb54$var$global","$bfd1d63cb03efb54$var$TYPES","typeof","ctx","Function","HTMLCollection","NodeList","Element","isArray","isNumber","isString","isHTMLCollection","isNodeList","isElement","isFunction","$bfd1d63cb03efb54$var$LOOP","each","a","st","index","r","reduce","accu","$bfd1d63cb03efb54$var$STRING","removeWhiteSpace","str","String","split","join","$bfd1d63cb03efb54$var$OTHERS","perf","console","time","timeEnd","logTest","ops","b","err1","toUrlSearchParams","istrim","searchParams","val","toString","encodeURI","slice","string","exclude","toFormData","form","options","controls","textareas","querySelectorAll","inputs","selects","loop","cont","o","i1","control","element","closest","tagName","getAttribute","checked","json","trim","fd","splitBySpace","toArray","arrayLike","timeOut","setTimeout","location","origin","recurse","l","rec","message","browser","window","_browser","isOpera","opr","addons","opera","navigator","userAgent","indexOf","isFirefox","InstallTrigger","isSafari","test","HTMLElement","safari","pushNotification","isIE","document","documentMode","isEdge","StyleMedia","isChrome","chrome","webstore","isBlink","CSS","device","isAndroid","isIOS","isDesktop","escapeRegExp","text","UTILS","$bfd1d63cb03efb54$var$iter","global","env","destructure","prototype","ObjectType","caching","toHyphen","_StringCache","cvt","splitted","ss","s","charCodeAt","toProper","first","substring","rest","proper","toUpperCase","removeSpace","toCamelCase","toCamel","querySelectorIncluded","selector","attr","q","querySelector","qu","querySelectorAllIncluded","dataset","HTMLDocument","toggler","dataName","activeClass","t","node","classList","toggle","Ref","n","_cakes_storage","getAll","remove","replaceDataSrc","srcs","el","setAttribute","removeAttribute","keep","path","rawdirs","dirs","ins","prop","orig","dir","concat","customElements","define","super","connectedCallback","subTemplate","ref","template","refEl","getElementsByName","error","temp","content","cloneNode","firstElementChild","attrs","attributes","replaceWith","HTMLTemplateElement","replaceSubTemplate","subTemplates","getElementsByTagName","collectContent","cf","fr","createDocumentFragment","styles","appendChild","others","children","style","parseStyle","textContent","splitted1","sp1","_sp1","sel","sp","parseHTML","parent","createElement","other","getContent","isConvert","_collectedContent","query","css","innerHTML","$0c161eb42395eace$exports","plugins","$6ff1dddcca047c5f$var$Templating","tag","lefttag","righttag","_getTag","RegExp","_bindReplace","pattern","replaceString","_toElement","outerHTML","els","dd","bindData","$6ff1dddcca047c5f$exports","$bd6e3af19c3089cc$export$44487a86467333c3","$bd6e3af19c3089cc$export$2eaf9172a83ee9e7","$bd6e3af19c3089cc$export$c1fdfb880e73617c","$9aad503960891367$var$getConfig","newValue","prevValue","$9aad503960891367$var$extendConfig","config","configs","cloned1","cl","iter","incrementedSels","ic","cloned","incrementedSel","$9aad503960891367$exports","html","hasNegate","testVal","attrkey","attrvalue","incrementId","$f2c31f1cfb9791bb$var$getConfig","$f2c31f1cfb9791bb$var$extendConfig","$f2c31f1cfb9791bb$exports","c","attrHyphen","p","cls","$1edb902494153d1c$var$getConfig","$1edb902494153d1c$var$extendConfig","$1edb902494153d1c$exports","className","$49b8b6aaaa81d787$var$Piece","e","getElements","getElement","fg","getContainers","getElementsByDataset","container","getAllElements","appendTo","root","cleaned","TypeError","i2","getElementById","ids","toArra","arg","$49b8b6aaaa81d787$exports","$acaf0fc28d98c7e8$var$getConfig","$acaf0fc28d98c7e8$var$updateConfig","$acaf0fc28d98c7e8$exports","component1","templating","attrPayload","targets","target","binded","forUpdateBind","forTemplate","removeProperty","dataForIteration","lt","logicalType","logicalHtml","hit","getWatchItemsBySel","_type","insertAdjacentElement","parentElement","selectedIndex","payload","$b7afd07fa1fa5282$var$storage","$b7afd07fa1fa5282$var$subscribeExternal","original","listenTo","Subscribe","ComponentStorage","$b7afd07fa1fa5282$exports","subscribe","lk","setInterval","clearInterval","componentName","$94f6dc4b55836b8a$var$getConfig","$94f6dc4b55836b8a$exports","sts","switchConfig","data1","sel1","hasReplaced","increment","key1","conf","rawsel","__sel","for","item1","template1","cases","mapping","switchElement","hitCase","find","item2","_id","create1","cf1","forAutoElement","forAutoBindKey","forAutoBindValue","iteration","forIter","datas","select","$dbc109cf07545062$var$getConfig","$dbc109cf07545062$var$extendConfig","$dbc109cf07545062$exports","testval","_true","_false","trueNotIgnore","falseNotIgnore","trueClasses","falseClasses","$d86bc183359d6948$var$getConfig","$d86bc183359d6948$exports","$c466dd40da9c5d97$var$getConfig","$c466dd40da9c5d97$var$extendConfig","$c466dd40da9c5d97$exports","sub","$9c264694780fd535$var$ComponentAttribStorage","store","$2868b0ea49d6a995$var$Attrib","uiid","$9c264694780fd535$exports","store1","store2","notifyFor","notifyForUpdate","notifyClass","notifyBind","notifyAttr","notifyIf","notifyModel","notifyToggle","val1","equiv","forUpdate","if","class","hits1","hits","actions","action","vals","v","getEventTarget","evt","getRouterTarget","router","getWatchItems","_st","tst","wt","getConfig","getWatchItemsByType","_activateReactive","_register","f","_static","qs","isStatic","dComponent","_compileEvents","events","event","_compileToggle","toggles","ns","_compileFor","fors","el1","autoBind","forAutoBind","isCleaned","forCleaned","autoBindKey","autoBindValue","display","parentIsFor","parentCf","_compileForUpdate","_compileSwitch","switchs","switch","casesId","_case","caseBind","case","_compileBind","elModels","g","gr","_compileAnimate","anims1","anim","animate","anims","keyframes","_compileIf","ifs","regex","_if","_ifBind","ifBind","exp","_sp2","hasRegularLog","_compileClass","cls1","bindVal","hasNegateCount","_compileAttr","attrPair","_compileModel","nodeType","model","inject","apply","$0c35ff6400a4adf8$var$Scope","$77e7fadfd75a0125$exports","duration","moment","k","kk","dic","offset","def","recurseCall","kf","finished","onfinish","slideOutUp","transform","visibility","opacity","easing","slideOutRight","slideOutLeft","slideOutDown","slideInUp","slideInRight","slideInLeft","slideInDown","disappear","appear","flipInX","backfaceVisibility","$7a3d6a7c2b52e326$var$Component","handlers","items","animateOptions","role","isReady","scope","formSelector","await","state","originalState","utils","staticComponent","static","compile","_bindHandlers","_bindSubscribe","cloneState","createElementAsync","hasEvent","isConnected","destroyed","isCreated","$state","clearState","handler","$observer","registerSubscribe","Node","originalName","initAwaitHandlers","destroy","animateRemove","handlerName","flattened","components","fns","doFor","$attrib","getHTML","doToggle","doSwitch","notifySwitch","doIf","$animate","ata","da","at","$templating","substr","isTemplate","cake_component","_parseHTML","_isParsed","render","emit","multiple","fire","forItems","getValue","beforeConnected","findContainer","log","findTarget","addEvent","_smoothReset","_watchReactive","renderAsync","$persist","_hardReset","reset","isPreventDefault","isStopPropagation","preventDefault","stopPropagation","Cake","Observer","event1","_event","place","addEventListener","_this1","bases","_this","$cache","attrToggle","check","basis","mode","persist","_forceState","isforce","isbool","isforce1","next","prev","result","_toggle","_recall","containers","_validator","validate","watch","validator","$form","_reactive","handler1","$scope","observer","variable","$7b7f5ba599de458a$var$authCredential","$7b7f5ba599de458a$exports","components1","routes","unauthRoute","authRoute","route","defineProperty","configurable","goTo","goBack","auth","logout","authenticate","initialize","cred","user","token","routeName","params","isreplace","hash","raw","entries","pathname","loc","history","replaceState","href","pushState","click","back","hasRouterPersist","navigate","hasRouterPop","con","len","param","paramKey","scheme","url","URL","search","URLSearchParams","overlay","onrender","_path","ispersist","recur","catch","notused","promise","componentNames","sourceComponents","self","destroyPromise","$47f37c8cb66d818f$var$StorageKit","$47f37c8cb66d818f$exports","listen","$0c35ff6400a4adf8$var$StorageKit","$edd71cda6e394810$var$stat","$edd71cda6e394810$var$set","Stat","$edd71cda6e394810$exports","table","$24b96e0035a9a1c4$var$subscriber","$24b96e0035a9a1c4$exports","$6d1c0daae507feda$var$handler","$4ae87a85ca06a0c4$var$Observer","logger","results","Handler","$6d1c0daae507feda$exports","_handler","e1","_e","prom","execs","exec","info","$0c35ff6400a4adf8$var$Cake","$cffd8b2b01768156$exports","Options","formControl","isgroup","field","tbl","schema","type1","opts","unshift","Date","toJSON","option","app","Components","name1","subscribeExternal","Models","plugin","Attributes","$2868b0ea49d6a995$exports","$loaded","mk","MainMessageChannel","channel","MessageChannel","send","port2","postMessage","receive","port1","onmessage","isTrusted","status","Utils","scopeTrap","scopeNotifier","m","$7a3d6a7c2b52e326$exports","Router","Persistent","Cache","getSubscriber","h","hs","h1","$4ae87a85ca06a0c4$exports","_defineProperty","_globalScope","_universalScope","$universalScope","Hasher","name2","_root","method","fire1","name3","getAttributes","attribute","isBroadcast","trace","addStaticMethod","$0c35ff6400a4adf8$exports"],"version":3,"file":"modern.js.map"}